{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Roster | Docs From The Source Roster is a PHP command line program that allows you to build documentation from your code. It inspects the files in your codebase and looks at the PHPDoc comments associated with them, and then builds documentation in Markdown. But it doesn't have to. The nice thing about Roster is that you can export the documentation however you please. It comes pre-configured with templates for Markdown, but it has a templating engine built in, so if you want to export the docs in a different format it's pretty simple to do (even if it would probably take some time). Built-In Integration With MkDocs The python program MkDocs is a great way to write documentation in Markdown and then export it to Github pages. The workflow is extremely simple, and if you're unfamiliar I highly encourage you to take a look. The good news is that Roster includes a set of templates that will build out this exact documentation formatting you see here. Simply call Roster with the --mkdocs flag, and it will not only build the Markdown files, but also build your mkdocs.yml and requirements.txt files, as well as exporting a copy of the CSS used in this documentation. See Also For more information on how to use the command, see the Using the Command page. PHP 8 Ready Or rather, PHP 8 only . There are lots of programs that can't move to PHP 8 quite yet, but your documentation can benefit from PHP 8 before your codebase does. Simply call the roster command using a PHP 8 binary from your development box, no need to upgrade your servers. See Also For more information on installation and usage requirements, see the Installation page. Bleeding Edge This program is in very early release Roster has only been in development for a few weeks, so there are bound to be edge cases, quirks, and bugs that haven't been worked out. If you spot any, please make a bug report . The nice thing is, even if there are bugs, they won't affect your program. We're only building the documentation files after all!","title":"Home"},{"location":"#roster-docs-from-the-source","text":"Roster is a PHP command line program that allows you to build documentation from your code. It inspects the files in your codebase and looks at the PHPDoc comments associated with them, and then builds documentation in Markdown. But it doesn't have to. The nice thing about Roster is that you can export the documentation however you please. It comes pre-configured with templates for Markdown, but it has a templating engine built in, so if you want to export the docs in a different format it's pretty simple to do (even if it would probably take some time).","title":"Roster | Docs From The Source"},{"location":"getting-started/installation/","text":"Installing Roster Roster is available through composer. To install, you can use the following command from the command-line: composer require-dev \"samsara/roster:^0.1\" Or you can add the following entry to your project's composer.json file: 1 { 2 \"require-dev\" : { 3 \"samsara/roster\" : \"^0.1\" 4 } 5 } Dependencies This program requires the samsara/mason and symfony/console packages. These are automatically resolved through composer. Additionally, PHP 8 is required to use this tool . I know that a lot of people haven't migrated yet, but it offers some great features, and to use this program you only need to install it on your dev box, not your application server.","title":"Installation"},{"location":"getting-started/installation/#installing-roster","text":"Roster is available through composer. To install, you can use the following command from the command-line: composer require-dev \"samsara/roster:^0.1\" Or you can add the following entry to your project's composer.json file: 1 { 2 \"require-dev\" : { 3 \"samsara/roster\" : \"^0.1\" 4 } 5 }","title":"Installing Roster"},{"location":"getting-started/using-the-command/","text":"Using the Command The most basic usage of the command from the CLI would be: php vendor/bin/roster src Assuming that 'src' is your root sources directory. Options The basic format with options looks like this: php vendor/bin/roster [SOURCE_DIR] [OPTIONS] There are several options currently available on the command. --templates|-t default 'doc-templates/roster-templates' This option allows you to specify a path to alternative templates if you've created your own. This option is ignored if you use the --mkdocs option. NOTE: You must have created your own version of every template file in order to use a different template directory. I'd suggest starting by copying the 'vendor/samsara/roster/docs/doc-templates/roster-templates' folder and making changes. The templating tokens are currently undocumented. --visibility default 'all' values 'all', 'protected', 'public' This option controls which visibility levels get included in the documentation. The setting tells the program what the highest level of visibility is that will be included. So using this option with 'public' will mean that only public methods and parameters are included in the documentation. --prefer-source default false This option controls whether or not Roster trusts the source files or the PHPDoc comments when the two have conflicting information. As the PHPDoc comments have access to a greater variety of data, including things like generic types that are not available in PHP currently, by default the comments are preferred. --with-version default null This option lets you specify a version number. The documentation will be exported into a folder with that name, making it easy to switch tags and then rebuild your docs for multiple versions. If this option is omitted, Roster will look in your composer.json file for a \"version\" value. If it can't find one there, the docs will be exported into the folder 'docs/roster/latest' --with-debug default false This option currently does nothing, but as Roster continue to improve more debugging information will become available during execution. --mkdocs default false This option ignores your templates if you've provided any and builds the documentation so that it's ready for you to immediately run the mkdocs gh-deploy command on it. It uses the doc templates stored in the vendor folder under 'doc-templates/roster-templates-mkdocs'. NOTE: MkDocs requires python, and the templates that are built additionally require the 'pymdown-extensions' module.","title":"Using the Command"},{"location":"getting-started/using-the-command/#using-the-command","text":"The most basic usage of the command from the CLI would be: php vendor/bin/roster src Assuming that 'src' is your root sources directory.","title":"Using the Command"},{"location":"getting-started/using-the-config-file/","text":"Using the Config File If there is a roster.json file in your project root, Roster will attempt to use that file to configure the documentation build. You can also specify a config file using the --config-file option. Configuration Schema The repository contains a JSON Schema definition, in JSON Schema version 7. This file can be downloaded from here: https://raw.githubusercontent.com/JordanRL/Roster/master/roster-config-schema.config.json This can be used to help your IDE validate your configuration file as you create it. Example Config File With All Options Below is an example config file with all options given values to illustrate how the config file can be written. 1 { 2 \"prefer-source\" : false , 3 \"with-version\" : \"v0.2\" , 4 \"templates\" : \"doc-templates/roster-templates-mkdocs\" , 5 \"mkdocs\" : { 6 \"site-name\" : \"Roster - Docs From The Source\" , 7 \"site-url\" : \"https://jordanrl.github.io/Roster/\" , 8 \"repo-url\" : \"https://github.com/JordanRL/Roster/\" , 9 \"theme\" : \"sphinx-rtd\" , 10 \"auto-deploy\" : true , 11 \"merge-nav\" : true , 12 \"merge-nav-mode\" : \"replace-nav-key\" , 13 \"nav-key\" : \"Source Reference\" 14 }, 15 \"sources\" : [ 16 { 17 \"path\" : \"./src\" , 18 \"visibility\" : \"protected\" , 19 \"aliases\" : [ 20 { 21 \"namespace\" : \"Samsara\\\\Roster\\\\\" , 22 \"alias\" : \"Core\\\\\" 23 } 24 ] 25 }, 26 { 27 \"path\" : \"../RosterModule/src\" , 28 \"visibility\" : \"public\" , 29 \"aliases\" : [ 30 { 31 \"namespace\" : \"Samsara\\\\Roster\\\\\" , 32 \"alias\" : \"Module\\\\\" 33 } 34 ] 35 } 36 ] 37 }","title":"Using the Config File"},{"location":"getting-started/using-the-config-file/#using-the-config-file","text":"If there is a roster.json file in your project root, Roster will attempt to use that file to configure the documentation build. You can also specify a config file using the --config-file option.","title":"Using the Config File"},{"location":"roster/v0.2/Fermat/Collections/","text":"Samsara\\Fermat > Collections No description available This documentation was generated with Roster .","title":"Samsara\\Fermat > Collections"},{"location":"roster/v0.2/Fermat/Collections/#samsarafermat-collections","text":"No description available This documentation was generated with Roster .","title":"Samsara\\Fermat &gt; Collections"},{"location":"roster/v0.2/Fermat/Numbers/","text":"Samsara\\Fermat > Numbers No description available Variables & Data Class Constants Numbers::MUTABLE value 'Samsara\\Fermat\\Values\\MutableDecimal' Numbers::IMMUTABLE value 'Samsara\\Fermat\\Values\\ImmutableDecimal' Numbers::MUTABLE_FRACTION value 'Samsara\\Fermat\\Values\\MutableFraction' Numbers::IMMUTABLE_FRACTION value 'Samsara\\Fermat\\Values\\ImmutableFraction' Numbers::PI value '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679' Numbers::TAU value '6.283185307179586476925286766559005768394338798750211641949889184615632812572417997256069650684234136' Numbers::E value '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427' Numbers::GOLDEN_RATIO value '1.618033988749894848204586834365638117720309179805762862135448622705260462818902449707207204189391137' Numbers::LN_10 value '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298' Numbers::I_POW_I value '0.2078795763507619085469556198349787700338778416317696080751358830554198772854821397886002778654260353' Methods Static Methods public Numbers::make($type, $value, int|null $scale, int $base) $type description No description available $value description No description available $scale type int|null description No description available $base type int description return type ImmutableDecimal|MutableDecimal|ImmutableFraction|MutableFraction|NumberInterface|FractionInterface description No description available public Numbers::makeFromBase10($type, $value, int|null $scale, int $base) $type description No description available $value description No description available $scale type int|null description No description available $base type int description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public Numbers::makeOrDont(string|object $type, int|float|string|array|NumberInterface|DecimalInterface|FractionInterface $value, int|null $scale, int $base) $type type string|object description No description available $value type int|float|string|array|NumberInterface|DecimalInterface|FractionInterface description No description available $scale type int|null description No description available $base type int description return type ImmutableDecimal|MutableDecimal|NumberInterface|ImmutableDecimal[]|MutableDecimal[]|NumberInterface[] description No description available public Numbers::makeFractionFromString(string $type, string $value, int $base) $type type string description No description available $value type string description No description available $base type int description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\FractionInterface description No description available public Numbers::makePi(int|null $scale) $scale type int|null description return type DecimalInterface description No description available public Numbers::makeTau(int|null $scale) $scale type int|null description return type DecimalInterface description No description available public Numbers::make2Pi(int|null $scale) $scale type int|null description return type DecimalInterface description No description available public Numbers::makeE(int|null $scale) $scale type int|null description return type DecimalInterface description No description available public Numbers::makeGoldenRatio(int|null $scale) $scale type int|null description return type NumberInterface description No description available public Numbers::makeNaturalLog10(int|null $scale) $scale type int|null description return type NumberInterface description No description available public Numbers::makeOne(int|null $scale) $scale type int|null description return type ImmutableDecimal description No description available public Numbers::makeZero(int|null $scale) $scale type int|null description return type ImmutableDecimal description No description available public Numbers::getDefaultCalcMode() return type int description No description available public Numbers::setDefaultCalcMode(int $mode) $mode type int description No description available return type void description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat > Numbers"},{"location":"roster/v0.2/Fermat/Numbers/#samsarafermat-numbers","text":"No description available","title":"Samsara\\Fermat &gt; Numbers"},{"location":"roster/v0.2/Fermat/Provider/ArithmeticProvider/","text":"Samsara\\Fermat\\Provider > ArithmeticProvider No description available Methods Static Methods public ArithmeticProvider::add(string $number1, string $number2, $scale) $number1 type string description No description available $number2 type string description No description available $scale description No description available return type mixed (assumed) description No description available public ArithmeticProvider::subtract(string $left, string $right, $scale) $left type string description No description available $right type string description No description available $scale description No description available return type mixed (assumed) description No description available public ArithmeticProvider::multiply(string $number1, string $number2, $scale) $number1 type string description No description available $number2 type string description No description available $scale description No description available return type mixed (assumed) description No description available public ArithmeticProvider::divide(string $numerator, string $denominator, $scale) $numerator type string description No description available $denominator type string description No description available $scale description No description available return type mixed (assumed) description No description available public ArithmeticProvider::pow(string $base, string $exponent, $scale) $base type string description No description available $exponent type string description No description available $scale description No description available return type mixed (assumed) description No description available public ArithmeticProvider::squareRoot(string $number, $scale) $number type string description No description available $scale description No description available return type mixed (assumed) description No description available public ArithmeticProvider::modulo(string $number, $modulo) $number type string description No description available $modulo description No description available return type mixed (assumed) description No description available public ArithmeticProvider::compare(string $left, string $right, $scale) $left type string description No description available $right type string description No description available $scale description No description available return type mixed (assumed) description No description available public ArithmeticProvider::powmod(string $left, string $right, string $modulus, $scale) $left type string description No description available $right type string description No description available $modulus type string description No description available $scale description No description available return type mixed (assumed) description No description available public ArithmeticProvider::factorial(string $number, int $scale) $number type string description No description available $scale type int description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Provider > ArithmeticProvider"},{"location":"roster/v0.2/Fermat/Provider/ArithmeticProvider/#samsarafermatprovider-arithmeticprovider","text":"No description available","title":"Samsara\\Fermat\\Provider &gt; ArithmeticProvider"},{"location":"roster/v0.2/Fermat/Provider/ConstantProvider/","text":"Samsara\\Fermat\\Provider > ConstantProvider No description available Methods Static Methods public ConstantProvider::makePi(int $digits) $digits type int description No description available return type string description No description available public ConstantProvider::makeE(int $digits) $digits type int description No description available return type string description No description available ConstantProvider::makeE Description Consider also: sum [0 -> INF] { (2n + 2) / (2n + 1)! } This converges faster (though it's unclear if the calculation is actually faster), and can be represented by this set of Fermat calls: SequenceProvider::nthEvenNumber($n + 1)->divide(SequenceProvider::nthOddNumber($n)->factorial()); Perhaps by substituting the nthOddNumber()->factorial() call with something tracked locally, the performance can be improved. Current performance is acceptable even out past 200 digits. This documentation was generated with Roster .","title":"Samsara\\Fermat\\Provider > ConstantProvider"},{"location":"roster/v0.2/Fermat/Provider/ConstantProvider/#samsarafermatprovider-constantprovider","text":"No description available","title":"Samsara\\Fermat\\Provider &gt; ConstantProvider"},{"location":"roster/v0.2/Fermat/Provider/RandomProvider/","text":"Samsara\\Fermat\\Provider > RandomProvider No description available Variables & Data Class Constants RandomProvider::MODE_ENTROPY value 1 RandomProvider::MODE_SPEED value 2 Methods Static Methods public RandomProvider::randomInt(int|string|DecimalInterface $min, int|string|DecimalInterface $max, int $mode) $min type int|string|DecimalInterface description No description available $max type int|string|DecimalInterface description No description available $mode type int description No description available return type Samsara\\Fermat\\Values\\ImmutableDecimal description No description available public RandomProvider::randomDecimal(int $scale, int $mode) $scale type int description No description available $mode type int description No description available return type Samsara\\Fermat\\Values\\ImmutableDecimal description No description available public RandomProvider::randomReal(int|string|DecimalInterface $min, int|string|DecimalInterface $max, int $scale, int $mode) $min type int|string|DecimalInterface description No description available $max type int|string|DecimalInterface description No description available $scale type int description No description available $mode type int description No description available return type Samsara\\Fermat\\Values\\ImmutableDecimal description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Provider > RandomProvider"},{"location":"roster/v0.2/Fermat/Provider/RandomProvider/#samsarafermatprovider-randomprovider","text":"No description available","title":"Samsara\\Fermat\\Provider &gt; RandomProvider"},{"location":"roster/v0.2/Fermat/Provider/RoundingProvider/","text":"Samsara\\Fermat\\Provider > RoundingProvider No description available Variables & Data Class Constants RoundingProvider::MODE_HALF_UP value 1 RoundingProvider::MODE_HALF_DOWN value 2 RoundingProvider::MODE_HALF_EVEN value 3 RoundingProvider::MODE_HALF_ODD value 4 RoundingProvider::MODE_HALF_ZERO value 5 RoundingProvider::MODE_HALF_INF value 6 RoundingProvider::MODE_CEIL value 7 RoundingProvider::MODE_FLOOR value 8 RoundingProvider::MODE_RANDOM value 9 RoundingProvider::MODE_ALTERNATING value 10 RoundingProvider::MODE_STOCHASTIC value 11 Methods Static Methods public RoundingProvider::setRoundingMode(int $mode) $mode type int description No description available return type void description No description available public RoundingProvider::getRoundingMode() return type int description No description available public RoundingProvider::round(Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface $decimal, int $places) $decimal type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available $places type int description No description available return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Provider > RoundingProvider"},{"location":"roster/v0.2/Fermat/Provider/RoundingProvider/#samsarafermatprovider-roundingprovider","text":"No description available","title":"Samsara\\Fermat\\Provider &gt; RoundingProvider"},{"location":"roster/v0.2/Fermat/Provider/SequenceProvider/","text":"Samsara\\Fermat\\Provider > SequenceProvider No description available Variables & Data Class Constants SequenceProvider::EULER_ZIGZAG value array (0 => '1',1 => '1',2 => '1',3 => '2',4 => '5',5 => '16',6 => '61',7 => '272',8 => '1385',9 => '7936',10 => '50521',11 => '353792',12 => '2702765',13 => '22368256',14 => '199360981',15 => '1903757312',16 => '19391512145',17 => '209865342976',18 => '2404879675441',19 => '29088885112832',20 => '370371188237525',21 => '4951498053124096',22 => '69348874393137901',23 => '1015423886506852352',24 => '15514534163557086905',25 => '246921480190207983616',26 => '4087072509293123892361',27 => '70251601603943959887872',28 => '1252259641403629865468285',29 => '23119184187809597841473536',30 => '441543893249023104553682821',31 => '8713962757125169296170811392',32 => '177519391579539289436664789665',33 => '3729407703720529571097509625856',34 => '80723299235887898062168247453281',35 => '1798651693450888780071750349094912',36 => '41222060339517702122347079671259045',37 => '970982810785059112379399707952152576',38 => '23489580527043108252017828576198947741',39 => '583203324917310043943191641625494290432',40 => '14851150718114980017877156781405826684425',41 => '387635983772083031828014624002175135645696',42 => '10364622733519612119397957304745185976310201',43 => '283727921907431909304183316295787837183229952',44 => '7947579422597592703608040510088070619519273805',45 => '227681379129930886488600284336316164603920777216',46 => '6667537516685544977435028474773748197524107684661',47 => '199500252157859031027160499643195658166340757225472',48 => '6096278645568542158691685742876843153976539044435185',49 => '190169564657928428175235445073924928592047775873499136',50 => '6053285248188621896314383785111649088103498225146815121',) Methods Static Methods public SequenceProvider::nthOddNumber(int $n, bool $asCollection, int $collectionSize) $n type int description No description available $asCollection type bool description No description available $collectionSize type int description return type DecimalInterface|NumberInterface|NumberCollection description No description available SequenceProvider::nthOddNumber Description OEIS: A005408 public SequenceProvider::nthEvenNumber(int $n, bool $asCollection, int $collectionSize) $n type int description No description available $asCollection type bool description No description available $collectionSize type int description return type DecimalInterface|NumberInterface|NumberCollection description No description available SequenceProvider::nthEvenNumber Description OEIS: A005843 public SequenceProvider::nthPowerNegativeOne(int $n, bool $asCollection, int $collectionSize) $n type int description No description available $asCollection type bool description No description available $collectionSize type int description return type DecimalInterface|NumberInterface|NumberCollection description No description available SequenceProvider::nthPowerNegativeOne Description OEIS: A033999 public SequenceProvider::nthEulerZigzag(int $n, bool $asCollection, int $collectionSize) $n type int description No description available $asCollection type bool description No description available $collectionSize type int description return type DecimalInterface|NumberInterface|NumberCollection description No description available SequenceProvider::nthEulerZigzag Description OEIS: A000111 public SequenceProvider::nthBernoulliNumber($n) $n description return type DecimalInterface|NumberInterface description No description available SequenceProvider::nthBernoulliNumber Description WARNING: This function is VERY unoptimized. Be careful of large m values. public SequenceProvider::nthFibonacciNumber(int $n, bool $asCollection, int $collectionSize) $n type int description No description available $asCollection type bool description No description available $collectionSize type int description return type ImmutableDecimal|NumberCollection description No description available SequenceProvider::nthFibonacciNumber Description OEIS: A000045 This uses an implementation of the fast-doubling Karatsuba multiplication algorithm as described by 'Nayuki': https://www.nayuki.io/page/fast-fibonacci-algorithms This documentation was generated with Roster .","title":"Samsara\\Fermat\\Provider > SequenceProvider"},{"location":"roster/v0.2/Fermat/Provider/SequenceProvider/#samsarafermatprovider-sequenceprovider","text":"No description available","title":"Samsara\\Fermat\\Provider &gt; SequenceProvider"},{"location":"roster/v0.2/Fermat/Provider/SeriesProvider/","text":"Samsara\\Fermat\\Provider > SeriesProvider No description available Methods Static Methods public SeriesProvider::maclaurinSeries(SimpleNumberInterface $input, callable $numerator, callable $exponent, callable $denominator, int $startTermAt, int $scale, int $consecutiveDivergeLimit, int $totalDivergeLimit) $input type SimpleNumberInterface description No description available $numerator type callable description No description available $exponent type callable description No description available $denominator type callable description No description available $startTermAt type int description No description available $scale type int description No description available $consecutiveDivergeLimit type int description No description available $totalDivergeLimit type int description return type Samsara\\Fermat\\Values\\ImmutableDecimal description No description available SeriesProvider::maclaurinSeries Description Creates a series that evaluates the following: SUM[$startTerm -> infinity]( numerator($n) \u00d7 $input^$exponent($n) denominator($n) Where $n is the current term number, starting at $startTerm, and increasing by 1 each loop; where $numerator, exponent, and $denominator are callables that take the term number (as an int) as their only input, and give the value of that section at that term number; and where $input is the x value being considered for the series. The function continues adding terms until a term has MORE leading zeros than the $scale setting. (That is, until it adds zero to the total when considering significant digits.) This documentation was generated with Roster .","title":"Samsara\\Fermat\\Provider > SeriesProvider"},{"location":"roster/v0.2/Fermat/Provider/SeriesProvider/#samsarafermatprovider-seriesprovider","text":"No description available","title":"Samsara\\Fermat\\Provider &gt; SeriesProvider"},{"location":"roster/v0.2/Fermat/Provider/TrigonometryProvider/","text":"Samsara\\Fermat\\Provider > TrigonometryProvider No description available Methods Static Methods public TrigonometryProvider::radiansToDegrees($radians) $radians description return type string description No description available public TrigonometryProvider::degreesToRadians($degrees) $degrees description return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Provider > TrigonometryProvider"},{"location":"roster/v0.2/Fermat/Provider/TrigonometryProvider/#samsarafermatprovider-trigonometryprovider","text":"No description available","title":"Samsara\\Fermat\\Provider &gt; TrigonometryProvider"},{"location":"roster/v0.2/Fermat/Renderer/KatexRenderer/","text":"Samsara\\Fermat\\Renderer > KatexRenderer No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Renderer > KatexRenderer"},{"location":"roster/v0.2/Fermat/Renderer/KatexRenderer/#samsarafermatrenderer-katexrenderer","text":"No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Renderer &gt; KatexRenderer"},{"location":"roster/v0.2/Fermat/Renderer/Components/Interfaces/ComponentInterface/","text":"Samsara\\Fermat\\Renderer\\Components\\Interfaces > ComponentInterface No description available Methods Instanced Methods public ComponentInterface->getOutput() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Renderer\\Components\\Interfaces > ComponentInterface"},{"location":"roster/v0.2/Fermat/Renderer/Components/Interfaces/ComponentInterface/#samsarafermatrenderercomponentsinterfaces-componentinterface","text":"No description available","title":"Samsara\\Fermat\\Renderer\\Components\\Interfaces &gt; ComponentInterface"},{"location":"roster/v0.2/Fermat/Renderer/Components/Operations/PowOperation/","text":"Samsara\\Fermat\\Renderer\\Components\\Operations > PowOperation No description available Inheritance Implements ComponentInterface namespace Samsara\\Fermat\\Renderer\\Components\\Interfaces description No description available Methods Constructor public PowOperation->__construct(Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface|Samsara\\Fermat\\Renderer\\Components\\Interfaces\\ComponentInterface $left, Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface|Samsara\\Fermat\\Renderer\\Components\\Interfaces\\ComponentInterface $right) $left type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface|Samsara\\Fermat\\Renderer\\Components\\Interfaces\\ComponentInterface description No description available $right type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface|Samsara\\Fermat\\Renderer\\Components\\Interfaces\\ComponentInterface description No description available return type mixed (assumed) description No description available Instanced Methods public PowOperation->getOutput() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Renderer\\Components\\Operations > PowOperation"},{"location":"roster/v0.2/Fermat/Renderer/Components/Operations/PowOperation/#samsarafermatrenderercomponentsoperations-powoperation","text":"No description available","title":"Samsara\\Fermat\\Renderer\\Components\\Operations &gt; PowOperation"},{"location":"roster/v0.2/Fermat/Renderer/Components/Symbols/ThetaSymbol/","text":"Samsara\\Fermat\\Renderer\\Components\\Symbols > ThetaSymbol No description available Inheritance Implements ComponentInterface namespace Samsara\\Fermat\\Renderer\\Components\\Interfaces description No description available Methods Instanced Methods public ThetaSymbol->getOutput() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Renderer\\Components\\Symbols > ThetaSymbol"},{"location":"roster/v0.2/Fermat/Renderer/Components/Symbols/ThetaSymbol/#samsarafermatrenderercomponentssymbols-thetasymbol","text":"No description available","title":"Samsara\\Fermat\\Renderer\\Components\\Symbols &gt; ThetaSymbol"},{"location":"roster/v0.2/Fermat/Types/Decimal/","text":"Samsara\\Fermat\\Types > Decimal No description available Inheritance Extends Samsara\\Fermat\\Types\\Base\\Number Implements Hashable namespace Ds description Hashable is an interface which allows objects to be used as keys. It\u2019s an alternative to spl_object_hash(), which determines an object\u2019s hash based on its handle: this means that two objects that are considered equal by an implicit definition would not treated as equal because they are not the same instance. NumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Stringable namespace description No description available DecimalInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available BaseConversionInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Characteristics description No description available SimpleNumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Has Traits ArithmeticSimpleTrait namespace Samsara\\Fermat\\Types\\Traits description No description available ComparisonTrait namespace Samsara\\Fermat\\Types\\Traits description No description available IntegerMathTrait namespace Samsara\\Fermat\\Types\\Traits description No description available TrigonometryTrait namespace Samsara\\Fermat\\Types\\Traits\\Decimal description No description available InverseTrigonometryTrait namespace Samsara\\Fermat\\Types\\Traits\\Decimal description No description available LogTrait namespace Samsara\\Fermat\\Types\\Traits\\Decimal description No description available ScaleTrait namespace Samsara\\Fermat\\Types\\Traits\\Decimal description No description available Variables & Data Class Constants Decimal::INFINITY value 'INF' Decimal::NEG_INFINITY value '-INF' Methods Constructor public Decimal->__construct($value, $scale, $base, bool $baseTenInput) $value description No description available $scale description No description available $base description No description available $baseTenInput type bool description No description available return type mixed (assumed) description No description available Instanced Methods public Decimal->modulo($mod) $mod description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->getBase() return type int description No description available Decimal->getBase Description Returns the current base that the value is in. public Decimal->getAsBaseTenRealNumber() return type string description No description available public Decimal->getValue($base) $base description No description available return type string description No description available public Decimal->compare(NumberInterface|int|float|string $value) $value type NumberInterface|int|float|string description No description available return type int description No description available Decimal->compare Description Returns the sort compare integer (-1, 0, 1) for the two numbers. public Decimal->convertToBase($base) $base description No description available return type NumberInterface description No description available Decimal->convertToBase Description Converts the object to a different base. public Decimal->abs() return type DecimalInterface|NumberInterface description No description available Decimal->abs Description Returns the current object as the absolute value of itself. public Decimal->absValue() return type string description No description available Decimal->absValue Description Returns the string of the absolute value of the current object. public Decimal->isComplex() return type bool description No description available public Decimal->__toString() return type string description No description available public Decimal->continuousModulo($mod) $mod description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->add($num) $num description No description available return type mixed (assumed) description No description available public Decimal->subtract($num) $num description No description available return type mixed (assumed) description No description available public Decimal->multiply($num) $num description No description available return type mixed (assumed) description No description available public Decimal->divide($num, ?int $scale) $num description No description available $scale type ?int description No description available return type mixed (assumed) description No description available public Decimal->pow($num) $num description No description available return type mixed (assumed) description No description available public Decimal->sqrt(?int $scale) $scale type ?int description No description available return type mixed (assumed) description No description available public Decimal->isEqual($value) $value description No description available return type bool description No description available public Decimal->getScale() return type ?int description No description available public Decimal->isGreaterThan($value) $value description No description available return type bool description No description available public Decimal->isLessThan($value) $value description No description available return type bool description No description available public Decimal->isGreaterThanOrEqualTo($value) $value description No description available return type bool description No description available public Decimal->isLessThanOrEqualTo($value) $value description No description available return type bool description No description available public Decimal->isNegative() return type bool description No description available public Decimal->isPositive() return type bool description No description available public Decimal->isNatural() return type bool description No description available public Decimal->isWhole() return type bool description No description available public Decimal->isInt() return type bool description No description available public Decimal->factorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->subFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->doubleFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->semiFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->getLeastCommonMultiple($num) $num description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->getGreatestCommonDivisor($num) $num description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->isPrime() return type bool description No description available Decimal->isPrime Description This function is a PHP implementation of the function described at: http://stackoverflow.com/a/1801446 It is relatively simple to understand, which is why it was chosen as the implementation. However in the future, an implementation that is based on ECPP (such as the Goldwasser implementation) may be employed to improve speed. public Decimal->asPrimeFactors() return type Samsara\\Fermat\\Types\\NumberCollection description No description available public Decimal->sin(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->cos(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->tan(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->cot(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->sec(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->csc(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->sinh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->cosh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->tanh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->coth(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->sech(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->csch(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arcsin(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arccos(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arctan(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arccot(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arcsec(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arccsc(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->roundToScale(int $scale, ?int $mode) $scale type int description No description available $mode type ?int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->truncateToScale($scale) $scale description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->exp(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->ln(int|null $scale, bool $round) $scale type int|null description The number of digits which should be accurate $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->log10(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->round(int $decimals, ?int $mode) $decimals type int description No description available $mode type ?int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->truncate(int $decimals) $decimals type int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->ceil() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->floor() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->numberOfLeadingZeros() return type int description No description available Decimal->numberOfLeadingZeros Description The number of digits between the radix and the for non-zero digit in the decimal part. public Decimal->numberOfTotalDigits() return type int description No description available Decimal->numberOfTotalDigits Description The number of digits (excludes the radix). public Decimal->numberOfIntDigits() return type int description No description available Decimal->numberOfIntDigits Description The number of digits in the integer part. public Decimal->numberOfDecimalDigits() return type int description No description available Decimal->numberOfDecimalDigits Description The number of digits in the decimal part. public Decimal->numberOfSigDecimalDigits() return type int description No description available Decimal->numberOfSigDecimalDigits Description The number of digits in the decimal part, excluding leading zeros. public Decimal->asInt() return type int description No description available Decimal->asInt Description Returns the current value as an integer if it is within the max a min int values on the current system. Uses the intval() function to convert the string to an integer type. public Decimal->isFloat() return type bool description No description available public Decimal->asFloat() return type float description No description available Inherited Methods public Number->setMode(int $mode) $mode type int description No description available return type self description No description available Number->setMode Description Allows you to set a mode on a number to select the calculation methods. MODE_PRECISION: Use what is necessary to provide an answer that is accurate to the scale setting. MODE_NATIVE: Use built-in functions to perform the math, and accept whatever rounding or truncation this might cause. public Number->setExtensions(bool $flag) $flag type bool description No description available return type self description No description available Number->setExtensions Description Allows the object to ignore PHP extensions (such a GMP) and use only the Fermat implementations. NOTE: This does not ignore ext-bcmath or ext-decimal, as those are necessary for the string math itself. public Number->hash() return type string description No description available Number->hash Description Implemented to satisfy Hashable implementation public Number->equals(mixed $object) $object type mixed description No description available return type bool description No description available Number->equals Description Implemented to satisfy Hashable implementation public Number->isImaginary() return type bool description No description available Number->isImaginary Description This function returns true if the number is imaginary, and false in the number is real or complex public Number->isReal() return type bool description No description available Number->isReal Description This function returns true if the number is real, and false if the number is imaginary or complex public Number->asReal() return type string description No description available public Number->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types > Decimal"},{"location":"roster/v0.2/Fermat/Types/Decimal/#samsarafermattypes-decimal","text":"No description available","title":"Samsara\\Fermat\\Types &gt; Decimal"},{"location":"roster/v0.2/Fermat/Types/Fraction/","text":"Samsara\\Fermat\\Types > Fraction No description available Inheritance Extends Samsara\\Fermat\\Types\\Base\\Number Implements Hashable namespace Ds description Hashable is an interface which allows objects to be used as keys. It\u2019s an alternative to spl_object_hash(), which determines an object\u2019s hash based on its handle: this means that two objects that are considered equal by an implicit definition would not treated as equal because they are not the same instance. NumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Stringable namespace description No description available FractionInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available SimpleNumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Has Traits ArithmeticSimpleTrait namespace Samsara\\Fermat\\Types\\Traits description No description available ComparisonTrait namespace Samsara\\Fermat\\Types\\Traits description No description available Variables & Data Class Constants Fraction::INFINITY value 'INF' Fraction::NEG_INFINITY value '-INF' Methods Constructor public Fraction->__construct($numerator, $denominator, int $base) $numerator description No description available $denominator description No description available $base type int description return type mixed (assumed) description No description available Fraction->__construct Description Fraction constructor. Instanced Methods public Fraction->getValue() return type string description No description available public Fraction->getScale() return type ?int description No description available public Fraction->getBase() return type mixed (assumed) description No description available public Fraction->getNumerator() return type mixed (assumed) description No description available public Fraction->getDenominator() return type mixed (assumed) description No description available public Fraction->isComplex() return type bool description No description available public Fraction->simplify() return type mixed (assumed) description No description available public Fraction->abs() return type mixed (assumed) description No description available public Fraction->absValue() return type string description No description available public Fraction->compare($number) $number description No description available return type int description No description available public Fraction->asDecimal($scale) $scale description No description available return type Samsara\\Fermat\\Values\\ImmutableDecimal description No description available public Fraction->getGreatestCommonDivisor() return type NumberInterface description No description available public Fraction->getSmallestCommonDenominator(Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\FractionInterface $fraction) $fraction type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\FractionInterface description No description available return type mixed (assumed) description No description available public Fraction->getAsBaseTenRealNumber() return type string description No description available public Fraction->add($num) $num description No description available return type mixed (assumed) description No description available public Fraction->subtract($num) $num description No description available return type mixed (assumed) description No description available public Fraction->multiply($num) $num description No description available return type mixed (assumed) description No description available public Fraction->divide($num, ?int $scale) $num description No description available $scale type ?int description No description available return type mixed (assumed) description No description available public Fraction->pow($num) $num description No description available return type mixed (assumed) description No description available public Fraction->sqrt(?int $scale) $scale type ?int description No description available return type mixed (assumed) description No description available public Fraction->isEqual($value) $value description No description available return type bool description No description available public Fraction->isGreaterThan($value) $value description No description available return type bool description No description available public Fraction->isLessThan($value) $value description No description available return type bool description No description available public Fraction->isGreaterThanOrEqualTo($value) $value description No description available return type bool description No description available public Fraction->isLessThanOrEqualTo($value) $value description No description available return type bool description No description available public Fraction->isNegative() return type bool description No description available public Fraction->isPositive() return type bool description No description available public Fraction->isNatural() return type bool description No description available public Fraction->isWhole() return type bool description No description available public Fraction->isInt() return type bool description No description available Inherited Methods public Number->setMode(int $mode) $mode type int description No description available return type self description No description available Number->setMode Description Allows you to set a mode on a number to select the calculation methods. MODE_PRECISION: Use what is necessary to provide an answer that is accurate to the scale setting. MODE_NATIVE: Use built-in functions to perform the math, and accept whatever rounding or truncation this might cause. public Number->setExtensions(bool $flag) $flag type bool description No description available return type self description No description available Number->setExtensions Description Allows the object to ignore PHP extensions (such a GMP) and use only the Fermat implementations. NOTE: This does not ignore ext-bcmath or ext-decimal, as those are necessary for the string math itself. public Number->__toString() return type string description No description available public Number->hash() return type string description No description available Number->hash Description Implemented to satisfy Hashable implementation public Number->equals(mixed $object) $object type mixed description No description available return type bool description No description available Number->equals Description Implemented to satisfy Hashable implementation public Number->isImaginary() return type bool description No description available Number->isImaginary Description This function returns true if the number is imaginary, and false in the number is real or complex public Number->isReal() return type bool description No description available Number->isReal Description This function returns true if the number is real, and false if the number is imaginary or complex public Number->asReal() return type string description No description available public Number->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types > Fraction"},{"location":"roster/v0.2/Fermat/Types/Fraction/#samsarafermattypes-fraction","text":"No description available","title":"Samsara\\Fermat\\Types &gt; Fraction"},{"location":"roster/v0.2/Fermat/Types/NumberCollection/","text":"Samsara\\Fermat\\Types > NumberCollection No description available Inheritance Implements NumberCollectionInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups description No description available ArrayAccess namespace description No description available IteratorAggregate namespace description No description available Traversable namespace description No description available Methods Constructor public NumberCollection->__construct(array $numbers) $numbers type array description No description available return type mixed (assumed) description No description available NumberCollection->__construct Description NumberCollection constructor. Instanced Methods public NumberCollection->collect(array $numbers) $numbers type array description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollection->count() return type int description No description available public NumberCollection->toArray() return type array description No description available public NumberCollection->selectScale() return type int description No description available public NumberCollection->push(NumberInterface $number) $number type NumberInterface description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollection->pop() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollection->unshift(NumberInterface $number) $number type NumberInterface description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollection->shift() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollection->filterByKeys(array $filters) $filters type array description No description available return type Samsara\\Fermat\\Types\\NumberCollection description No description available public NumberCollection->sort() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollection->reverse() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollection->add($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollection->subtract($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollection->multiply($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollection->divide($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollection->pow($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available NumberCollection->pow Description Raises each element in the collection to the exponent $number public NumberCollection->exp($base) $base description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available NumberCollection->exp Description Replaces each element in the collection with $base to the power of that value. If no base is given, Euler's number is assumed to be the base (as is assumed in most cases where an exp() function is encountered in math) public NumberCollection->get(int $key) $key type int description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollection->getRandom() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollection->sum() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollection->mean() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public NumberCollection->average() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public NumberCollection->makeNormalDistribution() return type Samsara\\Fermat\\Provider\\Distribution\\Normal description No description available public NumberCollection->makePoissonDistribution() return type Samsara\\Fermat\\Provider\\Distribution\\Poisson description No description available public NumberCollection->makeExponentialDistribution() return type Samsara\\Fermat\\Provider\\Distribution\\Exponential description No description available public NumberCollection->makePolynomialFunction() return type Samsara\\Fermat\\Values\\Algebra\\PolynomialFunction description No description available public NumberCollection->offsetExists($offset) $offset description No description available return type mixed (assumed) description No description available public NumberCollection->offsetGet($offset) $offset description No description available return type mixed (assumed) description No description available public NumberCollection->offsetSet($offset, $value) $offset description No description available $value description No description available return type mixed (assumed) description No description available public NumberCollection->offsetUnset($offset) $offset description No description available return type mixed (assumed) description No description available public NumberCollection->getIterator() return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types > NumberCollection"},{"location":"roster/v0.2/Fermat/Types/NumberCollection/#samsarafermattypes-numbercollection","text":"No description available","title":"Samsara\\Fermat\\Types &gt; NumberCollection"},{"location":"roster/v0.2/Fermat/Types/Tuple/","text":"Samsara\\Fermat\\Types > Tuple No description available Methods Constructor public Tuple->__construct($data) $data description No description available return type mixed (assumed) description No description available Instanced Methods public Tuple->get(int $index) $index type int description return type Samsara\\Fermat\\Values\\ImmutableDecimal description No description available public Tuple->set(int $index, ImmutableDecimal $value) $index type int description No description available $value type ImmutableDecimal description return type self description No description available public Tuple->all() return type array description No description available public Tuple->size() return type int description No description available public Tuple->hasIndex(int $index) $index type int description No description available return type bool description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types > Tuple"},{"location":"roster/v0.2/Fermat/Types/Tuple/#samsarafermattypes-tuple","text":"No description available","title":"Samsara\\Fermat\\Types &gt; Tuple"},{"location":"roster/v0.2/Fermat/Types/Base/Number/","text":"Samsara\\Fermat\\Types\\Base > Number No description available Inheritance Implements Hashable namespace Ds description Hashable is an interface which allows objects to be used as keys. It\u2019s an alternative to spl_object_hash(), which determines an object\u2019s hash based on its handle: this means that two objects that are considered equal by an implicit definition would not treated as equal because they are not the same instance. NumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Stringable namespace description No description available Variables & Data Class Constants Number::INFINITY value 'INF' Number::NEG_INFINITY value '-INF' Methods Constructor public Number->__construct() return type mixed (assumed) description No description available Instanced Methods public Number->setMode(int $mode) $mode type int description No description available return type self description No description available Number->setMode Description Allows you to set a mode on a number to select the calculation methods. MODE_PRECISION: Use what is necessary to provide an answer that is accurate to the scale setting. MODE_NATIVE: Use built-in functions to perform the math, and accept whatever rounding or truncation this might cause. public Number->getValue() return type string description No description available Number->getValue Description Returns the current value as a string. public Number->setExtensions(bool $flag) $flag type bool description No description available return type self description No description available Number->setExtensions Description Allows the object to ignore PHP extensions (such a GMP) and use only the Fermat implementations. NOTE: This does not ignore ext-bcmath or ext-decimal, as those are necessary for the string math itself. public Number->__toString() return type string description No description available public Number->hash() return type string description No description available Number->hash Description Implemented to satisfy Hashable implementation public Number->equals(mixed $object) $object type mixed description No description available return type bool description No description available Number->equals Description Implemented to satisfy Hashable implementation public Number->isImaginary() return type bool description No description available Number->isImaginary Description This function returns true if the number is imaginary, and false in the number is real or complex public Number->isReal() return type bool description No description available Number->isReal Description This function returns true if the number is real, and false if the number is imaginary or complex public Number->asReal() return type string description No description available public Number->getAsBaseTenRealNumber() return type string description No description available public Number->isComplex() return type bool description No description available public Number->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available Inherited Methods public NumberInterface->abs() return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->absValue() return type string description No description available public NumberInterface->add($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->subtract($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->multiply($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->divide($num, int|null $scale) $num description No description available $scale type int|null description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->pow($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->sqrt(int? $scale) $scale type int? description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->isEqual(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public NumberInterface->getScale() return type ?int description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Base > Number"},{"location":"roster/v0.2/Fermat/Types/Base/Number/#samsarafermattypesbase-number","text":"No description available","title":"Samsara\\Fermat\\Types\\Base &gt; Number"},{"location":"roster/v0.2/Fermat/Types/Base/Selectable/","text":"Samsara\\Fermat\\Types\\Base > Selectable No description available Variables & Data Class Constants Selectable::CALC_MODE_FALLBACK value 0 Selectable::CALC_MODE_PRECISION value 1 Selectable::CALC_MODE_NATIVE value 2 This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Base > Selectable"},{"location":"roster/v0.2/Fermat/Types/Base/Selectable/#samsarafermattypesbase-selectable","text":"No description available","title":"Samsara\\Fermat\\Types\\Base &gt; Selectable"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Characteristics/BaseConversionInterface/","text":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Characteristics > BaseConversionInterface No description available Methods Instanced Methods public BaseConversionInterface->convertToBase(int $base) $base type int description return type DecimalInterface description No description available public BaseConversionInterface->getBase() return type int description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Characteristics > BaseConversionInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Characteristics/BaseConversionInterface/#samsarafermattypesbaseinterfacescharacteristics-baseconversioninterface","text":"No description available","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Characteristics &gt; BaseConversionInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Groups/NumberCollectionInterface/","text":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups > NumberCollectionInterface No description available Methods Instanced Methods public NumberCollectionInterface->collect(array $numbers) $numbers type array description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->count() return type int description No description available public NumberCollectionInterface->toArray() return type array description No description available public NumberCollectionInterface->push(NumberInterface $number) $number type NumberInterface description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->pop() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollectionInterface->unshift(NumberInterface $number) $number type NumberInterface description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->shift() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollectionInterface->sort() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->reverse() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->multiply($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->divide($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->add($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->subtract($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->pow($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->exp($number) $number description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups\\NumberCollectionInterface description No description available public NumberCollectionInterface->get(int $key) $key type int description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollectionInterface->getRandom() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollectionInterface->sum() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollectionInterface->mean() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\NumberInterface description No description available public NumberCollectionInterface->makeNormalDistribution() return type Samsara\\Fermat\\Provider\\Distribution\\Normal description No description available public NumberCollectionInterface->makePoissonDistribution() return type Samsara\\Fermat\\Provider\\Distribution\\Poisson description No description available public NumberCollectionInterface->makeExponentialDistribution() return type Samsara\\Fermat\\Provider\\Distribution\\Exponential description No description available public NumberCollectionInterface->makePolynomialFunction() return type Samsara\\Fermat\\Values\\Algebra\\PolynomialFunction description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups > NumberCollectionInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Groups/NumberCollectionInterface/#samsarafermattypesbaseinterfacesgroups-numbercollectioninterface","text":"No description available","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Groups &gt; NumberCollectionInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Numbers/DecimalInterface/","text":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers > DecimalInterface No description available Inheritance Methods Instanced Methods public DecimalInterface->modulo($mod) $mod description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->continuousModulo($mod) $mod description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->getLeastCommonMultiple($num) $num description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->getGreatestCommonDivisor($num) $num description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->isNatural() return type bool description No description available public DecimalInterface->isWhole() return type bool description No description available public DecimalInterface->isInt() return type bool description No description available public DecimalInterface->asInt() return type int description No description available public DecimalInterface->isFloat() return type bool description No description available public DecimalInterface->asFloat() return type float description No description available public DecimalInterface->isPrime() return type bool description No description available public DecimalInterface->asPrimeFactors() return type Samsara\\Fermat\\Types\\NumberCollection description No description available public DecimalInterface->ceil() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->floor() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->factorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->subFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->doubleFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->semiFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->sin(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->cos(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->tan(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->cot(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->sec(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->csc(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->arcsin(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->arccos(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->arctan(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->arccot(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->arcsec(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->arccsc(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->sinh(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->cosh(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->tanh(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->coth(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->sech(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->csch(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->ln(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->log10(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->exp(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->round(int $decimals, int|null $mode) $decimals type int description No description available $mode type int|null description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->truncate(int $decimals) $decimals type int description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->roundToScale(int $scale, int|null $mode) $scale type int description No description available $mode type int|null description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->truncateToScale($scale) $scale description return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public DecimalInterface->numberOfLeadingZeros() return type int description No description available Inherited Methods public SimpleNumberInterface->compare($value) $value description return type int description No description available public SimpleNumberInterface->isNegative() return type bool description No description available public SimpleNumberInterface->isPositive() return type bool description No description available public SimpleNumberInterface->getAsBaseTenRealNumber() return type string description No description available public SimpleNumberInterface->getValue() return type string description No description available public SimpleNumberInterface->isGreaterThan(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public SimpleNumberInterface->isLessThan(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public SimpleNumberInterface->isGreaterThanOrEqualTo(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public SimpleNumberInterface->isLessThanOrEqualTo(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public NumberInterface->abs() return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->absValue() return type string description No description available public NumberInterface->add($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->subtract($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->multiply($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->divide($num, int|null $scale) $num description No description available $scale type int|null description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->pow($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->sqrt(int? $scale) $scale type int? description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->isEqual(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public NumberInterface->getScale() return type ?int description No description available public NumberInterface->isImaginary() return type bool description No description available public NumberInterface->isReal() return type bool description No description available public NumberInterface->asReal() return type string description No description available public NumberInterface->isComplex() return type bool description No description available public NumberInterface->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers > DecimalInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Numbers/DecimalInterface/#samsarafermattypesbaseinterfacesnumbers-decimalinterface","text":"No description available","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers &gt; DecimalInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Numbers/FractionInterface/","text":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers > FractionInterface No description available Inheritance Methods Instanced Methods public FractionInterface->simplify() return type FractionInterface description No description available public FractionInterface->getNumerator() return type DecimalInterface description No description available public FractionInterface->getDenominator() return type DecimalInterface description No description available public FractionInterface->getSmallestCommonDenominator(FractionInterface $fraction) $fraction type FractionInterface description return type DecimalInterface description No description available public FractionInterface->asDecimal() return type Samsara\\Fermat\\Values\\ImmutableDecimal description No description available Inherited Methods public SimpleNumberInterface->compare($value) $value description return type int description No description available public SimpleNumberInterface->isNegative() return type bool description No description available public SimpleNumberInterface->isPositive() return type bool description No description available public SimpleNumberInterface->getAsBaseTenRealNumber() return type string description No description available public SimpleNumberInterface->getValue() return type string description No description available public SimpleNumberInterface->isGreaterThan(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public SimpleNumberInterface->isLessThan(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public SimpleNumberInterface->isGreaterThanOrEqualTo(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public SimpleNumberInterface->isLessThanOrEqualTo(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public NumberInterface->abs() return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->absValue() return type string description No description available public NumberInterface->add($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->subtract($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->multiply($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->divide($num, int|null $scale) $num description No description available $scale type int|null description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->pow($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->sqrt(int? $scale) $scale type int? description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->isEqual(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public NumberInterface->getScale() return type ?int description No description available public NumberInterface->isImaginary() return type bool description No description available public NumberInterface->isReal() return type bool description No description available public NumberInterface->asReal() return type string description No description available public NumberInterface->isComplex() return type bool description No description available public NumberInterface->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers > FractionInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Numbers/FractionInterface/#samsarafermattypesbaseinterfacesnumbers-fractioninterface","text":"No description available","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers &gt; FractionInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Numbers/NumberInterface/","text":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers > NumberInterface No description available Methods Instanced Methods public NumberInterface->abs() return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->absValue() return type string description No description available public NumberInterface->add($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->subtract($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->multiply($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->divide($num, int|null $scale) $num description No description available $scale type int|null description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->pow($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->sqrt(int? $scale) $scale type int? description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->isEqual(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public NumberInterface->getScale() return type ?int description No description available public NumberInterface->isImaginary() return type bool description No description available public NumberInterface->isReal() return type bool description No description available public NumberInterface->asReal() return type string description No description available public NumberInterface->isComplex() return type bool description No description available public NumberInterface->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers > NumberInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Numbers/NumberInterface/#samsarafermattypesbaseinterfacesnumbers-numberinterface","text":"No description available","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers &gt; NumberInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Numbers/SimpleNumberInterface/","text":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers > SimpleNumberInterface No description available Inheritance Methods Instanced Methods public SimpleNumberInterface->compare($value) $value description return type int description No description available public SimpleNumberInterface->isNegative() return type bool description No description available public SimpleNumberInterface->isPositive() return type bool description No description available public SimpleNumberInterface->getAsBaseTenRealNumber() return type string description No description available public SimpleNumberInterface->getValue() return type string description No description available public SimpleNumberInterface->isGreaterThan(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public SimpleNumberInterface->isLessThan(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public SimpleNumberInterface->isGreaterThanOrEqualTo(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public SimpleNumberInterface->isLessThanOrEqualTo(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available Inherited Methods public NumberInterface->abs() return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->absValue() return type string description No description available public NumberInterface->add($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->subtract($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->multiply($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->divide($num, int|null $scale) $num description No description available $scale type int|null description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->pow($num) $num description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->sqrt(int? $scale) $scale type int? description return type NumberInterface|DecimalInterface|FractionInterface description No description available public NumberInterface->isEqual(int|string|NumberInterface $value) $value type int|string|NumberInterface description return type bool description No description available public NumberInterface->getScale() return type ?int description No description available public NumberInterface->isImaginary() return type bool description No description available public NumberInterface->isReal() return type bool description No description available public NumberInterface->asReal() return type string description No description available public NumberInterface->isComplex() return type bool description No description available public NumberInterface->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers > SimpleNumberInterface"},{"location":"roster/v0.2/Fermat/Types/Base/Interfaces/Numbers/SimpleNumberInterface/#samsarafermattypesbaseinterfacesnumbers-simplenumberinterface","text":"No description available","title":"Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers &gt; SimpleNumberInterface"},{"location":"roster/v0.2/Fermat/Types/Traits/ArithmeticSimpleTrait/","text":"Samsara\\Fermat\\Types\\Traits > ArithmeticSimpleTrait No description available Inheritance Has Traits ArithmeticSelectionTrait namespace Samsara\\Fermat\\Types\\Traits\\Arithmetic description No description available ArithmeticScaleTrait namespace Samsara\\Fermat\\Types\\Traits\\Arithmetic description No description available ArithmeticNativeTrait namespace Samsara\\Fermat\\Types\\Traits\\Arithmetic description No description available Methods Instanced Methods public ArithmeticSimpleTrait->add($num) $num description No description available return type mixed (assumed) description No description available public ArithmeticSimpleTrait->subtract($num) $num description No description available return type mixed (assumed) description No description available public ArithmeticSimpleTrait->multiply($num) $num description No description available return type mixed (assumed) description No description available public ArithmeticSimpleTrait->divide($num, ?int $scale) $num description No description available $scale type ?int description No description available return type mixed (assumed) description No description available public ArithmeticSimpleTrait->pow($num) $num description No description available return type mixed (assumed) description No description available public ArithmeticSimpleTrait->sqrt(?int $scale) $scale type ?int description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits > ArithmeticSimpleTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/ArithmeticSimpleTrait/#samsarafermattypestraits-arithmeticsimpletrait","text":"No description available","title":"Samsara\\Fermat\\Types\\Traits &gt; ArithmeticSimpleTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/ComparisonTrait/","text":"Samsara\\Fermat\\Types\\Traits > ComparisonTrait No description available Methods Instanced Methods public ComparisonTrait->isEqual($value) $value description No description available return type bool description No description available public ComparisonTrait->isGreaterThan($value) $value description No description available return type bool description No description available public ComparisonTrait->isLessThan($value) $value description No description available return type bool description No description available public ComparisonTrait->isGreaterThanOrEqualTo($value) $value description No description available return type bool description No description available public ComparisonTrait->isLessThanOrEqualTo($value) $value description No description available return type bool description No description available public ComparisonTrait->isNegative() return type bool description No description available public ComparisonTrait->isPositive() return type bool description No description available public ComparisonTrait->isNatural() return type bool description No description available public ComparisonTrait->isWhole() return type bool description No description available public ComparisonTrait->isInt() return type bool description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits > ComparisonTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/ComparisonTrait/#samsarafermattypestraits-comparisontrait","text":"No description available","title":"Samsara\\Fermat\\Types\\Traits &gt; ComparisonTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/IntegerMathTrait/","text":"Samsara\\Fermat\\Types\\Traits > IntegerMathTrait No description available Methods Instanced Methods public IntegerMathTrait->factorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public IntegerMathTrait->subFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public IntegerMathTrait->doubleFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public IntegerMathTrait->semiFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public IntegerMathTrait->getLeastCommonMultiple($num) $num description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public IntegerMathTrait->getGreatestCommonDivisor($num) $num description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public IntegerMathTrait->isPrime() return type bool description No description available IntegerMathTrait->isPrime Description This function is a PHP implementation of the function described at: http://stackoverflow.com/a/1801446 It is relatively simple to understand, which is why it was chosen as the implementation. However in the future, an implementation that is based on ECPP (such as the Goldwasser implementation) may be employed to improve speed. public IntegerMathTrait->asPrimeFactors() return type Samsara\\Fermat\\Types\\NumberCollection description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits > IntegerMathTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/IntegerMathTrait/#samsarafermattypestraits-integermathtrait","text":"No description available","title":"Samsara\\Fermat\\Types\\Traits &gt; IntegerMathTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Arithmetic/ArithmeticNativeTrait/","text":"Samsara\\Fermat\\Types\\Traits\\Arithmetic > ArithmeticNativeTrait No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Arithmetic > ArithmeticNativeTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Arithmetic/ArithmeticNativeTrait/#samsarafermattypestraitsarithmetic-arithmeticnativetrait","text":"No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Arithmetic &gt; ArithmeticNativeTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Arithmetic/ArithmeticScaleTrait/","text":"Samsara\\Fermat\\Types\\Traits\\Arithmetic > ArithmeticScaleTrait No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Arithmetic > ArithmeticScaleTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Arithmetic/ArithmeticScaleTrait/#samsarafermattypestraitsarithmetic-arithmeticscaletrait","text":"No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Arithmetic &gt; ArithmeticScaleTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Arithmetic/ArithmeticSelectionTrait/","text":"Samsara\\Fermat\\Types\\Traits\\Arithmetic > ArithmeticSelectionTrait No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Arithmetic > ArithmeticSelectionTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Arithmetic/ArithmeticSelectionTrait/#samsarafermattypestraitsarithmetic-arithmeticselectiontrait","text":"No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Arithmetic &gt; ArithmeticSelectionTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Decimal/InverseTrigonometryTrait/","text":"Samsara\\Fermat\\Types\\Traits\\Decimal > InverseTrigonometryTrait No description available Methods Instanced Methods public InverseTrigonometryTrait->arcsin(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public InverseTrigonometryTrait->arccos(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public InverseTrigonometryTrait->arctan(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public InverseTrigonometryTrait->arccot(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public InverseTrigonometryTrait->arcsec(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public InverseTrigonometryTrait->arccsc(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public InverseTrigonometryTrait->roundToScale(int $scale, ?int $mode) $scale type int description No description available $mode type ?int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public InverseTrigonometryTrait->truncateToScale(int $scale) $scale type int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public InverseTrigonometryTrait->getScale() return type ?int description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Decimal > InverseTrigonometryTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Decimal/InverseTrigonometryTrait/#samsarafermattypestraitsdecimal-inversetrigonometrytrait","text":"No description available","title":"Samsara\\Fermat\\Types\\Traits\\Decimal &gt; InverseTrigonometryTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Decimal/LogTrait/","text":"Samsara\\Fermat\\Types\\Traits\\Decimal > LogTrait No description available Methods Instanced Methods public LogTrait->exp(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public LogTrait->ln(int|null $scale, bool $round) $scale type int|null description The number of digits which should be accurate $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public LogTrait->log10(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Decimal > LogTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Decimal/LogTrait/#samsarafermattypestraitsdecimal-logtrait","text":"No description available","title":"Samsara\\Fermat\\Types\\Traits\\Decimal &gt; LogTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Decimal/ScaleTrait/","text":"Samsara\\Fermat\\Types\\Traits\\Decimal > ScaleTrait No description available Methods Instanced Methods public ScaleTrait->getScale() return type ?int description No description available public ScaleTrait->round(int $decimals, ?int $mode) $decimals type int description No description available $mode type ?int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public ScaleTrait->truncate(int $decimals) $decimals type int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public ScaleTrait->roundToScale(int $scale, ?int $mode) $scale type int description No description available $mode type ?int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public ScaleTrait->truncateToScale($scale) $scale description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public ScaleTrait->ceil() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public ScaleTrait->floor() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public ScaleTrait->numberOfLeadingZeros() return type int description No description available ScaleTrait->numberOfLeadingZeros Description The number of digits between the radix and the for non-zero digit in the decimal part. public ScaleTrait->numberOfTotalDigits() return type int description No description available ScaleTrait->numberOfTotalDigits Description The number of digits (excludes the radix). public ScaleTrait->numberOfIntDigits() return type int description No description available ScaleTrait->numberOfIntDigits Description The number of digits in the integer part. public ScaleTrait->numberOfDecimalDigits() return type int description No description available ScaleTrait->numberOfDecimalDigits Description The number of digits in the decimal part. public ScaleTrait->numberOfSigDecimalDigits() return type int description No description available ScaleTrait->numberOfSigDecimalDigits Description The number of digits in the decimal part, excluding leading zeros. public ScaleTrait->asInt() return type int description No description available ScaleTrait->asInt Description Returns the current value as an integer if it is within the max a min int values on the current system. Uses the intval() function to convert the string to an integer type. public ScaleTrait->isFloat() return type bool description No description available public ScaleTrait->asFloat() return type float description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Decimal > ScaleTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Decimal/ScaleTrait/#samsarafermattypestraitsdecimal-scaletrait","text":"No description available","title":"Samsara\\Fermat\\Types\\Traits\\Decimal &gt; ScaleTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Decimal/TrigonometryTrait/","text":"Samsara\\Fermat\\Types\\Traits\\Decimal > TrigonometryTrait No description available Methods Instanced Methods public TrigonometryTrait->sin(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->cos(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->tan(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->cot(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->sec(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->csc(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->sinh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->cosh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->tanh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->coth(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->sech(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public TrigonometryTrait->csch(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Types\\Traits\\Decimal > TrigonometryTrait"},{"location":"roster/v0.2/Fermat/Types/Traits/Decimal/TrigonometryTrait/#samsarafermattypestraitsdecimal-trigonometrytrait","text":"No description available","title":"Samsara\\Fermat\\Types\\Traits\\Decimal &gt; TrigonometryTrait"},{"location":"roster/v0.2/Fermat/Values/ImmutableDecimal/","text":"Samsara\\Fermat\\Values > ImmutableDecimal No description available Inheritance Extends Samsara\\Fermat\\Types\\Decimal Implements SimpleNumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available BaseConversionInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Characteristics description No description available DecimalInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Stringable namespace description No description available NumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Hashable namespace Ds description Hashable is an interface which allows objects to be used as keys. It\u2019s an alternative to spl_object_hash(), which determines an object\u2019s hash based on its handle: this means that two objects that are considered equal by an implicit definition would not treated as equal because they are not the same instance. Variables & Data Class Constants ImmutableDecimal::INFINITY value 'INF' ImmutableDecimal::NEG_INFINITY value '-INF' Methods Constructor public Decimal->__construct($value, $scale, $base, bool $baseTenInput) $value description No description available $scale description No description available $base description No description available $baseTenInput type bool description No description available return type mixed (assumed) description No description available Instanced Methods public ImmutableDecimal->continuousModulo($mod) $mod description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available Inherited Methods public Decimal->modulo($mod) $mod description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->getBase() return type int description No description available Decimal->getBase Description Returns the current base that the value is in. public Decimal->getAsBaseTenRealNumber() return type string description No description available public Decimal->getValue($base) $base description No description available return type string description No description available public Decimal->compare(NumberInterface|int|float|string $value) $value type NumberInterface|int|float|string description No description available return type int description No description available Decimal->compare Description Returns the sort compare integer (-1, 0, 1) for the two numbers. public Decimal->convertToBase($base) $base description No description available return type NumberInterface description No description available Decimal->convertToBase Description Converts the object to a different base. public Decimal->abs() return type DecimalInterface|NumberInterface description No description available Decimal->abs Description Returns the current object as the absolute value of itself. public Decimal->absValue() return type string description No description available Decimal->absValue Description Returns the string of the absolute value of the current object. public Decimal->isComplex() return type bool description No description available public Decimal->__toString() return type string description No description available public Number->setMode(int $mode) $mode type int description No description available return type self description No description available Number->setMode Description Allows you to set a mode on a number to select the calculation methods. MODE_PRECISION: Use what is necessary to provide an answer that is accurate to the scale setting. MODE_NATIVE: Use built-in functions to perform the math, and accept whatever rounding or truncation this might cause. public Number->setExtensions(bool $flag) $flag type bool description No description available return type self description No description available Number->setExtensions Description Allows the object to ignore PHP extensions (such a GMP) and use only the Fermat implementations. NOTE: This does not ignore ext-bcmath or ext-decimal, as those are necessary for the string math itself. public Number->hash() return type string description No description available Number->hash Description Implemented to satisfy Hashable implementation public Number->equals(mixed $object) $object type mixed description No description available return type bool description No description available Number->equals Description Implemented to satisfy Hashable implementation public Number->isImaginary() return type bool description No description available Number->isImaginary Description This function returns true if the number is imaginary, and false in the number is real or complex public Number->isReal() return type bool description No description available Number->isReal Description This function returns true if the number is real, and false if the number is imaginary or complex public Number->asReal() return type string description No description available public Number->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available public Decimal->add($num) $num description No description available return type mixed (assumed) description No description available public Decimal->subtract($num) $num description No description available return type mixed (assumed) description No description available public Decimal->multiply($num) $num description No description available return type mixed (assumed) description No description available public Decimal->divide($num, ?int $scale) $num description No description available $scale type ?int description No description available return type mixed (assumed) description No description available public Decimal->pow($num) $num description No description available return type mixed (assumed) description No description available public Decimal->sqrt(?int $scale) $scale type ?int description No description available return type mixed (assumed) description No description available public Decimal->isEqual($value) $value description No description available return type bool description No description available public Decimal->getScale() return type ?int description No description available public Decimal->isGreaterThan($value) $value description No description available return type bool description No description available public Decimal->isLessThan($value) $value description No description available return type bool description No description available public Decimal->isGreaterThanOrEqualTo($value) $value description No description available return type bool description No description available public Decimal->isLessThanOrEqualTo($value) $value description No description available return type bool description No description available public Decimal->isNegative() return type bool description No description available public Decimal->isPositive() return type bool description No description available public Decimal->isNatural() return type bool description No description available public Decimal->isWhole() return type bool description No description available public Decimal->isInt() return type bool description No description available public Decimal->factorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->subFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->doubleFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->semiFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->getLeastCommonMultiple($num) $num description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->getGreatestCommonDivisor($num) $num description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->isPrime() return type bool description No description available Decimal->isPrime Description This function is a PHP implementation of the function described at: http://stackoverflow.com/a/1801446 It is relatively simple to understand, which is why it was chosen as the implementation. However in the future, an implementation that is based on ECPP (such as the Goldwasser implementation) may be employed to improve speed. public Decimal->asPrimeFactors() return type Samsara\\Fermat\\Types\\NumberCollection description No description available public Decimal->sin(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->cos(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->tan(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->cot(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->sec(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->csc(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->sinh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->cosh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->tanh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->coth(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->sech(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->csch(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arcsin(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arccos(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arctan(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arccot(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arcsec(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arccsc(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->roundToScale(int $scale, ?int $mode) $scale type int description No description available $mode type ?int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->truncateToScale($scale) $scale description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->exp(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->ln(int|null $scale, bool $round) $scale type int|null description The number of digits which should be accurate $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->log10(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->round(int $decimals, ?int $mode) $decimals type int description No description available $mode type ?int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->truncate(int $decimals) $decimals type int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->ceil() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->floor() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->numberOfLeadingZeros() return type int description No description available Decimal->numberOfLeadingZeros Description The number of digits between the radix and the for non-zero digit in the decimal part. public Decimal->numberOfTotalDigits() return type int description No description available Decimal->numberOfTotalDigits Description The number of digits (excludes the radix). public Decimal->numberOfIntDigits() return type int description No description available Decimal->numberOfIntDigits Description The number of digits in the integer part. public Decimal->numberOfDecimalDigits() return type int description No description available Decimal->numberOfDecimalDigits Description The number of digits in the decimal part. public Decimal->numberOfSigDecimalDigits() return type int description No description available Decimal->numberOfSigDecimalDigits Description The number of digits in the decimal part, excluding leading zeros. public Decimal->asInt() return type int description No description available Decimal->asInt Description Returns the current value as an integer if it is within the max a min int values on the current system. Uses the intval() function to convert the string to an integer type. public Decimal->isFloat() return type bool description No description available public Decimal->asFloat() return type float description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Values > ImmutableDecimal"},{"location":"roster/v0.2/Fermat/Values/ImmutableDecimal/#samsarafermatvalues-immutabledecimal","text":"No description available","title":"Samsara\\Fermat\\Values &gt; ImmutableDecimal"},{"location":"roster/v0.2/Fermat/Values/ImmutableFraction/","text":"Samsara\\Fermat\\Values > ImmutableFraction No description available Inheritance Extends Samsara\\Fermat\\Types\\Fraction Implements SimpleNumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available FractionInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Stringable namespace description No description available NumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Hashable namespace Ds description Hashable is an interface which allows objects to be used as keys. It\u2019s an alternative to spl_object_hash(), which determines an object\u2019s hash based on its handle: this means that two objects that are considered equal by an implicit definition would not treated as equal because they are not the same instance. Variables & Data Class Constants ImmutableFraction::INFINITY value 'INF' ImmutableFraction::NEG_INFINITY value '-INF' Methods Constructor public Fraction->__construct($numerator, $denominator, int $base) $numerator description No description available $denominator description No description available $base type int description return type mixed (assumed) description No description available Fraction->__construct Description Fraction constructor. Inherited Methods public Fraction->getValue() return type string description No description available public Fraction->getScale() return type ?int description No description available public Fraction->getBase() return type mixed (assumed) description No description available public Fraction->getNumerator() return type mixed (assumed) description No description available public Fraction->getDenominator() return type mixed (assumed) description No description available public Fraction->isComplex() return type bool description No description available public Fraction->simplify() return type mixed (assumed) description No description available public Fraction->abs() return type mixed (assumed) description No description available public Fraction->absValue() return type string description No description available public Fraction->compare($number) $number description No description available return type int description No description available public Fraction->asDecimal($scale) $scale description No description available return type Samsara\\Fermat\\Values\\ImmutableDecimal description No description available public Fraction->getGreatestCommonDivisor() return type NumberInterface description No description available public Fraction->getSmallestCommonDenominator(Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\FractionInterface $fraction) $fraction type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\FractionInterface description No description available return type mixed (assumed) description No description available public Fraction->getAsBaseTenRealNumber() return type string description No description available public Number->setMode(int $mode) $mode type int description No description available return type self description No description available Number->setMode Description Allows you to set a mode on a number to select the calculation methods. MODE_PRECISION: Use what is necessary to provide an answer that is accurate to the scale setting. MODE_NATIVE: Use built-in functions to perform the math, and accept whatever rounding or truncation this might cause. public Number->setExtensions(bool $flag) $flag type bool description No description available return type self description No description available Number->setExtensions Description Allows the object to ignore PHP extensions (such a GMP) and use only the Fermat implementations. NOTE: This does not ignore ext-bcmath or ext-decimal, as those are necessary for the string math itself. public Number->__toString() return type string description No description available public Number->hash() return type string description No description available Number->hash Description Implemented to satisfy Hashable implementation public Number->equals(mixed $object) $object type mixed description No description available return type bool description No description available Number->equals Description Implemented to satisfy Hashable implementation public Number->isImaginary() return type bool description No description available Number->isImaginary Description This function returns true if the number is imaginary, and false in the number is real or complex public Number->isReal() return type bool description No description available Number->isReal Description This function returns true if the number is real, and false if the number is imaginary or complex public Number->asReal() return type string description No description available public Number->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available public Fraction->add($num) $num description No description available return type mixed (assumed) description No description available public Fraction->subtract($num) $num description No description available return type mixed (assumed) description No description available public Fraction->multiply($num) $num description No description available return type mixed (assumed) description No description available public Fraction->divide($num, ?int $scale) $num description No description available $scale type ?int description No description available return type mixed (assumed) description No description available public Fraction->pow($num) $num description No description available return type mixed (assumed) description No description available public Fraction->sqrt(?int $scale) $scale type ?int description No description available return type mixed (assumed) description No description available public Fraction->isEqual($value) $value description No description available return type bool description No description available public Fraction->isGreaterThan($value) $value description No description available return type bool description No description available public Fraction->isLessThan($value) $value description No description available return type bool description No description available public Fraction->isGreaterThanOrEqualTo($value) $value description No description available return type bool description No description available public Fraction->isLessThanOrEqualTo($value) $value description No description available return type bool description No description available public Fraction->isNegative() return type bool description No description available public Fraction->isPositive() return type bool description No description available public Fraction->isNatural() return type bool description No description available public Fraction->isWhole() return type bool description No description available public Fraction->isInt() return type bool description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Values > ImmutableFraction"},{"location":"roster/v0.2/Fermat/Values/ImmutableFraction/#samsarafermatvalues-immutablefraction","text":"No description available","title":"Samsara\\Fermat\\Values &gt; ImmutableFraction"},{"location":"roster/v0.2/Fermat/Values/MutableDecimal/","text":"Samsara\\Fermat\\Values > MutableDecimal No description available Inheritance Extends Samsara\\Fermat\\Types\\Decimal Implements SimpleNumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available BaseConversionInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Characteristics description No description available DecimalInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Stringable namespace description No description available NumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Hashable namespace Ds description Hashable is an interface which allows objects to be used as keys. It\u2019s an alternative to spl_object_hash(), which determines an object\u2019s hash based on its handle: this means that two objects that are considered equal by an implicit definition would not treated as equal because they are not the same instance. Variables & Data Class Constants MutableDecimal::INFINITY value 'INF' MutableDecimal::NEG_INFINITY value '-INF' Methods Constructor public Decimal->__construct($value, $scale, $base, bool $baseTenInput) $value description No description available $scale description No description available $base description No description available $baseTenInput type bool description No description available return type mixed (assumed) description No description available Instanced Methods public MutableDecimal->continuousModulo($mod) $mod description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available Inherited Methods public Decimal->modulo($mod) $mod description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->getBase() return type int description No description available Decimal->getBase Description Returns the current base that the value is in. public Decimal->getAsBaseTenRealNumber() return type string description No description available public Decimal->getValue($base) $base description No description available return type string description No description available public Decimal->compare(NumberInterface|int|float|string $value) $value type NumberInterface|int|float|string description No description available return type int description No description available Decimal->compare Description Returns the sort compare integer (-1, 0, 1) for the two numbers. public Decimal->convertToBase($base) $base description No description available return type NumberInterface description No description available Decimal->convertToBase Description Converts the object to a different base. public Decimal->abs() return type DecimalInterface|NumberInterface description No description available Decimal->abs Description Returns the current object as the absolute value of itself. public Decimal->absValue() return type string description No description available Decimal->absValue Description Returns the string of the absolute value of the current object. public Decimal->isComplex() return type bool description No description available public Decimal->__toString() return type string description No description available public Number->setMode(int $mode) $mode type int description No description available return type self description No description available Number->setMode Description Allows you to set a mode on a number to select the calculation methods. MODE_PRECISION: Use what is necessary to provide an answer that is accurate to the scale setting. MODE_NATIVE: Use built-in functions to perform the math, and accept whatever rounding or truncation this might cause. public Number->setExtensions(bool $flag) $flag type bool description No description available return type self description No description available Number->setExtensions Description Allows the object to ignore PHP extensions (such a GMP) and use only the Fermat implementations. NOTE: This does not ignore ext-bcmath or ext-decimal, as those are necessary for the string math itself. public Number->hash() return type string description No description available Number->hash Description Implemented to satisfy Hashable implementation public Number->equals(mixed $object) $object type mixed description No description available return type bool description No description available Number->equals Description Implemented to satisfy Hashable implementation public Number->isImaginary() return type bool description No description available Number->isImaginary Description This function returns true if the number is imaginary, and false in the number is real or complex public Number->isReal() return type bool description No description available Number->isReal Description This function returns true if the number is real, and false if the number is imaginary or complex public Number->asReal() return type string description No description available public Number->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available public Decimal->add($num) $num description No description available return type mixed (assumed) description No description available public Decimal->subtract($num) $num description No description available return type mixed (assumed) description No description available public Decimal->multiply($num) $num description No description available return type mixed (assumed) description No description available public Decimal->divide($num, ?int $scale) $num description No description available $scale type ?int description No description available return type mixed (assumed) description No description available public Decimal->pow($num) $num description No description available return type mixed (assumed) description No description available public Decimal->sqrt(?int $scale) $scale type ?int description No description available return type mixed (assumed) description No description available public Decimal->isEqual($value) $value description No description available return type bool description No description available public Decimal->getScale() return type ?int description No description available public Decimal->isGreaterThan($value) $value description No description available return type bool description No description available public Decimal->isLessThan($value) $value description No description available return type bool description No description available public Decimal->isGreaterThanOrEqualTo($value) $value description No description available return type bool description No description available public Decimal->isLessThanOrEqualTo($value) $value description No description available return type bool description No description available public Decimal->isNegative() return type bool description No description available public Decimal->isPositive() return type bool description No description available public Decimal->isNatural() return type bool description No description available public Decimal->isWhole() return type bool description No description available public Decimal->isInt() return type bool description No description available public Decimal->factorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->subFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->doubleFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->semiFactorial() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->getLeastCommonMultiple($num) $num description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->getGreatestCommonDivisor($num) $num description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->isPrime() return type bool description No description available Decimal->isPrime Description This function is a PHP implementation of the function described at: http://stackoverflow.com/a/1801446 It is relatively simple to understand, which is why it was chosen as the implementation. However in the future, an implementation that is based on ECPP (such as the Goldwasser implementation) may be employed to improve speed. public Decimal->asPrimeFactors() return type Samsara\\Fermat\\Types\\NumberCollection description No description available public Decimal->sin(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->cos(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->tan(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->cot(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->sec(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->csc(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->sinh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->cosh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->tanh(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->coth(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->sech(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->csch(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arcsin(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arccos(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arctan(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arccot(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arcsec(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->arccsc(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->roundToScale(int $scale, ?int $mode) $scale type int description No description available $mode type ?int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->truncateToScale($scale) $scale description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->exp(?int $scale, bool $round) $scale type ?int description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->ln(int|null $scale, bool $round) $scale type int|null description The number of digits which should be accurate $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->log10(int|null $scale, bool $round) $scale type int|null description No description available $round type bool description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->round(int $decimals, ?int $mode) $decimals type int description No description available $mode type ?int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->truncate(int $decimals) $decimals type int description No description available return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->ceil() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->floor() return type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\DecimalInterface description No description available public Decimal->numberOfLeadingZeros() return type int description No description available Decimal->numberOfLeadingZeros Description The number of digits between the radix and the for non-zero digit in the decimal part. public Decimal->numberOfTotalDigits() return type int description No description available Decimal->numberOfTotalDigits Description The number of digits (excludes the radix). public Decimal->numberOfIntDigits() return type int description No description available Decimal->numberOfIntDigits Description The number of digits in the integer part. public Decimal->numberOfDecimalDigits() return type int description No description available Decimal->numberOfDecimalDigits Description The number of digits in the decimal part. public Decimal->numberOfSigDecimalDigits() return type int description No description available Decimal->numberOfSigDecimalDigits Description The number of digits in the decimal part, excluding leading zeros. public Decimal->asInt() return type int description No description available Decimal->asInt Description Returns the current value as an integer if it is within the max a min int values on the current system. Uses the intval() function to convert the string to an integer type. public Decimal->isFloat() return type bool description No description available public Decimal->asFloat() return type float description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Values > MutableDecimal"},{"location":"roster/v0.2/Fermat/Values/MutableDecimal/#samsarafermatvalues-mutabledecimal","text":"No description available","title":"Samsara\\Fermat\\Values &gt; MutableDecimal"},{"location":"roster/v0.2/Fermat/Values/MutableFraction/","text":"Samsara\\Fermat\\Values > MutableFraction No description available Inheritance Extends Samsara\\Fermat\\Types\\Fraction Implements SimpleNumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available FractionInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Stringable namespace description No description available NumberInterface namespace Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers description No description available Hashable namespace Ds description Hashable is an interface which allows objects to be used as keys. It\u2019s an alternative to spl_object_hash(), which determines an object\u2019s hash based on its handle: this means that two objects that are considered equal by an implicit definition would not treated as equal because they are not the same instance. Variables & Data Class Constants MutableFraction::INFINITY value 'INF' MutableFraction::NEG_INFINITY value '-INF' Methods Constructor public Fraction->__construct($numerator, $denominator, int $base) $numerator description No description available $denominator description No description available $base type int description return type mixed (assumed) description No description available Fraction->__construct Description Fraction constructor. Inherited Methods public Fraction->getValue() return type string description No description available public Fraction->getScale() return type ?int description No description available public Fraction->getBase() return type mixed (assumed) description No description available public Fraction->getNumerator() return type mixed (assumed) description No description available public Fraction->getDenominator() return type mixed (assumed) description No description available public Fraction->isComplex() return type bool description No description available public Fraction->simplify() return type mixed (assumed) description No description available public Fraction->abs() return type mixed (assumed) description No description available public Fraction->absValue() return type string description No description available public Fraction->compare($number) $number description No description available return type int description No description available public Fraction->asDecimal($scale) $scale description No description available return type Samsara\\Fermat\\Values\\ImmutableDecimal description No description available public Fraction->getGreatestCommonDivisor() return type NumberInterface description No description available public Fraction->getSmallestCommonDenominator(Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\FractionInterface $fraction) $fraction type Samsara\\Fermat\\Types\\Base\\Interfaces\\Numbers\\FractionInterface description No description available return type mixed (assumed) description No description available public Fraction->getAsBaseTenRealNumber() return type string description No description available public Number->setMode(int $mode) $mode type int description No description available return type self description No description available Number->setMode Description Allows you to set a mode on a number to select the calculation methods. MODE_PRECISION: Use what is necessary to provide an answer that is accurate to the scale setting. MODE_NATIVE: Use built-in functions to perform the math, and accept whatever rounding or truncation this might cause. public Number->setExtensions(bool $flag) $flag type bool description No description available return type self description No description available Number->setExtensions Description Allows the object to ignore PHP extensions (such a GMP) and use only the Fermat implementations. NOTE: This does not ignore ext-bcmath or ext-decimal, as those are necessary for the string math itself. public Number->__toString() return type string description No description available public Number->hash() return type string description No description available Number->hash Description Implemented to satisfy Hashable implementation public Number->equals(mixed $object) $object type mixed description No description available return type bool description No description available Number->equals Description Implemented to satisfy Hashable implementation public Number->isImaginary() return type bool description No description available Number->isImaginary Description This function returns true if the number is imaginary, and false in the number is real or complex public Number->isReal() return type bool description No description available Number->isReal Description This function returns true if the number is real, and false if the number is imaginary or complex public Number->asReal() return type string description No description available public Number->asComplex() return type Samsara\\Fermat\\Types\\ComplexNumber description No description available public Fraction->add($num) $num description No description available return type mixed (assumed) description No description available public Fraction->subtract($num) $num description No description available return type mixed (assumed) description No description available public Fraction->multiply($num) $num description No description available return type mixed (assumed) description No description available public Fraction->divide($num, ?int $scale) $num description No description available $scale type ?int description No description available return type mixed (assumed) description No description available public Fraction->pow($num) $num description No description available return type mixed (assumed) description No description available public Fraction->sqrt(?int $scale) $scale type ?int description No description available return type mixed (assumed) description No description available public Fraction->isEqual($value) $value description No description available return type bool description No description available public Fraction->isGreaterThan($value) $value description No description available return type bool description No description available public Fraction->isLessThan($value) $value description No description available return type bool description No description available public Fraction->isGreaterThanOrEqualTo($value) $value description No description available return type bool description No description available public Fraction->isLessThanOrEqualTo($value) $value description No description available return type bool description No description available public Fraction->isNegative() return type bool description No description available public Fraction->isPositive() return type bool description No description available public Fraction->isNatural() return type bool description No description available public Fraction->isWhole() return type bool description No description available public Fraction->isInt() return type bool description No description available This documentation was generated with Roster .","title":"Samsara\\Fermat\\Values > MutableFraction"},{"location":"roster/v0.2/Fermat/Values/MutableFraction/#samsarafermatvalues-mutablefraction","text":"No description available","title":"Samsara\\Fermat\\Values &gt; MutableFraction"},{"location":"roster/v0.2/Roster/App/","text":"Samsara\\Roster > App Class App This class configures and sets up the Symfony/Console application so that it is ready for the command to be executed. Inheritance Extends Symfony\\Component\\Console\\Application Implements ResetInterface namespace Symfony\\Contracts\\Service description No description available Variables & Data Class Constants App::NAME value 'Roster Markdown Documentation Generator' App::VERSION value 'v0.1.0' Methods Constructor public App->__construct() return type mixed (assumed) description No description available Instanced Methods public App->run(?Symfony\\Component\\Console\\Input\\InputInterface $input, ?Symfony\\Component\\Console\\Output\\OutputInterface $output) $input type ?Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type ?Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available Inherited Static Methods public Application::getAbbreviations(array $names) $names type array description No description available return type string[][] description No description available Application::getAbbreviations Description Returns an array of possible abbreviations given a set of names. Inherited Methods public Application->setDispatcher(Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface $dispatcher) $dispatcher type Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface description No description available return type mixed (assumed) description No description available public Application->setCommandLoader(Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface $commandLoader) $commandLoader type Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface description No description available return type mixed (assumed) description No description available public Application->getSignalRegistry() return type Symfony\\Component\\Console\\SignalRegistry\\SignalRegistry description No description available public Application->setSignalsToDispatchEvent(int $signalsToDispatchEvent) $signalsToDispatchEvent type int description No description available return type mixed (assumed) description No description available public Application->doRun(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available Application->doRun Description Runs the current application. public Application->reset() return type mixed (assumed) description No description available public Application->setHelperSet(Symfony\\Component\\Console\\Helper\\HelperSet $helperSet) $helperSet type Symfony\\Component\\Console\\Helper\\HelperSet description No description available return type mixed (assumed) description No description available public Application->getHelperSet() return type HelperSet description No description available Application->getHelperSet Description Get the helper set associated with the command. public Application->setDefinition(Symfony\\Component\\Console\\Input\\InputDefinition $definition) $definition type Symfony\\Component\\Console\\Input\\InputDefinition description No description available return type mixed (assumed) description No description available public Application->getDefinition() return type InputDefinition description No description available Application->getDefinition Description Gets the InputDefinition related to this Application. public Application->getHelp() return type string description No description available Application->getHelp Description Gets the help message. public Application->areExceptionsCaught() return type bool description No description available Application->areExceptionsCaught Description Gets whether to catch exceptions or not during commands execution. public Application->setCatchExceptions(bool $boolean) $boolean type bool description No description available return type mixed (assumed) description No description available public Application->isAutoExitEnabled() return type bool description No description available Application->isAutoExitEnabled Description Gets whether to automatically exit after a command execution or not. public Application->setAutoExit(bool $boolean) $boolean type bool description No description available return type mixed (assumed) description No description available public Application->getName() return type string description No description available Application->getName Description Gets the name of the application. public Application->setName(string $name) $name type string description No description available return type mixed (assumed) description No description available public Application->getVersion() return type string description No description available Application->getVersion Description Gets the application version. public Application->setVersion(string $version) $version type string description No description available return type mixed (assumed) description No description available public Application->getLongVersion() return type string description No description available Application->getLongVersion Description Returns the long version of the application. public Application->register(string $name) $name type string description No description available return type Command description No description available Application->register Description Registers a new command. public Application->addCommands(Command[] $commands) $commands type Command[] description An array of commands return type mixed (assumed) description No description available Application->addCommands Description Adds an array of command objects. If a Command is not enabled it will not be added. public Application->add(Symfony\\Component\\Console\\Command\\Command $command) $command type Symfony\\Component\\Console\\Command\\Command description No description available return type Command|null description No description available Application->add Description Adds a command object. If a command with the same name already exists, it will be overridden. If the command is not enabled it will not be added. public Application->get(string $name) $name type string description No description available return type Command description No description available Application->get Description Returns a registered command by name or alias. public Application->has(string $name) $name type string description No description available return type bool description No description available Application->has Description Returns true if the command exists, false otherwise. public Application->getNamespaces() return type string[] description No description available Application->getNamespaces Description Returns an array of all unique namespaces used by currently registered commands. It does not return the global namespace which always exists. public Application->findNamespace(string $namespace) $namespace type string description No description available return type string description No description available Application->findNamespace Description Finds a registered namespace by a name or an abbreviation. public Application->find(string $name) $name type string description No description available return type Command description No description available Application->find Description Finds a command by name or alias. Contrary to get, this command tries to find the best match if you give it an abbreviation of a name or alias. public Application->all(?string $namespace) $namespace type ?string description No description available return type Command[] description No description available Application->all Description Gets the commands (registered in the given namespace if provided). The array keys are the full names and the values the command instances. public Application->renderThrowable(Throwable $e, Symfony\\Component\\Console\\Output\\OutputInterface $output) $e type Throwable description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type void description No description available public Application->extractNamespace(string $name, ?int $limit) $name type string description No description available $limit type ?int description No description available return type string description No description available Application->extractNamespace Description Returns the namespace part of the command name. This method is not part of public API and should not be used directly. public Application->setDefaultCommand(string $commandName, bool $isSingleCommand) $commandName type string description No description available $isSingleCommand type bool description No description available return type self description No description available Application->setDefaultCommand Description Sets the default Command name. public Application->isSingleCommand() return type bool description No description available protected Application->doRenderThrowable(Throwable $e, Symfony\\Component\\Console\\Output\\OutputInterface $output) $e type Throwable description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type void description No description available protected Application->configureIO(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type mixed (assumed) description No description available protected Application->doRunCommand(Symfony\\Component\\Console\\Command\\Command $command, Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) $command type Symfony\\Component\\Console\\Command\\Command description No description available $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available Application->doRunCommand Description Runs the current command. If an event dispatcher has been attached to the application, events are also dispatched during the life-cycle of the command. protected Application->getCommandName(Symfony\\Component\\Console\\Input\\InputInterface $input) $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available return type string|null description No description available Application->getCommandName Description Gets the name of the command based on input. protected Application->getDefaultInputDefinition() return type InputDefinition description No description available Application->getDefaultInputDefinition Description Gets the default input definition. protected Application->getDefaultCommands() return type Command[] description No description available Application->getDefaultCommands Description Gets the default commands that should always be available. protected Application->getDefaultHelperSet() return type HelperSet description No description available Application->getDefaultHelperSet Description Gets the default helper set with the helpers that should always be available. This documentation was generated with Roster .","title":"App"},{"location":"roster/v0.2/Roster/App/#samsararoster-app","text":"Class App This class configures and sets up the Symfony/Console application so that it is ready for the command to be executed.","title":"Samsara\\Roster &gt; App"},{"location":"roster/v0.2/Roster/ConfigBag/","text":"Samsara\\Roster > ConfigBag No description available Methods Static Methods public ConfigBag::getApplicationConfig() return type Noodlehaus\\Config description No description available public ConfigBag::getMkdocsConfig() return type Noodlehaus\\Config description No description available public ConfigBag::getRosterConfig() return type Noodlehaus\\Config description No description available public ConfigBag::setApplicationConfig(Config $applicationConfig) $applicationConfig type Config description No description available return type void description No description available public ConfigBag::setMkdocsConfig(Config $mkdocsConfig) $mkdocsConfig type Config description No description available return type void description No description available public ConfigBag::setRosterConfig(Config $rosterConfig) $rosterConfig type Config description No description available return type void description No description available This documentation was generated with Roster .","title":"ConfigBag"},{"location":"roster/v0.2/Roster/ConfigBag/#samsararoster-configbag","text":"No description available","title":"Samsara\\Roster &gt; ConfigBag"},{"location":"roster/v0.2/Roster/Roster/","text":"Samsara\\Roster > Roster Class Roster This class performs all of the command logic to actually build the documentation with the right options and in the right order. The execute() method is the only one directly invoked by the CLI application, and it dispatches all other function calls. Inheritance Extends Symfony\\Component\\Console\\Command\\Command Variables & Data Class Constants Roster::SUCCESS value 0 Roster::FAILURE value 1 Roster::INVALID value 2 Inherited Properties protected Command::defaultName type mixed (assumed) value uninitialized protected Command::defaultDescription type mixed (assumed) value uninitialized Methods Constructor public Roster->__construct($rootDir) $rootDir description No description available return type mixed (assumed) description No description available Instanced Methods protected Roster->configure() return type void description No description available protected Roster->execute(InputInterface $input, OutputInterface $output) $input type InputInterface description No description available $output type OutputInterface description No description available return type int description No description available Roster->execute Description execute() method This function performs all of the application logic. All actions performed by the script are at least started from this function. protected Roster->buildMkdocsNav(string $baseExportPath) $baseExportPath type string description The realpath() of the location docs are exported to return type array description No description available Roster->buildMkdocsNav Description buildMkdocsNav This function takes in the base export path and outputs the namespace information about all the compiled and written document files as an array structured as a tree. This array structure is close, but not quite completely, the format that YAML requires to build the nav option within the mkdocs.yml file. Example 1 $tree = $this->buildMkDocsNav('/path/to/project/docs') 2 echo var_export($tree, true); 3 // Possible Output: 4 // [ 5 // 'Samsara' => [ 6 // 'Roster' => [ 7 // 'TemplateFactory' => 'roster/latest/Samsara/Roster/TemplateFactory.md', 8 // 'Roster' => 'roster/latest/Samsara/Roster/Roster.md', 9 // 'App' => 'roster/latest/Samsara/Roster/App.md' 10 // ] 11 // ] 12 // ] protected Roster->formatNavArrayRecursive(array $nav) $nav type array description A return type array description No description available Roster->formatNavArrayRecursive Description formatNavArrayRecursive() method This function takes a tree array from buildMkdocsNav() are returns an array that has been reformatted for the expected YAML structure in a mkdocs.yml file nav setting. Example 1 $nav = $this->formatNavArrayRecursive($tree) 2 echo var_export($nav, true); 3 // Possible Output: 4 // [ 5 // 0 => [ 6 // 'Samsara' => [ 7 // 0 => [ 8 // 'Roster' => [ 9 // 0 => ['TemplateFactory' => 'roster/latest/Samsara/Roster/TemplateFactory.md'], 10 // 1 => ['Roster' => 'roster/latest/Samsara/Roster/Roster.md'], 11 // 2 => ['App' => 'roster/latest/Samsara/Roster/App.md'] 12 // ] 13 // ] 14 // ] 15 // ] 16 // ] protected Roster->buildNavArrayRecursive(array $parts, int $depth, string $builtString) $parts type array description No description available $depth type int description No description available $builtString type string description No description available return type array description No description available Roster->buildNavArrayRecursive Description buildNavArrayRecursive() method This function takes a flat array and reorganizes it into a tree structure. Example 1 $flat = ['Samsara', 'Roster', 'Processors', 'TemplateProcessor']; 2 $leaf = $this->buildNavArrayRecursive($flat); 3 echo var_export($leaf); 4 // Output: 5 // [ 6 // 'Samsara' => [ 7 // 'Roster' => [ 8 // 'Processors' => [ 9 // 'TemplateProcessor' => 'roster/latest/Samsara/Roster/Processors/TemplateProcessor.md' 10 // ] 11 // ] 12 // ] 13 // ] protected Roster->traverseDirectories(string $dir) $dir type string description No description available return type array description No description available protected Roster->extractFileData(string $realPath) $realPath type string description No description available return type void description No description available protected Roster->createReflectors() return type void description No description available protected Roster->processTemplates(string $templatePath) $templatePath type string description No description available return type void description No description available Inherited Static Methods public Command::getDefaultName() return type string|null description No description available public Command::getDefaultDescription() return type ?string description No description available Inherited Methods public Command->ignoreValidationErrors() return type mixed (assumed) description No description available public Command->setApplication(?Symfony\\Component\\Console\\Application $application) $application type ?Symfony\\Component\\Console\\Application description No description available return type mixed (assumed) description No description available public Command->setHelperSet(Symfony\\Component\\Console\\Helper\\HelperSet $helperSet) $helperSet type Symfony\\Component\\Console\\Helper\\HelperSet description No description available return type mixed (assumed) description No description available public Command->getHelperSet() return type HelperSet|null description No description available Command->getHelperSet Description Gets the helper set. public Command->getApplication() return type Application|null description No description available Command->getApplication Description Gets the application instance for this command. public Command->isEnabled() return type bool description No description available Command->isEnabled Description Checks whether the command is enabled or not in the current environment. Override this to check for x or y and return false if the command can not run properly under the current conditions. public Command->run(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available Command->run Description Runs the command. The code to execute is either defined directly with the setCode() method or by overriding the execute() method in a sub-class. public Command->setCode(callable $code) $code type callable description A callable(InputInterface $input, OutputInterface $output) return type $this description No description available Command->setCode Description Sets the code to execute when running this command. If this method is used, it overrides the code defined in the execute() method. public Command->mergeApplicationDefinition(bool $mergeArgs) $mergeArgs type bool description Whether to merge or not the Application definition arguments to Command definition arguments return type mixed (assumed) description No description available Command->mergeApplicationDefinition Description Merges the application definition with the command definition. This method is not part of public API and should not be used directly. public Command->setDefinition(array|InputDefinition $definition) $definition type array|InputDefinition description An array of argument and option instances or a definition instance return type $this description No description available Command->setDefinition Description Sets an array of argument and option instances. public Command->getDefinition() return type InputDefinition description No description available Command->getDefinition Description Gets the InputDefinition attached to this Command. public Command->getNativeDefinition() return type InputDefinition description No description available Command->getNativeDefinition Description Gets the InputDefinition to be used to create representations of this Command. Can be overridden to provide the original command representation when it would otherwise be changed by merging with the application InputDefinition. This method is not part of public API and should not be used directly. public Command->addArgument(string $name, int|null $mode, string $description, string|string[]|null $default) $name type string description No description available $mode type int|null description The argument mode: InputArgument::REQUIRED or InputArgument::OPTIONAL $description type string description No description available $default type string|string[]|null description The default value (for InputArgument::OPTIONAL mode only) return type $this description No description available Command->addArgument Description Adds an argument. public Command->addOption(string $name, string|array|null $shortcut, int|null $mode, string $description, string|string[]|bool|null $default) $name type string description No description available $shortcut type string|array|null description The shortcuts, can be null, a string of shortcuts delimited by | or an array of shortcuts $mode type int|null description The option mode: One of the InputOption::VALUE_* constants $description type string description No description available $default type string|string[]|bool|null description The default value (must be null for InputOption::VALUE_NONE) return type $this description No description available Command->addOption Description Adds an option. public Command->setName(string $name) $name type string description No description available return type $this description No description available Command->setName Description Sets the name of the command. This method can set both the namespace and the name if you separate them by a colon (:) command->setName('foo:bar'); public Command->setProcessTitle(string $title) $title type string description No description available return type $this description No description available Command->setProcessTitle Description Sets the process title of the command. This feature should be used only when creating a long process command, like a daemon. public Command->getName() return type string|null description No description available Command->getName Description Returns the command name. public Command->setHidden(bool $hidden) $hidden type bool description Whether or not the command should be hidden from the list of commands The default value will be true in Symfony 6.0 return type Command description No description available public Command->isHidden() return type bool description No description available public Command->setDescription(string $description) $description type string description No description available return type $this description No description available Command->setDescription Description Sets the description for the command. public Command->getDescription() return type string description No description available Command->getDescription Description Returns the description for the command. public Command->setHelp(string $help) $help type string description No description available return type $this description No description available Command->setHelp Description Sets the help for the command. public Command->getHelp() return type string description No description available Command->getHelp Description Returns the help for the command. public Command->getProcessedHelp() return type string description No description available Command->getProcessedHelp Description Returns the processed help for the command replacing the %command.name% and command.full_name% patterns with the real values dynamically. public Command->setAliases(string[] $aliases) $aliases type string[] description An array of aliases for the command return type $this description No description available Command->setAliases Description Sets the aliases for the command. public Command->getAliases() return type array description No description available Command->getAliases Description Returns the aliases for the command. public Command->getSynopsis(bool $short) $short type bool description Whether to show the short version of the synopsis (with options folded) or not return type string description No description available Command->getSynopsis Description Returns the synopsis for the command. public Command->addUsage(string $usage) $usage type string description No description available return type $this description No description available Command->addUsage Description Add a command usage example, it'll be prefixed with the command name. public Command->getUsages() return type array description No description available Command->getUsages Description Returns alternative usages of the command. public Command->getHelper(string $name) $name type string description No description available return type mixed description No description available Command->getHelper Description Gets a helper instance by name. protected Command->interact(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type mixed (assumed) description No description available protected Command->initialize(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type mixed (assumed) description No description available Command->initialize Description Initializes the command after the input has been bound and before the input is validated. This is mainly useful when a lot of commands extends one main command where some things need to be initialized based on the input arguments and options. This documentation was generated with Roster .","title":"Roster"},{"location":"roster/v0.2/Roster/Roster/#samsararoster-roster","text":"Class Roster This class performs all of the command logic to actually build the documentation with the right options and in the right order. The execute() method is the only one directly invoked by the CLI application, and it dispatches all other function calls.","title":"Samsara\\Roster &gt; Roster"},{"location":"roster/v0.2/Roster/TemplateFactory/","text":"Samsara\\Roster > TemplateFactory No description available Methods Static Methods public TemplateFactory::pushTemplate(string $filePath, string $extension) $filePath type string description No description available $extension type string description No description available return type mixed (assumed) description No description available public TemplateFactory::getTemplate(string $name) $name type string description No description available return type Samsara\\Roster\\Processors\\TemplateProcessor|false description No description available public TemplateFactory::queueCompile(string $path, Samsara\\Roster\\Processors\\TemplateProcessor|Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor $template, string $extension) $path type string description No description available $template type Samsara\\Roster\\Processors\\TemplateProcessor|Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor description No description available $extension type string description No description available return type mixed (assumed) description No description available public TemplateFactory::hasTemplate(string $name) $name type string description No description available return type bool description No description available public TemplateFactory::compileAll(Symfony\\Component\\Console\\Style\\SymfonyStyle $io) $io type Symfony\\Component\\Console\\Style\\SymfonyStyle description No description available return type mixed (assumed) description No description available public TemplateFactory::getWrittenFiles() return type array description No description available public TemplateFactory::writeToDocs(string $writePath, Symfony\\Component\\Console\\Style\\SymfonyStyle $io) $writePath type string description No description available $io type Symfony\\Component\\Console\\Style\\SymfonyStyle description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"TemplateFactory"},{"location":"roster/v0.2/Roster/TemplateFactory/#samsararoster-templatefactory","text":"No description available","title":"Samsara\\Roster &gt; TemplateFactory"},{"location":"roster/v0.2/Roster/Processors/ClassProcessor/","text":"Samsara\\Roster\\Processors > ClassProcessor This class takes in a class reflector and builds out the entire doc for that class, including all subdocs. Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass type string value '' protected BaseCodeProcessor->docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public ClassProcessor->__construct(ReflectionClass $class, string $templateName) $class type ReflectionClass description This is the reflection class of the class that you want to build a doc from. $templateName type string description No description available return type mixed (assumed) description No description available ClassProcessor->__construct Description ClassProcessor constructor Instanced Methods public ClassProcessor->compile() return type string description No description available protected ClassProcessor->buildClassInfo() return type mixed (assumed) description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"ClassProcessor"},{"location":"roster/v0.2/Roster/Processors/ClassProcessor/#samsararosterprocessors-classprocessor","text":"This class takes in a class reflector and builds out the entire doc for that class, including all subdocs.","title":"Samsara\\Roster\\Processors &gt; ClassProcessor"},{"location":"roster/v0.2/Roster/Processors/InterfaceInlineProcessor/","text":"Samsara\\Roster\\Processors > InterfaceInlineProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass type string value '' protected BaseCodeProcessor->docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public InterfaceInlineProcessor->__construct(ReflectionClass $interface) $interface type ReflectionClass description No description available return type mixed (assumed) description No description available Instanced Methods public InterfaceInlineProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"InterfaceInlineProcessor"},{"location":"roster/v0.2/Roster/Processors/InterfaceInlineProcessor/#samsararosterprocessors-interfaceinlineprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; InterfaceInlineProcessor"},{"location":"roster/v0.2/Roster/Processors/MethodArgumentDetailProcessor/","text":"Samsara\\Roster\\Processors > MethodArgumentDetailProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass type string value '' protected BaseCodeProcessor->docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public MethodArgumentDetailProcessor->__construct(array $parameters, Samsara\\Mason\\DocBlockProcessor $docBlockProcessor) $parameters type array description No description available $docBlockProcessor type Samsara\\Mason\\DocBlockProcessor description No description available return type mixed (assumed) description No description available Instanced Methods public MethodArgumentDetailProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"MethodArgumentDetailProcessor"},{"location":"roster/v0.2/Roster/Processors/MethodArgumentDetailProcessor/#samsararosterprocessors-methodargumentdetailprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; MethodArgumentDetailProcessor"},{"location":"roster/v0.2/Roster/Processors/MethodArgumentProcessor/","text":"Samsara\\Roster\\Processors > MethodArgumentProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass type string value '' protected BaseCodeProcessor->docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public MethodArgumentProcessor->__construct(array $parameters, Samsara\\Mason\\DocBlockProcessor $docBlockProcessor) $parameters type array description No description available $docBlockProcessor type Samsara\\Mason\\DocBlockProcessor description No description available return type mixed (assumed) description No description available Instanced Methods public MethodArgumentProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"MethodArgumentProcessor"},{"location":"roster/v0.2/Roster/Processors/MethodArgumentProcessor/#samsararosterprocessors-methodargumentprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; MethodArgumentProcessor"},{"location":"roster/v0.2/Roster/Processors/MethodProcessor/","text":"Samsara\\Roster\\Processors > MethodProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass type string value '' protected BaseCodeProcessor->docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public MethodProcessor->__construct(ReflectionMethod $method, string $templateName) $method type ReflectionMethod description No description available $templateName type string description No description available return type mixed (assumed) description No description available Instanced Methods public MethodProcessor->compile() return type string description No description available protected MethodProcessor->buildMethodInfo() return type mixed (assumed) description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"MethodProcessor"},{"location":"roster/v0.2/Roster/Processors/MethodProcessor/#samsararosterprocessors-methodprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; MethodProcessor"},{"location":"roster/v0.2/Roster/Processors/PropertyProcessor/","text":"Samsara\\Roster\\Processors > PropertyProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass type string value '' protected BaseCodeProcessor->docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public PropertyProcessor->__construct(ReflectionProperty $property, string $templateName) $property type ReflectionProperty description No description available $templateName type string description No description available return type mixed (assumed) description No description available Instanced Methods public PropertyProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"PropertyProcessor"},{"location":"roster/v0.2/Roster/Processors/PropertyProcessor/#samsararosterprocessors-propertyprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; PropertyProcessor"},{"location":"roster/v0.2/Roster/Processors/TemplateProcessor/","text":"Samsara\\Roster\\Processors > TemplateProcessor No description available Methods Constructor public TemplateProcessor->__construct(string $template) $template type string description No description available return type mixed (assumed) description No description available Instanced Methods public TemplateProcessor->has($key) $key description No description available return type mixed (assumed) description No description available public TemplateProcessor->markHas($key) $key description No description available return type mixed (assumed) description No description available public TemplateProcessor->supplyReplacement(string $key, Samsara\\Roster\\Processors\\TemplateProcessor|array|string $replacement) $key type string description No description available $replacement type Samsara\\Roster\\Processors\\TemplateProcessor|array|string description No description available return type mixed (assumed) description No description available public TemplateProcessor->compile() return type string description No description available protected TemplateProcessor->buildHasBlocks($template, $depth) $template description No description available $depth description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"TemplateProcessor"},{"location":"roster/v0.2/Roster/Processors/TemplateProcessor/#samsararosterprocessors-templateprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; TemplateProcessor"},{"location":"roster/v0.2/Roster/Processors/TraitInlineProcessor/","text":"Samsara\\Roster\\Processors > TraitInlineProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass type string value '' protected BaseCodeProcessor->docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public TraitInlineProcessor->__construct(ReflectionClass $trait, array $aliases) $trait type ReflectionClass description No description available $aliases type array description No description available return type mixed (assumed) description No description available Instanced Methods public TraitInlineProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"TraitInlineProcessor"},{"location":"roster/v0.2/Roster/Processors/TraitInlineProcessor/#samsararosterprocessors-traitinlineprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; TraitInlineProcessor"},{"location":"roster/v0.2/Roster/Processors/Base/BaseCodeProcessor/","text":"Samsara\\Roster\\Processors\\Base > BaseCodeProcessor No description available Variables & Data Properties protected BaseCodeProcessor->declaringClass type string value '' protected BaseCodeProcessor->docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Instanced Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available public BaseCodeProcessor->compile() return type mixed (assumed) description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"BaseCodeProcessor"},{"location":"roster/v0.2/Roster/Processors/Base/BaseCodeProcessor/#samsararosterprocessorsbase-basecodeprocessor","text":"No description available","title":"Samsara\\Roster\\Processors\\Base &gt; BaseCodeProcessor"},{"location":"roster/v0.2/Samsara/Roster/App/","text":"Samsara\\Roster > App Class App This class configures and sets up the Symfony/Console application so that it is ready for the command to be executed. Inheritance Extends Symfony\\Component\\Console\\Application Implements ResetInterface namespace Symfony\\Contracts\\Service description No description available Variables & Data Class Constants App::NAME value 'Roster Markdown Documentation Generator' App::VERSION value 'v0.1.0' Methods Constructor public App->__construct() return type mixed (assumed) description No description available Instanced Methods public App->run(?Symfony\\Component\\Console\\Input\\InputInterface $input, ?Symfony\\Component\\Console\\Output\\OutputInterface $output) $input type ?Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type ?Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available Inherited Static Methods public Application::getAbbreviations(array $names) $names type array description No description available return type string[][] description No description available Application::getAbbreviations Description Returns an array of possible abbreviations given a set of names. Inherited Methods public Application->setDispatcher(Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface $dispatcher) $dispatcher type Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface description No description available return type mixed (assumed) description No description available public Application->setCommandLoader(Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface $commandLoader) $commandLoader type Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface description No description available return type mixed (assumed) description No description available public Application->getSignalRegistry() return type Symfony\\Component\\Console\\SignalRegistry\\SignalRegistry description No description available public Application->setSignalsToDispatchEvent(int $signalsToDispatchEvent) $signalsToDispatchEvent type int description No description available return type mixed (assumed) description No description available public Application->doRun(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available Application->doRun Description Runs the current application. public Application->reset() return type mixed (assumed) description No description available public Application->setHelperSet(Symfony\\Component\\Console\\Helper\\HelperSet $helperSet) $helperSet type Symfony\\Component\\Console\\Helper\\HelperSet description No description available return type mixed (assumed) description No description available public Application->getHelperSet() return type HelperSet description No description available Application->getHelperSet Description Get the helper set associated with the command. public Application->setDefinition(Symfony\\Component\\Console\\Input\\InputDefinition $definition) $definition type Symfony\\Component\\Console\\Input\\InputDefinition description No description available return type mixed (assumed) description No description available public Application->getDefinition() return type InputDefinition description No description available Application->getDefinition Description Gets the InputDefinition related to this Application. public Application->getHelp() return type string description No description available Application->getHelp Description Gets the help message. public Application->areExceptionsCaught() return type bool description No description available Application->areExceptionsCaught Description Gets whether to catch exceptions or not during commands execution. public Application->setCatchExceptions(bool $boolean) $boolean type bool description No description available return type mixed (assumed) description No description available public Application->isAutoExitEnabled() return type bool description No description available Application->isAutoExitEnabled Description Gets whether to automatically exit after a command execution or not. public Application->setAutoExit(bool $boolean) $boolean type bool description No description available return type mixed (assumed) description No description available public Application->getName() return type string description No description available Application->getName Description Gets the name of the application. public Application->setName(string $name) $name type string description No description available return type mixed (assumed) description No description available public Application->getVersion() return type string description No description available Application->getVersion Description Gets the application version. public Application->setVersion(string $version) $version type string description No description available return type mixed (assumed) description No description available public Application->getLongVersion() return type string description No description available Application->getLongVersion Description Returns the long version of the application. public Application->register(string $name) $name type string description No description available return type Command description No description available Application->register Description Registers a new command. public Application->addCommands(Command[] $commands) $commands type Command[] description An array of commands return type mixed (assumed) description No description available Application->addCommands Description Adds an array of command objects. If a Command is not enabled it will not be added. public Application->add(Symfony\\Component\\Console\\Command\\Command $command) $command type Symfony\\Component\\Console\\Command\\Command description No description available return type Command|null description No description available Application->add Description Adds a command object. If a command with the same name already exists, it will be overridden. If the command is not enabled it will not be added. public Application->get(string $name) $name type string description No description available return type Command description No description available Application->get Description Returns a registered command by name or alias. public Application->has(string $name) $name type string description No description available return type bool description No description available Application->has Description Returns true if the command exists, false otherwise. public Application->getNamespaces() return type string[] description No description available Application->getNamespaces Description Returns an array of all unique namespaces used by currently registered commands. It does not return the global namespace which always exists. public Application->findNamespace(string $namespace) $namespace type string description No description available return type string description No description available Application->findNamespace Description Finds a registered namespace by a name or an abbreviation. public Application->find(string $name) $name type string description No description available return type Command description No description available Application->find Description Finds a command by name or alias. Contrary to get, this command tries to find the best match if you give it an abbreviation of a name or alias. public Application->all(?string $namespace) $namespace type ?string description No description available return type Command[] description No description available Application->all Description Gets the commands (registered in the given namespace if provided). The array keys are the full names and the values the command instances. public Application->renderThrowable(Throwable $e, Symfony\\Component\\Console\\Output\\OutputInterface $output) $e type Throwable description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type void description No description available public Application->extractNamespace(string $name, ?int $limit) $name type string description No description available $limit type ?int description No description available return type string description No description available Application->extractNamespace Description Returns the namespace part of the command name. This method is not part of public API and should not be used directly. public Application->setDefaultCommand(string $commandName, bool $isSingleCommand) $commandName type string description No description available $isSingleCommand type bool description No description available return type self description No description available Application->setDefaultCommand Description Sets the default Command name. public Application->isSingleCommand() return type bool description No description available This documentation was generated with Roster .","title":"Samsara\\Roster > App"},{"location":"roster/v0.2/Samsara/Roster/App/#samsararoster-app","text":"Class App This class configures and sets up the Symfony/Console application so that it is ready for the command to be executed.","title":"Samsara\\Roster &gt; App"},{"location":"roster/v0.2/Samsara/Roster/ConfigBag/","text":"Samsara\\Roster > ConfigBag No description available Methods Static Methods public ConfigBag::getApplicationConfig() return type Noodlehaus\\Config description No description available public ConfigBag::getMkdocsConfig() return type Noodlehaus\\Config description No description available public ConfigBag::getRosterConfig() return type Noodlehaus\\Config description No description available public ConfigBag::setApplicationConfig(Config $applicationConfig) $applicationConfig type Config description No description available return type void description No description available public ConfigBag::setMkdocsConfig(Config $mkdocsConfig) $mkdocsConfig type Config description No description available return type void description No description available public ConfigBag::setRosterConfig(Config $rosterConfig) $rosterConfig type Config description No description available return type void description No description available This documentation was generated with Roster .","title":"Samsara\\Roster > ConfigBag"},{"location":"roster/v0.2/Samsara/Roster/ConfigBag/#samsararoster-configbag","text":"No description available","title":"Samsara\\Roster &gt; ConfigBag"},{"location":"roster/v0.2/Samsara/Roster/Roster/","text":"Samsara\\Roster > Roster Class Roster This class performs all of the command logic to actually build the documentation with the right options and in the right order. The execute() method is the only one directly invoked by the CLI application, and it dispatches all other function calls. Inheritance Extends Symfony\\Component\\Console\\Command\\Command Variables & Data Class Constants Roster::SUCCESS value 0 Roster::FAILURE value 1 Roster::INVALID value 2 Methods Constructor public Roster->__construct($rootDir) $rootDir description No description available return type mixed (assumed) description No description available Inherited Static Methods public Command::getDefaultName() return type string|null description No description available public Command::getDefaultDescription() return type ?string description No description available Inherited Methods public Command->ignoreValidationErrors() return type mixed (assumed) description No description available public Command->setApplication(?Symfony\\Component\\Console\\Application $application) $application type ?Symfony\\Component\\Console\\Application description No description available return type mixed (assumed) description No description available public Command->setHelperSet(Symfony\\Component\\Console\\Helper\\HelperSet $helperSet) $helperSet type Symfony\\Component\\Console\\Helper\\HelperSet description No description available return type mixed (assumed) description No description available public Command->getHelperSet() return type HelperSet|null description No description available Command->getHelperSet Description Gets the helper set. public Command->getApplication() return type Application|null description No description available Command->getApplication Description Gets the application instance for this command. public Command->isEnabled() return type bool description No description available Command->isEnabled Description Checks whether the command is enabled or not in the current environment. Override this to check for x or y and return false if the command can not run properly under the current conditions. public Command->run(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available Command->run Description Runs the command. The code to execute is either defined directly with the setCode() method or by overriding the execute() method in a sub-class. public Command->setCode(callable $code) $code type callable description A callable(InputInterface $input, OutputInterface $output) return type $this description No description available Command->setCode Description Sets the code to execute when running this command. If this method is used, it overrides the code defined in the execute() method. public Command->mergeApplicationDefinition(bool $mergeArgs) $mergeArgs type bool description Whether to merge or not the Application definition arguments to Command definition arguments return type mixed (assumed) description No description available Command->mergeApplicationDefinition Description Merges the application definition with the command definition. This method is not part of public API and should not be used directly. public Command->setDefinition(array|InputDefinition $definition) $definition type array|InputDefinition description An array of argument and option instances or a definition instance return type $this description No description available Command->setDefinition Description Sets an array of argument and option instances. public Command->getDefinition() return type InputDefinition description No description available Command->getDefinition Description Gets the InputDefinition attached to this Command. public Command->getNativeDefinition() return type InputDefinition description No description available Command->getNativeDefinition Description Gets the InputDefinition to be used to create representations of this Command. Can be overridden to provide the original command representation when it would otherwise be changed by merging with the application InputDefinition. This method is not part of public API and should not be used directly. public Command->addArgument(string $name, int|null $mode, string $description, string|string[]|null $default) $name type string description No description available $mode type int|null description The argument mode: InputArgument::REQUIRED or InputArgument::OPTIONAL $description type string description No description available $default type string|string[]|null description The default value (for InputArgument::OPTIONAL mode only) return type $this description No description available Command->addArgument Description Adds an argument. public Command->addOption(string $name, string|array|null $shortcut, int|null $mode, string $description, string|string[]|bool|null $default) $name type string description No description available $shortcut type string|array|null description The shortcuts, can be null, a string of shortcuts delimited by | or an array of shortcuts $mode type int|null description The option mode: One of the InputOption::VALUE_* constants $description type string description No description available $default type string|string[]|bool|null description The default value (must be null for InputOption::VALUE_NONE) return type $this description No description available Command->addOption Description Adds an option. public Command->setName(string $name) $name type string description No description available return type $this description No description available Command->setName Description Sets the name of the command. This method can set both the namespace and the name if you separate them by a colon (:) command->setName('foo:bar'); public Command->setProcessTitle(string $title) $title type string description No description available return type $this description No description available Command->setProcessTitle Description Sets the process title of the command. This feature should be used only when creating a long process command, like a daemon. public Command->getName() return type string|null description No description available Command->getName Description Returns the command name. public Command->setHidden(bool $hidden) $hidden type bool description Whether or not the command should be hidden from the list of commands The default value will be true in Symfony 6.0 return type Command description No description available public Command->isHidden() return type bool description No description available public Command->setDescription(string $description) $description type string description No description available return type $this description No description available Command->setDescription Description Sets the description for the command. public Command->getDescription() return type string description No description available Command->getDescription Description Returns the description for the command. public Command->setHelp(string $help) $help type string description No description available return type $this description No description available Command->setHelp Description Sets the help for the command. public Command->getHelp() return type string description No description available Command->getHelp Description Returns the help for the command. public Command->getProcessedHelp() return type string description No description available Command->getProcessedHelp Description Returns the processed help for the command replacing the %command.name% and command.full_name% patterns with the real values dynamically. public Command->setAliases(string[] $aliases) $aliases type string[] description An array of aliases for the command return type $this description No description available Command->setAliases Description Sets the aliases for the command. public Command->getAliases() return type array description No description available Command->getAliases Description Returns the aliases for the command. public Command->getSynopsis(bool $short) $short type bool description Whether to show the short version of the synopsis (with options folded) or not return type string description No description available Command->getSynopsis Description Returns the synopsis for the command. public Command->addUsage(string $usage) $usage type string description No description available return type $this description No description available Command->addUsage Description Add a command usage example, it'll be prefixed with the command name. public Command->getUsages() return type array description No description available Command->getUsages Description Returns alternative usages of the command. public Command->getHelper(string $name) $name type string description No description available return type mixed description No description available Command->getHelper Description Gets a helper instance by name. This documentation was generated with Roster .","title":"Samsara\\Roster > Roster"},{"location":"roster/v0.2/Samsara/Roster/Roster/#samsararoster-roster","text":"Class Roster This class performs all of the command logic to actually build the documentation with the right options and in the right order. The execute() method is the only one directly invoked by the CLI application, and it dispatches all other function calls.","title":"Samsara\\Roster &gt; Roster"},{"location":"roster/v0.2/Samsara/Roster/TemplateFactory/","text":"Samsara\\Roster > TemplateFactory No description available Methods Static Methods public TemplateFactory::pushTemplate(string $filePath, string $extension) $filePath type string description No description available $extension type string description No description available return type mixed (assumed) description No description available public TemplateFactory::getTemplate(string $name) $name type string description No description available return type Samsara\\Roster\\Processors\\TemplateProcessor|false description No description available public TemplateFactory::queueCompile(string $path, Samsara\\Roster\\Processors\\TemplateProcessor|Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor $template, string $extension) $path type string description No description available $template type Samsara\\Roster\\Processors\\TemplateProcessor|Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor description No description available $extension type string description No description available return type mixed (assumed) description No description available public TemplateFactory::hasTemplate(string $name) $name type string description No description available return type bool description No description available public TemplateFactory::compileAll(Symfony\\Component\\Console\\Style\\SymfonyStyle $io) $io type Symfony\\Component\\Console\\Style\\SymfonyStyle description No description available return type mixed (assumed) description No description available public TemplateFactory::getWrittenFiles() return type array description No description available public TemplateFactory::writeToDocs(string $writePath, Symfony\\Component\\Console\\Style\\SymfonyStyle $io) $writePath type string description No description available $io type Symfony\\Component\\Console\\Style\\SymfonyStyle description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"Samsara\\Roster > TemplateFactory"},{"location":"roster/v0.2/Samsara/Roster/TemplateFactory/#samsararoster-templatefactory","text":"No description available","title":"Samsara\\Roster &gt; TemplateFactory"},{"location":"roster/v0.2/Samsara/Roster/Processors/ClassProcessor/","text":"Samsara\\Roster\\Processors > ClassProcessor This class takes in a class reflector and builds out the entire doc for that class, including all subdocs. Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Methods Constructor public ClassProcessor->__construct(ReflectionClass $class, string $templateName) $class type ReflectionClass description This is the reflection class of the class that you want to build a doc from. $templateName type string description No description available return type mixed (assumed) description No description available ClassProcessor->__construct Description ClassProcessor constructor Instanced Methods public ClassProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Roster\\Processors > ClassProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/ClassProcessor/#samsararosterprocessors-classprocessor","text":"This class takes in a class reflector and builds out the entire doc for that class, including all subdocs.","title":"Samsara\\Roster\\Processors &gt; ClassProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/InterfaceInlineProcessor/","text":"Samsara\\Roster\\Processors > InterfaceInlineProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Methods Constructor public InterfaceInlineProcessor->__construct(ReflectionClass $interface) $interface type ReflectionClass description No description available return type mixed (assumed) description No description available Instanced Methods public InterfaceInlineProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Roster\\Processors > InterfaceInlineProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/InterfaceInlineProcessor/#samsararosterprocessors-interfaceinlineprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; InterfaceInlineProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/MethodArgumentDetailProcessor/","text":"Samsara\\Roster\\Processors > MethodArgumentDetailProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Methods Constructor public MethodArgumentDetailProcessor->__construct(array $parameters, Samsara\\Mason\\DocBlockProcessor $docBlockProcessor) $parameters type array description No description available $docBlockProcessor type Samsara\\Mason\\DocBlockProcessor description No description available return type mixed (assumed) description No description available Instanced Methods public MethodArgumentDetailProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Roster\\Processors > MethodArgumentDetailProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/MethodArgumentDetailProcessor/#samsararosterprocessors-methodargumentdetailprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; MethodArgumentDetailProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/MethodArgumentProcessor/","text":"Samsara\\Roster\\Processors > MethodArgumentProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Methods Constructor public MethodArgumentProcessor->__construct(array $parameters, Samsara\\Mason\\DocBlockProcessor $docBlockProcessor) $parameters type array description No description available $docBlockProcessor type Samsara\\Mason\\DocBlockProcessor description No description available return type mixed (assumed) description No description available Instanced Methods public MethodArgumentProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Roster\\Processors > MethodArgumentProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/MethodArgumentProcessor/#samsararosterprocessors-methodargumentprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; MethodArgumentProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/MethodProcessor/","text":"Samsara\\Roster\\Processors > MethodProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Methods Constructor public MethodProcessor->__construct(ReflectionMethod $method, string $templateName) $method type ReflectionMethod description No description available $templateName type string description No description available return type mixed (assumed) description No description available Instanced Methods public MethodProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Roster\\Processors > MethodProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/MethodProcessor/#samsararosterprocessors-methodprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; MethodProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/PropertyProcessor/","text":"Samsara\\Roster\\Processors > PropertyProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Methods Constructor public PropertyProcessor->__construct(ReflectionProperty $property, string $templateName) $property type ReflectionProperty description No description available $templateName type string description No description available return type mixed (assumed) description No description available Instanced Methods public PropertyProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Roster\\Processors > PropertyProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/PropertyProcessor/#samsararosterprocessors-propertyprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; PropertyProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/TemplateProcessor/","text":"Samsara\\Roster\\Processors > TemplateProcessor No description available Methods Constructor public TemplateProcessor->__construct(string $template) $template type string description No description available return type mixed (assumed) description No description available Instanced Methods public TemplateProcessor->has($key) $key description No description available return type mixed (assumed) description No description available public TemplateProcessor->markHas($key) $key description No description available return type mixed (assumed) description No description available public TemplateProcessor->supplyReplacement(string $key, Samsara\\Roster\\Processors\\TemplateProcessor|array|string $replacement) $key type string description No description available $replacement type Samsara\\Roster\\Processors\\TemplateProcessor|array|string description No description available return type mixed (assumed) description No description available public TemplateProcessor->compile() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Roster\\Processors > TemplateProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/TemplateProcessor/#samsararosterprocessors-templateprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; TemplateProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/TraitInlineProcessor/","text":"Samsara\\Roster\\Processors > TraitInlineProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Methods Constructor public TraitInlineProcessor->__construct(ReflectionClass $trait, array $aliases) $trait type ReflectionClass description No description available $aliases type array description No description available return type mixed (assumed) description No description available Instanced Methods public TraitInlineProcessor->compile() return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available This documentation was generated with Roster .","title":"Samsara\\Roster\\Processors > TraitInlineProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/TraitInlineProcessor/#samsararosterprocessors-traitinlineprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; TraitInlineProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/Base/BaseCodeProcessor/","text":"Samsara\\Roster\\Processors\\Base > BaseCodeProcessor No description available Methods Instanced Methods public BaseCodeProcessor->getDeclaringClass() return type string description No description available public BaseCodeProcessor->compile() return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"Samsara\\Roster\\Processors\\Base > BaseCodeProcessor"},{"location":"roster/v0.2/Samsara/Roster/Processors/Base/BaseCodeProcessor/#samsararosterprocessorsbase-basecodeprocessor","text":"No description available","title":"Samsara\\Roster\\Processors\\Base &gt; BaseCodeProcessor"}]}