{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Roster | Docs From The Source Check It Out! This documentation was built and deployed by running one command: php vendor/bin/roster Roster is a PHP command line program that allows you to build documentation from your code. It inspects the files in your codebase and looks at the PHPDoc comments associated with them, and then builds documentation in Markdown. But it doesn't have to. The nice thing about Roster is that you can export the documentation however you please. It comes pre-configured with templates for Markdown, but it has a templating engine built in, so if you want to export the docs in a different format it's pretty simple to do (even if it would probably take some time). Built-In Integration With MkDocs The python program MkDocs is a great way to write documentation in Markdown and then export it to Github pages. The workflow is extremely simple, and if you're unfamiliar I highly encourage you to take a look. The good news is that Roster includes a set of templates that will build out this exact documentation formatting you see here. Simply call Roster with the --mkdocs flag, and it will not only build the Markdown files, but also build your mkdocs.yml and requirements.txt files, as well as exporting a copy of the CSS used in this documentation. See Also For more information on how to use the command, see the Using the Command page. PHP 8 Ready Or rather, PHP 8 only . There are lots of programs that can't move to PHP 8 quite yet, but your documentation can benefit from PHP 8 before your codebase does. Simply call the roster command using a PHP 8 binary from your development box, no need to upgrade your servers. See Also For more information on installation and usage requirements, see the Installation page. Bleeding Edge This program is in very early release Roster has only been in development for a few weeks, so there are bound to be edge cases, quirks, and bugs that haven't been worked out. If you spot any, please make a bug report . The nice thing is, even if there are bugs, they won't affect your program. We're only building the documentation files after all!","title":"Home"},{"location":"#roster-docs-from-the-source","text":"Check It Out! This documentation was built and deployed by running one command: php vendor/bin/roster Roster is a PHP command line program that allows you to build documentation from your code. It inspects the files in your codebase and looks at the PHPDoc comments associated with them, and then builds documentation in Markdown. But it doesn't have to. The nice thing about Roster is that you can export the documentation however you please. It comes pre-configured with templates for Markdown, but it has a templating engine built in, so if you want to export the docs in a different format it's pretty simple to do (even if it would probably take some time).","title":"Roster | Docs From The Source"},{"location":"#built-in-integration-with-mkdocs","text":"The python program MkDocs is a great way to write documentation in Markdown and then export it to Github pages. The workflow is extremely simple, and if you're unfamiliar I highly encourage you to take a look. The good news is that Roster includes a set of templates that will build out this exact documentation formatting you see here. Simply call Roster with the --mkdocs flag, and it will not only build the Markdown files, but also build your mkdocs.yml and requirements.txt files, as well as exporting a copy of the CSS used in this documentation. See Also For more information on how to use the command, see the Using the Command page.","title":"Built-In Integration With MkDocs"},{"location":"#php-8-ready","text":"Or rather, PHP 8 only . There are lots of programs that can't move to PHP 8 quite yet, but your documentation can benefit from PHP 8 before your codebase does. Simply call the roster command using a PHP 8 binary from your development box, no need to upgrade your servers. See Also For more information on installation and usage requirements, see the Installation page.","title":"PHP 8 Ready"},{"location":"#bleeding-edge","text":"This program is in very early release Roster has only been in development for a few weeks, so there are bound to be edge cases, quirks, and bugs that haven't been worked out. If you spot any, please make a bug report . The nice thing is, even if there are bugs, they won't affect your program. We're only building the documentation files after all!","title":"Bleeding Edge"},{"location":"getting-started/installation/","text":"Installing Roster Roster is available through composer. To install, you can use the following command from the command-line: composer --dev require \"samsara/roster:^0.1\" Or you can add the following entry to your project's composer.json file: 1 { 2 \"require-dev\" : { 3 \"samsara/roster\" : \"^0.1\" 4 } 5 } Dependencies This program requires the samsara/mason and symfony/console packages. These are automatically resolved through composer. Additionally, PHP 8 is required to use this tool . I know that a lot of people haven't migrated yet, but it offers some great features, and to use this program you only need to install it on your dev box, not your application server.","title":"Installation"},{"location":"getting-started/installation/#installing-roster","text":"Roster is available through composer. To install, you can use the following command from the command-line: composer --dev require \"samsara/roster:^0.1\" Or you can add the following entry to your project's composer.json file: 1 { 2 \"require-dev\" : { 3 \"samsara/roster\" : \"^0.1\" 4 } 5 }","title":"Installing Roster"},{"location":"getting-started/installation/#dependencies","text":"This program requires the samsara/mason and symfony/console packages. These are automatically resolved through composer. Additionally, PHP 8 is required to use this tool . I know that a lot of people haven't migrated yet, but it offers some great features, and to use this program you only need to install it on your dev box, not your application server.","title":"Dependencies"},{"location":"getting-started/using-the-command/","text":"Using the Command The most basic usage of the command from the CLI would be: php vendor/bin/roster src Assuming that 'src' is your root sources directory. Options The basic format with options looks like this: php vendor/bin/roster [SOURCE_DIR] [OPTIONS] There are several options currently available on the command. --templates|-t default 'doc-templates/roster-templates' This option allows you to specify a path to alternative templates if you've created your own. This option is ignored if you use the --mkdocs option. NOTE: You must have created your own version of every template file in order to use a different template directory. I'd suggest starting by copying the 'vendor/samsara/roster/docs/doc-templates/roster-templates' folder and making changes. The templating tokens are currently undocumented. --visibility default 'all' values 'all', 'protected', 'public' This option controls which visibility levels get included in the documentation. The setting tells the program what the highest level of visibility is that will be included. So using this option with 'public' will mean that only public methods and parameters are included in the documentation. --prefer-source default false This option controls whether or not Roster trusts the source files or the PHPDoc comments when the two have conflicting information. As the PHPDoc comments have access to a greater variety of data, including things like generic types that are not available in PHP currently, by default the comments are preferred. --with-version default null This option lets you specify a version number. The documentation will be exported into a folder with that name, making it easy to switch tags and then rebuild your docs for multiple versions. If this option is omitted, Roster will look in your composer.json file for a \"version\" value. If it can't find one there, the docs will be exported into the folder 'docs/roster/latest' --with-debug default false This option currently does nothing, but as Roster continue to improve more debugging information will become available during execution. --mkdocs default false This option ignores your templates if you've provided any and builds the documentation so that it's ready for you to immediately run the mkdocs gh-deploy command on it. It uses the doc templates stored in the vendor folder under 'doc-templates/roster-templates-mkdocs'. NOTE: MkDocs requires python, and the templates that are built additionally require the 'pymdown-extensions' module.","title":"Using the Command"},{"location":"getting-started/using-the-command/#using-the-command","text":"The most basic usage of the command from the CLI would be: php vendor/bin/roster src Assuming that 'src' is your root sources directory.","title":"Using the Command"},{"location":"getting-started/using-the-command/#options","text":"The basic format with options looks like this: php vendor/bin/roster [SOURCE_DIR] [OPTIONS] There are several options currently available on the command. --templates|-t default 'doc-templates/roster-templates' This option allows you to specify a path to alternative templates if you've created your own. This option is ignored if you use the --mkdocs option. NOTE: You must have created your own version of every template file in order to use a different template directory. I'd suggest starting by copying the 'vendor/samsara/roster/docs/doc-templates/roster-templates' folder and making changes. The templating tokens are currently undocumented. --visibility default 'all' values 'all', 'protected', 'public' This option controls which visibility levels get included in the documentation. The setting tells the program what the highest level of visibility is that will be included. So using this option with 'public' will mean that only public methods and parameters are included in the documentation. --prefer-source default false This option controls whether or not Roster trusts the source files or the PHPDoc comments when the two have conflicting information. As the PHPDoc comments have access to a greater variety of data, including things like generic types that are not available in PHP currently, by default the comments are preferred. --with-version default null This option lets you specify a version number. The documentation will be exported into a folder with that name, making it easy to switch tags and then rebuild your docs for multiple versions. If this option is omitted, Roster will look in your composer.json file for a \"version\" value. If it can't find one there, the docs will be exported into the folder 'docs/roster/latest' --with-debug default false This option currently does nothing, but as Roster continue to improve more debugging information will become available during execution. --mkdocs default false This option ignores your templates if you've provided any and builds the documentation so that it's ready for you to immediately run the mkdocs gh-deploy command on it. It uses the doc templates stored in the vendor folder under 'doc-templates/roster-templates-mkdocs'. NOTE: MkDocs requires python, and the templates that are built additionally require the 'pymdown-extensions' module.","title":"Options"},{"location":"getting-started/using-the-config-file/","text":"Using the Config File If there is a roster.json file in your project root, Roster will attempt to use that file to configure the documentation build. You can also specify a config file using the --config-file option. Configuration Schema The repository contains a JSON Schema definition, in JSON Schema version 7. This file can be downloaded from here: https://raw.githubusercontent.com/JordanRL/Roster/master/roster-config-schema.config.json This can be used to help your IDE validate your configuration file as you create it. Example Config File With All Options Below is an example config file with all options given values to illustrate how the config file can be written. 1 { 2 \"prefer-source\" : false , 3 \"with-version\" : \"v0.2\" , 4 \"templates\" : \"doc-templates/roster-templates-mkdocs\" , 5 \"mkdocs\" : { 6 \"site-name\" : \"Roster - Docs From The Source\" , 7 \"site-url\" : \"https://jordanrl.github.io/Roster/\" , 8 \"repo-url\" : \"https://github.com/JordanRL/Roster/\" , 9 \"theme\" : \"sphinx-rtd\" , 10 \"auto-deploy\" : true , 11 \"merge-nav\" : true , 12 \"merge-nav-mode\" : \"replace-nav-key\" , 13 \"nav-key\" : \"Source Reference\" 14 }, 15 \"sources\" : [ 16 { 17 \"path\" : \"./src\" , 18 \"visibility\" : \"protected\" , 19 \"aliases\" : [ 20 { 21 \"namespace\" : \"Samsara\\\\Roster\\\\\" , 22 \"alias\" : \"Core\\\\\" 23 } 24 ] 25 }, 26 { 27 \"path\" : \"../RosterModule/src\" , 28 \"visibility\" : \"public\" , 29 \"aliases\" : [ 30 { 31 \"namespace\" : \"Samsara\\\\Roster\\\\\" , 32 \"alias\" : \"Module\\\\\" 33 } 34 ] 35 } 36 ] 37 }","title":"Using the Config File"},{"location":"getting-started/using-the-config-file/#using-the-config-file","text":"If there is a roster.json file in your project root, Roster will attempt to use that file to configure the documentation build. You can also specify a config file using the --config-file option.","title":"Using the Config File"},{"location":"getting-started/using-the-config-file/#configuration-schema","text":"The repository contains a JSON Schema definition, in JSON Schema version 7. This file can be downloaded from here: https://raw.githubusercontent.com/JordanRL/Roster/master/roster-config-schema.config.json This can be used to help your IDE validate your configuration file as you create it.","title":"Configuration Schema"},{"location":"getting-started/using-the-config-file/#example-config-file-with-all-options","text":"Below is an example config file with all options given values to illustrate how the config file can be written. 1 { 2 \"prefer-source\" : false , 3 \"with-version\" : \"v0.2\" , 4 \"templates\" : \"doc-templates/roster-templates-mkdocs\" , 5 \"mkdocs\" : { 6 \"site-name\" : \"Roster - Docs From The Source\" , 7 \"site-url\" : \"https://jordanrl.github.io/Roster/\" , 8 \"repo-url\" : \"https://github.com/JordanRL/Roster/\" , 9 \"theme\" : \"sphinx-rtd\" , 10 \"auto-deploy\" : true , 11 \"merge-nav\" : true , 12 \"merge-nav-mode\" : \"replace-nav-key\" , 13 \"nav-key\" : \"Source Reference\" 14 }, 15 \"sources\" : [ 16 { 17 \"path\" : \"./src\" , 18 \"visibility\" : \"protected\" , 19 \"aliases\" : [ 20 { 21 \"namespace\" : \"Samsara\\\\Roster\\\\\" , 22 \"alias\" : \"Core\\\\\" 23 } 24 ] 25 }, 26 { 27 \"path\" : \"../RosterModule/src\" , 28 \"visibility\" : \"public\" , 29 \"aliases\" : [ 30 { 31 \"namespace\" : \"Samsara\\\\Roster\\\\\" , 32 \"alias\" : \"Module\\\\\" 33 } 34 ] 35 } 36 ] 37 }","title":"Example Config File With All Options"},{"location":"roster/latest/Roster/App/","text":"Samsara\\Roster > App Class App This class configures and sets up the Symfony/Console application so that it is ready for the command to be executed. Inheritance Extends Symfony\\Component\\Console\\Application Implements ResetInterface ResetInterface namespace Symfony\\Contracts\\Service description No description available Variables & Data Class Constants App::NAME NAME value 'Roster Markdown Documentation Generator' App::VERSION VERSION value 'v0.1.0' Methods Constructor public App->__construct() __construct return type mixed (assumed) description No description available Instanced Methods public App->run(?Symfony\\Component\\Console\\Input\\InputInterface $input, ?Symfony\\Component\\Console\\Output\\OutputInterface $output) run $input type ?Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type ?Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available Inherited Static Methods public Application::getAbbreviations(array $names) getAbbreviations $names type array description No description available return type string[][] description No description available getAbbreviations() Description: Returns an array of possible abbreviations given a set of names. Inherited Methods public Application->setDispatcher(Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface $dispatcher) setDispatcher $dispatcher type Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface description No description available return type mixed (assumed) description No description available public Application->setCommandLoader(Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface $commandLoader) setCommandLoader $commandLoader type Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface description No description available return type mixed (assumed) description No description available public Application->getSignalRegistry() getSignalRegistry return type Symfony\\Component\\Console\\SignalRegistry\\SignalRegistry description No description available public Application->setSignalsToDispatchEvent(int $signalsToDispatchEvent) setSignalsToDispatchEvent $signalsToDispatchEvent type int description No description available return type mixed (assumed) description No description available public Application->doRun(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) doRun $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available doRun() Description: Runs the current application. public Application->reset() reset return type mixed (assumed) description No description available public Application->setHelperSet(Symfony\\Component\\Console\\Helper\\HelperSet $helperSet) setHelperSet $helperSet type Symfony\\Component\\Console\\Helper\\HelperSet description No description available return type mixed (assumed) description No description available public Application->getHelperSet() getHelperSet return type HelperSet description No description available getHelperSet() Description: Get the helper set associated with the command. public Application->setDefinition(Symfony\\Component\\Console\\Input\\InputDefinition $definition) setDefinition $definition type Symfony\\Component\\Console\\Input\\InputDefinition description No description available return type mixed (assumed) description No description available public Application->getDefinition() getDefinition return type InputDefinition description No description available getDefinition() Description: Gets the InputDefinition related to this Application. public Application->getHelp() getHelp return type string description No description available getHelp() Description: Gets the help message. public Application->areExceptionsCaught() areExceptionsCaught return type bool description No description available areExceptionsCaught() Description: Gets whether to catch exceptions or not during commands execution. public Application->setCatchExceptions(bool $boolean) setCatchExceptions $boolean type bool description No description available return type mixed (assumed) description No description available public Application->isAutoExitEnabled() isAutoExitEnabled return type bool description No description available isAutoExitEnabled() Description: Gets whether to automatically exit after a command execution or not. public Application->setAutoExit(bool $boolean) setAutoExit $boolean type bool description No description available return type mixed (assumed) description No description available public Application->getName() getName return type string description No description available getName() Description: Gets the name of the application. public Application->setName(string $name) setName $name type string description No description available return type mixed (assumed) description No description available public Application->getVersion() getVersion return type string description No description available getVersion() Description: Gets the application version. public Application->setVersion(string $version) setVersion $version type string description No description available return type mixed (assumed) description No description available public Application->getLongVersion() getLongVersion return type string description No description available getLongVersion() Description: Returns the long version of the application. public Application->register(string $name) register $name type string description No description available return type Command description No description available register() Description: Registers a new command. public Application->addCommands(Command[] $commands) addCommands $commands type Command[] description An array of commands return type mixed (assumed) description No description available addCommands() Description: Adds an array of command objects. If a Command is not enabled it will not be added. public Application->add(Symfony\\Component\\Console\\Command\\Command $command) add $command type Symfony\\Component\\Console\\Command\\Command description No description available return type Command|null description No description available add() Description: Adds a command object. If a command with the same name already exists, it will be overridden. If the command is not enabled it will not be added. public Application->get(string $name) get $name type string description No description available return type Command description No description available get() Description: Returns a registered command by name or alias. public Application->has(string $name) has $name type string description No description available return type bool description No description available has() Description: Returns true if the command exists, false otherwise. public Application->getNamespaces() getNamespaces return type string[] description No description available getNamespaces() Description: Returns an array of all unique namespaces used by currently registered commands. It does not return the global namespace which always exists. public Application->findNamespace(string $namespace) findNamespace $namespace type string description No description available return type string description No description available findNamespace() Description: Finds a registered namespace by a name or an abbreviation. public Application->find(string $name) find $name type string description No description available return type Command description No description available find() Description: Finds a command by name or alias. Contrary to get, this command tries to find the best match if you give it an abbreviation of a name or alias. public Application->all(?string $namespace) all $namespace type ?string description No description available return type Command[] description No description available all() Description: Gets the commands (registered in the given namespace if provided). The array keys are the full names and the values the command instances. public Application->renderThrowable(Throwable $e, Symfony\\Component\\Console\\Output\\OutputInterface $output) renderThrowable $e type Throwable description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type void description No description available public Application->extractNamespace(string $name, ?int $limit) extractNamespace $name type string description No description available $limit type ?int description No description available return type string description No description available extractNamespace() Description: Returns the namespace part of the command name. This method is not part of public API and should not be used directly. public Application->setDefaultCommand(string $commandName, bool $isSingleCommand) setDefaultCommand $commandName type string description No description available $isSingleCommand type bool description No description available return type self description No description available setDefaultCommand() Description: Sets the default Command name. public Application->isSingleCommand() isSingleCommand return type bool description No description available protected Application->doRenderThrowable(Throwable $e, Symfony\\Component\\Console\\Output\\OutputInterface $output) doRenderThrowable $e type Throwable description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type void description No description available protected Application->configureIO(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) configureIO $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type mixed (assumed) description No description available protected Application->doRunCommand(Symfony\\Component\\Console\\Command\\Command $command, Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) doRunCommand $command type Symfony\\Component\\Console\\Command\\Command description No description available $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available doRunCommand() Description: Runs the current command. If an event dispatcher has been attached to the application, events are also dispatched during the life-cycle of the command. protected Application->getCommandName(Symfony\\Component\\Console\\Input\\InputInterface $input) getCommandName $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available return type string|null description No description available getCommandName() Description: Gets the name of the command based on input. protected Application->getDefaultInputDefinition() getDefaultInputDefinition return type InputDefinition description No description available getDefaultInputDefinition() Description: Gets the default input definition. protected Application->getDefaultCommands() getDefaultCommands return type Command[] description No description available getDefaultCommands() Description: Gets the default commands that should always be available. protected Application->getDefaultHelperSet() getDefaultHelperSet return type HelperSet description No description available getDefaultHelperSet() Description: Gets the default helper set with the helpers that should always be available. This documentation was generated with Roster .","title":"App"},{"location":"roster/latest/Roster/App/#samsararoster-app","text":"Class App This class configures and sets up the Symfony/Console application so that it is ready for the command to be executed.","title":"Samsara\\Roster &gt; App"},{"location":"roster/latest/Roster/App/#inheritance","text":"","title":"Inheritance"},{"location":"roster/latest/Roster/App/#extends","text":"Symfony\\Component\\Console\\Application","title":"Extends"},{"location":"roster/latest/Roster/App/#implements","text":"ResetInterface","title":"Implements"},{"location":"roster/latest/Roster/App/#resetinterface","text":"namespace Symfony\\Contracts\\Service description No description available","title":"ResetInterface"},{"location":"roster/latest/Roster/App/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/App/#class-constants","text":"App::NAME","title":"Class Constants"},{"location":"roster/latest/Roster/App/#name","text":"value 'Roster Markdown Documentation Generator' App::VERSION","title":"NAME"},{"location":"roster/latest/Roster/App/#version","text":"value 'v0.1.0'","title":"VERSION"},{"location":"roster/latest/Roster/App/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/App/#constructor","text":"public App->__construct()","title":"Constructor"},{"location":"roster/latest/Roster/App/#__construct","text":"return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/App/#instanced-methods","text":"public App->run(?Symfony\\Component\\Console\\Input\\InputInterface $input, ?Symfony\\Component\\Console\\Output\\OutputInterface $output)","title":"Instanced Methods"},{"location":"roster/latest/Roster/App/#run","text":"$input type ?Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type ?Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available","title":"run"},{"location":"roster/latest/Roster/App/#inherited-static-methods","text":"public Application::getAbbreviations(array $names)","title":"Inherited Static Methods"},{"location":"roster/latest/Roster/App/#getabbreviations","text":"$names type array description No description available return type string[][] description No description available","title":"getAbbreviations"},{"location":"roster/latest/Roster/App/#getabbreviations-description","text":"Returns an array of possible abbreviations given a set of names.","title":"getAbbreviations() Description:"},{"location":"roster/latest/Roster/App/#inherited-methods","text":"public Application->setDispatcher(Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface $dispatcher)","title":"Inherited Methods"},{"location":"roster/latest/Roster/App/#setdispatcher","text":"$dispatcher type Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface description No description available return type mixed (assumed) description No description available public Application->setCommandLoader(Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface $commandLoader)","title":"setDispatcher"},{"location":"roster/latest/Roster/App/#setcommandloader","text":"$commandLoader type Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface description No description available return type mixed (assumed) description No description available public Application->getSignalRegistry()","title":"setCommandLoader"},{"location":"roster/latest/Roster/App/#getsignalregistry","text":"return type Symfony\\Component\\Console\\SignalRegistry\\SignalRegistry description No description available public Application->setSignalsToDispatchEvent(int $signalsToDispatchEvent)","title":"getSignalRegistry"},{"location":"roster/latest/Roster/App/#setsignalstodispatchevent","text":"$signalsToDispatchEvent type int description No description available return type mixed (assumed) description No description available public Application->doRun(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output)","title":"setSignalsToDispatchEvent"},{"location":"roster/latest/Roster/App/#dorun","text":"$input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available","title":"doRun"},{"location":"roster/latest/Roster/App/#dorun-description","text":"Runs the current application. public Application->reset()","title":"doRun() Description:"},{"location":"roster/latest/Roster/App/#reset","text":"return type mixed (assumed) description No description available public Application->setHelperSet(Symfony\\Component\\Console\\Helper\\HelperSet $helperSet)","title":"reset"},{"location":"roster/latest/Roster/App/#sethelperset","text":"$helperSet type Symfony\\Component\\Console\\Helper\\HelperSet description No description available return type mixed (assumed) description No description available public Application->getHelperSet()","title":"setHelperSet"},{"location":"roster/latest/Roster/App/#gethelperset","text":"return type HelperSet description No description available","title":"getHelperSet"},{"location":"roster/latest/Roster/App/#gethelperset-description","text":"Get the helper set associated with the command. public Application->setDefinition(Symfony\\Component\\Console\\Input\\InputDefinition $definition)","title":"getHelperSet() Description:"},{"location":"roster/latest/Roster/App/#setdefinition","text":"$definition type Symfony\\Component\\Console\\Input\\InputDefinition description No description available return type mixed (assumed) description No description available public Application->getDefinition()","title":"setDefinition"},{"location":"roster/latest/Roster/App/#getdefinition","text":"return type InputDefinition description No description available","title":"getDefinition"},{"location":"roster/latest/Roster/App/#getdefinition-description","text":"Gets the InputDefinition related to this Application. public Application->getHelp()","title":"getDefinition() Description:"},{"location":"roster/latest/Roster/App/#gethelp","text":"return type string description No description available","title":"getHelp"},{"location":"roster/latest/Roster/App/#gethelp-description","text":"Gets the help message. public Application->areExceptionsCaught()","title":"getHelp() Description:"},{"location":"roster/latest/Roster/App/#areexceptionscaught","text":"return type bool description No description available","title":"areExceptionsCaught"},{"location":"roster/latest/Roster/App/#areexceptionscaught-description","text":"Gets whether to catch exceptions or not during commands execution. public Application->setCatchExceptions(bool $boolean)","title":"areExceptionsCaught() Description:"},{"location":"roster/latest/Roster/App/#setcatchexceptions","text":"$boolean type bool description No description available return type mixed (assumed) description No description available public Application->isAutoExitEnabled()","title":"setCatchExceptions"},{"location":"roster/latest/Roster/App/#isautoexitenabled","text":"return type bool description No description available","title":"isAutoExitEnabled"},{"location":"roster/latest/Roster/App/#isautoexitenabled-description","text":"Gets whether to automatically exit after a command execution or not. public Application->setAutoExit(bool $boolean)","title":"isAutoExitEnabled() Description:"},{"location":"roster/latest/Roster/App/#setautoexit","text":"$boolean type bool description No description available return type mixed (assumed) description No description available public Application->getName()","title":"setAutoExit"},{"location":"roster/latest/Roster/App/#getname","text":"return type string description No description available","title":"getName"},{"location":"roster/latest/Roster/App/#getname-description","text":"Gets the name of the application. public Application->setName(string $name)","title":"getName() Description:"},{"location":"roster/latest/Roster/App/#setname","text":"$name type string description No description available return type mixed (assumed) description No description available public Application->getVersion()","title":"setName"},{"location":"roster/latest/Roster/App/#getversion","text":"return type string description No description available","title":"getVersion"},{"location":"roster/latest/Roster/App/#getversion-description","text":"Gets the application version. public Application->setVersion(string $version)","title":"getVersion() Description:"},{"location":"roster/latest/Roster/App/#setversion","text":"$version type string description No description available return type mixed (assumed) description No description available public Application->getLongVersion()","title":"setVersion"},{"location":"roster/latest/Roster/App/#getlongversion","text":"return type string description No description available","title":"getLongVersion"},{"location":"roster/latest/Roster/App/#getlongversion-description","text":"Returns the long version of the application. public Application->register(string $name)","title":"getLongVersion() Description:"},{"location":"roster/latest/Roster/App/#register","text":"$name type string description No description available return type Command description No description available","title":"register"},{"location":"roster/latest/Roster/App/#register-description","text":"Registers a new command. public Application->addCommands(Command[] $commands)","title":"register() Description:"},{"location":"roster/latest/Roster/App/#addcommands","text":"$commands type Command[] description An array of commands return type mixed (assumed) description No description available","title":"addCommands"},{"location":"roster/latest/Roster/App/#addcommands-description","text":"Adds an array of command objects. If a Command is not enabled it will not be added. public Application->add(Symfony\\Component\\Console\\Command\\Command $command)","title":"addCommands() Description:"},{"location":"roster/latest/Roster/App/#add","text":"$command type Symfony\\Component\\Console\\Command\\Command description No description available return type Command|null description No description available","title":"add"},{"location":"roster/latest/Roster/App/#add-description","text":"Adds a command object. If a command with the same name already exists, it will be overridden. If the command is not enabled it will not be added. public Application->get(string $name)","title":"add() Description:"},{"location":"roster/latest/Roster/App/#get","text":"$name type string description No description available return type Command description No description available","title":"get"},{"location":"roster/latest/Roster/App/#get-description","text":"Returns a registered command by name or alias. public Application->has(string $name)","title":"get() Description:"},{"location":"roster/latest/Roster/App/#has","text":"$name type string description No description available return type bool description No description available","title":"has"},{"location":"roster/latest/Roster/App/#has-description","text":"Returns true if the command exists, false otherwise. public Application->getNamespaces()","title":"has() Description:"},{"location":"roster/latest/Roster/App/#getnamespaces","text":"return type string[] description No description available","title":"getNamespaces"},{"location":"roster/latest/Roster/App/#getnamespaces-description","text":"Returns an array of all unique namespaces used by currently registered commands. It does not return the global namespace which always exists. public Application->findNamespace(string $namespace)","title":"getNamespaces() Description:"},{"location":"roster/latest/Roster/App/#findnamespace","text":"$namespace type string description No description available return type string description No description available","title":"findNamespace"},{"location":"roster/latest/Roster/App/#findnamespace-description","text":"Finds a registered namespace by a name or an abbreviation. public Application->find(string $name)","title":"findNamespace() Description:"},{"location":"roster/latest/Roster/App/#find","text":"$name type string description No description available return type Command description No description available","title":"find"},{"location":"roster/latest/Roster/App/#find-description","text":"Finds a command by name or alias. Contrary to get, this command tries to find the best match if you give it an abbreviation of a name or alias. public Application->all(?string $namespace)","title":"find() Description:"},{"location":"roster/latest/Roster/App/#all","text":"$namespace type ?string description No description available return type Command[] description No description available","title":"all"},{"location":"roster/latest/Roster/App/#all-description","text":"Gets the commands (registered in the given namespace if provided). The array keys are the full names and the values the command instances. public Application->renderThrowable(Throwable $e, Symfony\\Component\\Console\\Output\\OutputInterface $output)","title":"all() Description:"},{"location":"roster/latest/Roster/App/#renderthrowable","text":"$e type Throwable description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type void description No description available public Application->extractNamespace(string $name, ?int $limit)","title":"renderThrowable"},{"location":"roster/latest/Roster/App/#extractnamespace","text":"$name type string description No description available $limit type ?int description No description available return type string description No description available","title":"extractNamespace"},{"location":"roster/latest/Roster/App/#extractnamespace-description","text":"Returns the namespace part of the command name. This method is not part of public API and should not be used directly. public Application->setDefaultCommand(string $commandName, bool $isSingleCommand)","title":"extractNamespace() Description:"},{"location":"roster/latest/Roster/App/#setdefaultcommand","text":"$commandName type string description No description available $isSingleCommand type bool description No description available return type self description No description available","title":"setDefaultCommand"},{"location":"roster/latest/Roster/App/#setdefaultcommand-description","text":"Sets the default Command name. public Application->isSingleCommand()","title":"setDefaultCommand() Description:"},{"location":"roster/latest/Roster/App/#issinglecommand","text":"return type bool description No description available protected Application->doRenderThrowable(Throwable $e, Symfony\\Component\\Console\\Output\\OutputInterface $output)","title":"isSingleCommand"},{"location":"roster/latest/Roster/App/#dorenderthrowable","text":"$e type Throwable description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type void description No description available protected Application->configureIO(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output)","title":"doRenderThrowable"},{"location":"roster/latest/Roster/App/#configureio","text":"$input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type mixed (assumed) description No description available protected Application->doRunCommand(Symfony\\Component\\Console\\Command\\Command $command, Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output)","title":"configureIO"},{"location":"roster/latest/Roster/App/#doruncommand","text":"$command type Symfony\\Component\\Console\\Command\\Command description No description available $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available","title":"doRunCommand"},{"location":"roster/latest/Roster/App/#doruncommand-description","text":"Runs the current command. If an event dispatcher has been attached to the application, events are also dispatched during the life-cycle of the command. protected Application->getCommandName(Symfony\\Component\\Console\\Input\\InputInterface $input)","title":"doRunCommand() Description:"},{"location":"roster/latest/Roster/App/#getcommandname","text":"$input type Symfony\\Component\\Console\\Input\\InputInterface description No description available return type string|null description No description available","title":"getCommandName"},{"location":"roster/latest/Roster/App/#getcommandname-description","text":"Gets the name of the command based on input. protected Application->getDefaultInputDefinition()","title":"getCommandName() Description:"},{"location":"roster/latest/Roster/App/#getdefaultinputdefinition","text":"return type InputDefinition description No description available","title":"getDefaultInputDefinition"},{"location":"roster/latest/Roster/App/#getdefaultinputdefinition-description","text":"Gets the default input definition. protected Application->getDefaultCommands()","title":"getDefaultInputDefinition() Description:"},{"location":"roster/latest/Roster/App/#getdefaultcommands","text":"return type Command[] description No description available","title":"getDefaultCommands"},{"location":"roster/latest/Roster/App/#getdefaultcommands-description","text":"Gets the default commands that should always be available. protected Application->getDefaultHelperSet()","title":"getDefaultCommands() Description:"},{"location":"roster/latest/Roster/App/#getdefaulthelperset","text":"return type HelperSet description No description available","title":"getDefaultHelperSet"},{"location":"roster/latest/Roster/App/#getdefaulthelperset-description","text":"Gets the default helper set with the helpers that should always be available. This documentation was generated with Roster .","title":"getDefaultHelperSet() Description:"},{"location":"roster/latest/Roster/ConfigBag/","text":"Samsara\\Roster > ConfigBag No description available Methods Static Methods public ConfigBag::getApplicationConfig() getApplicationConfig return type Noodlehaus\\Config description No description available public ConfigBag::getMkdocsConfig() getMkdocsConfig return type Noodlehaus\\Config description No description available public ConfigBag::getRosterConfig() getRosterConfig return type Noodlehaus\\Config description No description available public ConfigBag::setApplicationConfig(Config $applicationConfig) setApplicationConfig $applicationConfig type Config description No description available return type void description No description available public ConfigBag::setMkdocsConfig(Config $mkdocsConfig) setMkdocsConfig $mkdocsConfig type Config description No description available return type void description No description available public ConfigBag::setRosterConfig(Config $rosterConfig) setRosterConfig $rosterConfig type Config description No description available return type void description No description available This documentation was generated with Roster .","title":"ConfigBag"},{"location":"roster/latest/Roster/ConfigBag/#samsararoster-configbag","text":"No description available","title":"Samsara\\Roster &gt; ConfigBag"},{"location":"roster/latest/Roster/ConfigBag/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/ConfigBag/#static-methods","text":"public ConfigBag::getApplicationConfig()","title":"Static Methods"},{"location":"roster/latest/Roster/ConfigBag/#getapplicationconfig","text":"return type Noodlehaus\\Config description No description available public ConfigBag::getMkdocsConfig()","title":"getApplicationConfig"},{"location":"roster/latest/Roster/ConfigBag/#getmkdocsconfig","text":"return type Noodlehaus\\Config description No description available public ConfigBag::getRosterConfig()","title":"getMkdocsConfig"},{"location":"roster/latest/Roster/ConfigBag/#getrosterconfig","text":"return type Noodlehaus\\Config description No description available public ConfigBag::setApplicationConfig(Config $applicationConfig)","title":"getRosterConfig"},{"location":"roster/latest/Roster/ConfigBag/#setapplicationconfig","text":"$applicationConfig type Config description No description available return type void description No description available public ConfigBag::setMkdocsConfig(Config $mkdocsConfig)","title":"setApplicationConfig"},{"location":"roster/latest/Roster/ConfigBag/#setmkdocsconfig","text":"$mkdocsConfig type Config description No description available return type void description No description available public ConfigBag::setRosterConfig(Config $rosterConfig)","title":"setMkdocsConfig"},{"location":"roster/latest/Roster/ConfigBag/#setrosterconfig","text":"$rosterConfig type Config description No description available return type void description No description available This documentation was generated with Roster .","title":"setRosterConfig"},{"location":"roster/latest/Roster/Roster/","text":"Samsara\\Roster > Roster Class Roster This class performs all of the command logic to actually build the documentation with the right options and in the right order. The execute() method is the only one directly invoked by the CLI application, and it dispatches all other function calls. Inheritance Extends Symfony\\Component\\Console\\Command\\Command Variables & Data Class Constants Roster::SUCCESS SUCCESS value 0 Roster::FAILURE FAILURE value 1 Roster::INVALID INVALID value 2 Inherited Properties protected Command::defaultName defaultName type mixed (assumed) value uninitialized protected Command::defaultDescription defaultDescription type mixed (assumed) value uninitialized Methods Constructor public Roster->__construct($rootDir) __construct $rootDir description No description available return type mixed (assumed) description No description available Instanced Methods protected Roster->configure() configure return type void description No description available protected Roster->execute(InputInterface $input, OutputInterface $output) execute $input type InputInterface description No description available $output type OutputInterface description No description available return type int description No description available execute() Description: This function performs all of the application logic. All actions performed by the script are at least started from this function. This method is an implementation of an inherited method. protected Roster->buildMkdocsNav(string $baseExportPath) buildMkdocsNav $baseExportPath type string description The realpath() of the location docs are exported to return type array description No description available buildMkdocsNav() Description: buildMkdocsNav This function takes in the base export path and outputs the namespace information about all the compiled and written document files as an array structured as a tree. This array structure is close, but not quite completely, the format that YAML requires to build the nav option within the mkdocs.yml file. Example 1 $tree = $this->buildMkDocsNav('/path/to/project/docs') 2 echo var_export($tree, true); 3 // Possible Output: 4 // [ 5 // 'Samsara' => [ 6 // 'Roster' => [ 7 // 'TemplateFactory' => 'roster/latest/Samsara/Roster/TemplateFactory.md', 8 // 'Roster' => 'roster/latest/Samsara/Roster/Roster.md', 9 // 'App' => 'roster/latest/Samsara/Roster/App.md' 10 // ] 11 // ] 12 // ] protected Roster->formatNavArrayRecursive(array $nav) formatNavArrayRecursive $nav type array description A return type array description No description available formatNavArrayRecursive() Description: formatNavArrayRecursive() method This function takes a tree array from buildMkdocsNav() are returns an array that has been reformatted for the expected YAML structure in a mkdocs.yml file nav setting. Example 1 $nav = $this->formatNavArrayRecursive($tree) 2 echo var_export($nav, true); 3 // Possible Output: 4 // [ 5 // 0 => [ 6 // 'Samsara' => [ 7 // 0 => [ 8 // 'Roster' => [ 9 // 0 => ['TemplateFactory' => 'roster/latest/Samsara/Roster/TemplateFactory.md'], 10 // 1 => ['Roster' => 'roster/latest/Samsara/Roster/Roster.md'], 11 // 2 => ['App' => 'roster/latest/Samsara/Roster/App.md'] 12 // ] 13 // ] 14 // ] 15 // ] 16 // ] protected Roster->buildNavArrayRecursive(array $parts, int $depth, string $builtString) buildNavArrayRecursive $parts type array description No description available $depth type int description No description available $builtString type string description No description available return type array description No description available buildNavArrayRecursive() Description: buildNavArrayRecursive() method This function takes a flat array and reorganizes it into a tree structure. Example 1 $flat = ['Samsara', 'Roster', 'Processors', 'TemplateProcessor']; 2 $leaf = $this->buildNavArrayRecursive($flat); 3 echo var_export($leaf); 4 // Output: 5 // [ 6 // 'Samsara' => [ 7 // 'Roster' => [ 8 // 'Processors' => [ 9 // 'TemplateProcessor' => 'roster/latest/Samsara/Roster/Processors/TemplateProcessor.md' 10 // ] 11 // ] 12 // ] 13 // ] protected Roster->traverseDirectories(string $dir) traverseDirectories $dir type string description No description available return type array description No description available protected Roster->extractFileData(string $realPath) extractFileData $realPath type string description No description available return type void description No description available protected Roster->createReflectors() createReflectors return type bool description No description available protected Roster->processTemplates(string $templatePath) processTemplates $templatePath type string description No description available return type bool description No description available Inherited Static Methods public Command::getDefaultName() getDefaultName return type string|null description No description available public Command::getDefaultDescription() getDefaultDescription return type ?string description No description available Inherited Methods public Command->ignoreValidationErrors() ignoreValidationErrors return type mixed (assumed) description No description available public Command->setApplication(?Symfony\\Component\\Console\\Application $application) setApplication $application type ?Symfony\\Component\\Console\\Application description No description available return type mixed (assumed) description No description available public Command->setHelperSet(Symfony\\Component\\Console\\Helper\\HelperSet $helperSet) setHelperSet $helperSet type Symfony\\Component\\Console\\Helper\\HelperSet description No description available return type mixed (assumed) description No description available public Command->getHelperSet() getHelperSet return type HelperSet|null description No description available getHelperSet() Description: Gets the helper set. public Command->getApplication() getApplication return type Application|null description No description available getApplication() Description: Gets the application instance for this command. public Command->isEnabled() isEnabled return type bool description No description available isEnabled() Description: Checks whether the command is enabled or not in the current environment. Override this to check for x or y and return false if the command can not run properly under the current conditions. public Command->run(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) run $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available run() Description: Runs the command. The code to execute is either defined directly with the setCode() method or by overriding the execute() method in a sub-class. public Command->setCode(callable $code) setCode $code type callable description A callable(InputInterface $input, OutputInterface $output) return type $this description No description available setCode() Description: Sets the code to execute when running this command. If this method is used, it overrides the code defined in the execute() method. public Command->mergeApplicationDefinition(bool $mergeArgs) mergeApplicationDefinition $mergeArgs type bool description Whether to merge or not the Application definition arguments to Command definition arguments return type mixed (assumed) description No description available mergeApplicationDefinition() Description: Merges the application definition with the command definition. This method is not part of public API and should not be used directly. public Command->setDefinition(array|InputDefinition $definition) setDefinition $definition type array|InputDefinition description An array of argument and option instances or a definition instance return type $this description No description available setDefinition() Description: Sets an array of argument and option instances. public Command->getDefinition() getDefinition return type InputDefinition description No description available getDefinition() Description: Gets the InputDefinition attached to this Command. public Command->getNativeDefinition() getNativeDefinition return type InputDefinition description No description available getNativeDefinition() Description: Gets the InputDefinition to be used to create representations of this Command. Can be overridden to provide the original command representation when it would otherwise be changed by merging with the application InputDefinition. This method is not part of public API and should not be used directly. public Command->addArgument(string $name, int|null $mode, string $description, string|string[]|null $default) addArgument $name type string description No description available $mode type int|null description The argument mode: InputArgument::REQUIRED or InputArgument::OPTIONAL $description type string description No description available $default type string|string[]|null description The default value (for InputArgument::OPTIONAL mode only) return type $this description No description available addArgument() Description: Adds an argument. public Command->addOption(string $name, string|array|null $shortcut, int|null $mode, string $description, string|string[]|bool|null $default) addOption $name type string description No description available $shortcut type string|array|null description The shortcuts, can be null, a string of shortcuts delimited by | or an array of shortcuts $mode type int|null description The option mode: One of the InputOption::VALUE_* constants $description type string description No description available $default type string|string[]|bool|null description The default value (must be null for InputOption::VALUE_NONE) return type $this description No description available addOption() Description: Adds an option. public Command->setName(string $name) setName $name type string description No description available return type $this description No description available setName() Description: Sets the name of the command. This method can set both the namespace and the name if you separate them by a colon (:) command->setName('foo:bar'); public Command->setProcessTitle(string $title) setProcessTitle $title type string description No description available return type $this description No description available setProcessTitle() Description: Sets the process title of the command. This feature should be used only when creating a long process command, like a daemon. public Command->getName() getName return type string|null description No description available getName() Description: Returns the command name. public Command->setHidden(bool $hidden) setHidden $hidden type bool description Whether or not the command should be hidden from the list of commands The default value will be true in Symfony 6.0 return type Command description No description available public Command->isHidden() isHidden return type bool description No description available public Command->setDescription(string $description) setDescription $description type string description No description available return type $this description No description available setDescription() Description: Sets the description for the command. public Command->getDescription() getDescription return type string description No description available getDescription() Description: Returns the description for the command. public Command->setHelp(string $help) setHelp $help type string description No description available return type $this description No description available setHelp() Description: Sets the help for the command. public Command->getHelp() getHelp return type string description No description available getHelp() Description: Returns the help for the command. public Command->getProcessedHelp() getProcessedHelp return type string description No description available getProcessedHelp() Description: Returns the processed help for the command replacing the %command.name% and command.full_name% patterns with the real values dynamically. public Command->setAliases(string[] $aliases) setAliases $aliases type string[] description An array of aliases for the command return type $this description No description available setAliases() Description: Sets the aliases for the command. public Command->getAliases() getAliases return type array description No description available getAliases() Description: Returns the aliases for the command. public Command->getSynopsis(bool $short) getSynopsis $short type bool description Whether to show the short version of the synopsis (with options folded) or not return type string description No description available getSynopsis() Description: Returns the synopsis for the command. public Command->addUsage(string $usage) addUsage $usage type string description No description available return type $this description No description available addUsage() Description: Add a command usage example, it'll be prefixed with the command name. public Command->getUsages() getUsages return type array description No description available getUsages() Description: Returns alternative usages of the command. public Command->getHelper(string $name) getHelper $name type string description No description available return type mixed description No description available getHelper() Description: Gets a helper instance by name. protected Command->interact(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) interact $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type mixed (assumed) description No description available protected Command->initialize(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output) initialize $input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type mixed (assumed) description No description available initialize() Description: Initializes the command after the input has been bound and before the input is validated. This is mainly useful when a lot of commands extends one main command where some things need to be initialized based on the input arguments and options. This documentation was generated with Roster .","title":"Roster"},{"location":"roster/latest/Roster/Roster/#samsararoster-roster","text":"Class Roster This class performs all of the command logic to actually build the documentation with the right options and in the right order. The execute() method is the only one directly invoked by the CLI application, and it dispatches all other function calls.","title":"Samsara\\Roster &gt; Roster"},{"location":"roster/latest/Roster/Roster/#inheritance","text":"","title":"Inheritance"},{"location":"roster/latest/Roster/Roster/#extends","text":"Symfony\\Component\\Console\\Command\\Command","title":"Extends"},{"location":"roster/latest/Roster/Roster/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/Roster/#class-constants","text":"Roster::SUCCESS","title":"Class Constants"},{"location":"roster/latest/Roster/Roster/#success","text":"value 0 Roster::FAILURE","title":"SUCCESS"},{"location":"roster/latest/Roster/Roster/#failure","text":"value 1 Roster::INVALID","title":"FAILURE"},{"location":"roster/latest/Roster/Roster/#invalid","text":"value 2","title":"INVALID"},{"location":"roster/latest/Roster/Roster/#inherited-properties","text":"protected Command::defaultName","title":"Inherited Properties"},{"location":"roster/latest/Roster/Roster/#defaultname","text":"type mixed (assumed) value uninitialized protected Command::defaultDescription","title":"defaultName"},{"location":"roster/latest/Roster/Roster/#defaultdescription","text":"type mixed (assumed) value uninitialized","title":"defaultDescription"},{"location":"roster/latest/Roster/Roster/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Roster/#constructor","text":"public Roster->__construct($rootDir)","title":"Constructor"},{"location":"roster/latest/Roster/Roster/#__construct","text":"$rootDir description No description available return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/Roster/#instanced-methods","text":"protected Roster->configure()","title":"Instanced Methods"},{"location":"roster/latest/Roster/Roster/#configure","text":"return type void description No description available protected Roster->execute(InputInterface $input, OutputInterface $output)","title":"configure"},{"location":"roster/latest/Roster/Roster/#execute","text":"$input type InputInterface description No description available $output type OutputInterface description No description available return type int description No description available","title":"execute"},{"location":"roster/latest/Roster/Roster/#execute-description","text":"This function performs all of the application logic. All actions performed by the script are at least started from this function. This method is an implementation of an inherited method. protected Roster->buildMkdocsNav(string $baseExportPath)","title":"execute() Description:"},{"location":"roster/latest/Roster/Roster/#buildmkdocsnav","text":"$baseExportPath type string description The realpath() of the location docs are exported to return type array description No description available","title":"buildMkdocsNav"},{"location":"roster/latest/Roster/Roster/#buildmkdocsnav-description","text":"buildMkdocsNav This function takes in the base export path and outputs the namespace information about all the compiled and written document files as an array structured as a tree. This array structure is close, but not quite completely, the format that YAML requires to build the nav option within the mkdocs.yml file. Example 1 $tree = $this->buildMkDocsNav('/path/to/project/docs') 2 echo var_export($tree, true); 3 // Possible Output: 4 // [ 5 // 'Samsara' => [ 6 // 'Roster' => [ 7 // 'TemplateFactory' => 'roster/latest/Samsara/Roster/TemplateFactory.md', 8 // 'Roster' => 'roster/latest/Samsara/Roster/Roster.md', 9 // 'App' => 'roster/latest/Samsara/Roster/App.md' 10 // ] 11 // ] 12 // ] protected Roster->formatNavArrayRecursive(array $nav)","title":"buildMkdocsNav() Description:"},{"location":"roster/latest/Roster/Roster/#formatnavarrayrecursive","text":"$nav type array description A return type array description No description available","title":"formatNavArrayRecursive"},{"location":"roster/latest/Roster/Roster/#formatnavarrayrecursive-description","text":"formatNavArrayRecursive() method This function takes a tree array from buildMkdocsNav() are returns an array that has been reformatted for the expected YAML structure in a mkdocs.yml file nav setting. Example 1 $nav = $this->formatNavArrayRecursive($tree) 2 echo var_export($nav, true); 3 // Possible Output: 4 // [ 5 // 0 => [ 6 // 'Samsara' => [ 7 // 0 => [ 8 // 'Roster' => [ 9 // 0 => ['TemplateFactory' => 'roster/latest/Samsara/Roster/TemplateFactory.md'], 10 // 1 => ['Roster' => 'roster/latest/Samsara/Roster/Roster.md'], 11 // 2 => ['App' => 'roster/latest/Samsara/Roster/App.md'] 12 // ] 13 // ] 14 // ] 15 // ] 16 // ] protected Roster->buildNavArrayRecursive(array $parts, int $depth, string $builtString)","title":"formatNavArrayRecursive() Description:"},{"location":"roster/latest/Roster/Roster/#buildnavarrayrecursive","text":"$parts type array description No description available $depth type int description No description available $builtString type string description No description available return type array description No description available","title":"buildNavArrayRecursive"},{"location":"roster/latest/Roster/Roster/#buildnavarrayrecursive-description","text":"buildNavArrayRecursive() method This function takes a flat array and reorganizes it into a tree structure. Example 1 $flat = ['Samsara', 'Roster', 'Processors', 'TemplateProcessor']; 2 $leaf = $this->buildNavArrayRecursive($flat); 3 echo var_export($leaf); 4 // Output: 5 // [ 6 // 'Samsara' => [ 7 // 'Roster' => [ 8 // 'Processors' => [ 9 // 'TemplateProcessor' => 'roster/latest/Samsara/Roster/Processors/TemplateProcessor.md' 10 // ] 11 // ] 12 // ] 13 // ] protected Roster->traverseDirectories(string $dir)","title":"buildNavArrayRecursive() Description:"},{"location":"roster/latest/Roster/Roster/#traversedirectories","text":"$dir type string description No description available return type array description No description available protected Roster->extractFileData(string $realPath)","title":"traverseDirectories"},{"location":"roster/latest/Roster/Roster/#extractfiledata","text":"$realPath type string description No description available return type void description No description available protected Roster->createReflectors()","title":"extractFileData"},{"location":"roster/latest/Roster/Roster/#createreflectors","text":"return type bool description No description available protected Roster->processTemplates(string $templatePath)","title":"createReflectors"},{"location":"roster/latest/Roster/Roster/#processtemplates","text":"$templatePath type string description No description available return type bool description No description available","title":"processTemplates"},{"location":"roster/latest/Roster/Roster/#inherited-static-methods","text":"public Command::getDefaultName()","title":"Inherited Static Methods"},{"location":"roster/latest/Roster/Roster/#getdefaultname","text":"return type string|null description No description available public Command::getDefaultDescription()","title":"getDefaultName"},{"location":"roster/latest/Roster/Roster/#getdefaultdescription","text":"return type ?string description No description available","title":"getDefaultDescription"},{"location":"roster/latest/Roster/Roster/#inherited-methods","text":"public Command->ignoreValidationErrors()","title":"Inherited Methods"},{"location":"roster/latest/Roster/Roster/#ignorevalidationerrors","text":"return type mixed (assumed) description No description available public Command->setApplication(?Symfony\\Component\\Console\\Application $application)","title":"ignoreValidationErrors"},{"location":"roster/latest/Roster/Roster/#setapplication","text":"$application type ?Symfony\\Component\\Console\\Application description No description available return type mixed (assumed) description No description available public Command->setHelperSet(Symfony\\Component\\Console\\Helper\\HelperSet $helperSet)","title":"setApplication"},{"location":"roster/latest/Roster/Roster/#sethelperset","text":"$helperSet type Symfony\\Component\\Console\\Helper\\HelperSet description No description available return type mixed (assumed) description No description available public Command->getHelperSet()","title":"setHelperSet"},{"location":"roster/latest/Roster/Roster/#gethelperset","text":"return type HelperSet|null description No description available","title":"getHelperSet"},{"location":"roster/latest/Roster/Roster/#gethelperset-description","text":"Gets the helper set. public Command->getApplication()","title":"getHelperSet() Description:"},{"location":"roster/latest/Roster/Roster/#getapplication","text":"return type Application|null description No description available","title":"getApplication"},{"location":"roster/latest/Roster/Roster/#getapplication-description","text":"Gets the application instance for this command. public Command->isEnabled()","title":"getApplication() Description:"},{"location":"roster/latest/Roster/Roster/#isenabled","text":"return type bool description No description available","title":"isEnabled"},{"location":"roster/latest/Roster/Roster/#isenabled-description","text":"Checks whether the command is enabled or not in the current environment. Override this to check for x or y and return false if the command can not run properly under the current conditions. public Command->run(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output)","title":"isEnabled() Description:"},{"location":"roster/latest/Roster/Roster/#run","text":"$input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type int description No description available","title":"run"},{"location":"roster/latest/Roster/Roster/#run-description","text":"Runs the command. The code to execute is either defined directly with the setCode() method or by overriding the execute() method in a sub-class. public Command->setCode(callable $code)","title":"run() Description:"},{"location":"roster/latest/Roster/Roster/#setcode","text":"$code type callable description A callable(InputInterface $input, OutputInterface $output) return type $this description No description available","title":"setCode"},{"location":"roster/latest/Roster/Roster/#setcode-description","text":"Sets the code to execute when running this command. If this method is used, it overrides the code defined in the execute() method. public Command->mergeApplicationDefinition(bool $mergeArgs)","title":"setCode() Description:"},{"location":"roster/latest/Roster/Roster/#mergeapplicationdefinition","text":"$mergeArgs type bool description Whether to merge or not the Application definition arguments to Command definition arguments return type mixed (assumed) description No description available","title":"mergeApplicationDefinition"},{"location":"roster/latest/Roster/Roster/#mergeapplicationdefinition-description","text":"Merges the application definition with the command definition. This method is not part of public API and should not be used directly. public Command->setDefinition(array|InputDefinition $definition)","title":"mergeApplicationDefinition() Description:"},{"location":"roster/latest/Roster/Roster/#setdefinition","text":"$definition type array|InputDefinition description An array of argument and option instances or a definition instance return type $this description No description available","title":"setDefinition"},{"location":"roster/latest/Roster/Roster/#setdefinition-description","text":"Sets an array of argument and option instances. public Command->getDefinition()","title":"setDefinition() Description:"},{"location":"roster/latest/Roster/Roster/#getdefinition","text":"return type InputDefinition description No description available","title":"getDefinition"},{"location":"roster/latest/Roster/Roster/#getdefinition-description","text":"Gets the InputDefinition attached to this Command. public Command->getNativeDefinition()","title":"getDefinition() Description:"},{"location":"roster/latest/Roster/Roster/#getnativedefinition","text":"return type InputDefinition description No description available","title":"getNativeDefinition"},{"location":"roster/latest/Roster/Roster/#getnativedefinition-description","text":"Gets the InputDefinition to be used to create representations of this Command. Can be overridden to provide the original command representation when it would otherwise be changed by merging with the application InputDefinition. This method is not part of public API and should not be used directly. public Command->addArgument(string $name, int|null $mode, string $description, string|string[]|null $default)","title":"getNativeDefinition() Description:"},{"location":"roster/latest/Roster/Roster/#addargument","text":"$name type string description No description available $mode type int|null description The argument mode: InputArgument::REQUIRED or InputArgument::OPTIONAL $description type string description No description available $default type string|string[]|null description The default value (for InputArgument::OPTIONAL mode only) return type $this description No description available","title":"addArgument"},{"location":"roster/latest/Roster/Roster/#addargument-description","text":"Adds an argument. public Command->addOption(string $name, string|array|null $shortcut, int|null $mode, string $description, string|string[]|bool|null $default)","title":"addArgument() Description:"},{"location":"roster/latest/Roster/Roster/#addoption","text":"$name type string description No description available $shortcut type string|array|null description The shortcuts, can be null, a string of shortcuts delimited by | or an array of shortcuts $mode type int|null description The option mode: One of the InputOption::VALUE_* constants $description type string description No description available $default type string|string[]|bool|null description The default value (must be null for InputOption::VALUE_NONE) return type $this description No description available","title":"addOption"},{"location":"roster/latest/Roster/Roster/#addoption-description","text":"Adds an option. public Command->setName(string $name)","title":"addOption() Description:"},{"location":"roster/latest/Roster/Roster/#setname","text":"$name type string description No description available return type $this description No description available","title":"setName"},{"location":"roster/latest/Roster/Roster/#setname-description","text":"Sets the name of the command. This method can set both the namespace and the name if you separate them by a colon (:) command->setName('foo:bar'); public Command->setProcessTitle(string $title)","title":"setName() Description:"},{"location":"roster/latest/Roster/Roster/#setprocesstitle","text":"$title type string description No description available return type $this description No description available","title":"setProcessTitle"},{"location":"roster/latest/Roster/Roster/#setprocesstitle-description","text":"Sets the process title of the command. This feature should be used only when creating a long process command, like a daemon. public Command->getName()","title":"setProcessTitle() Description:"},{"location":"roster/latest/Roster/Roster/#getname","text":"return type string|null description No description available","title":"getName"},{"location":"roster/latest/Roster/Roster/#getname-description","text":"Returns the command name. public Command->setHidden(bool $hidden)","title":"getName() Description:"},{"location":"roster/latest/Roster/Roster/#sethidden","text":"$hidden type bool description Whether or not the command should be hidden from the list of commands The default value will be true in Symfony 6.0 return type Command description No description available public Command->isHidden()","title":"setHidden"},{"location":"roster/latest/Roster/Roster/#ishidden","text":"return type bool description No description available public Command->setDescription(string $description)","title":"isHidden"},{"location":"roster/latest/Roster/Roster/#setdescription","text":"$description type string description No description available return type $this description No description available","title":"setDescription"},{"location":"roster/latest/Roster/Roster/#setdescription-description","text":"Sets the description for the command. public Command->getDescription()","title":"setDescription() Description:"},{"location":"roster/latest/Roster/Roster/#getdescription","text":"return type string description No description available","title":"getDescription"},{"location":"roster/latest/Roster/Roster/#getdescription-description","text":"Returns the description for the command. public Command->setHelp(string $help)","title":"getDescription() Description:"},{"location":"roster/latest/Roster/Roster/#sethelp","text":"$help type string description No description available return type $this description No description available","title":"setHelp"},{"location":"roster/latest/Roster/Roster/#sethelp-description","text":"Sets the help for the command. public Command->getHelp()","title":"setHelp() Description:"},{"location":"roster/latest/Roster/Roster/#gethelp","text":"return type string description No description available","title":"getHelp"},{"location":"roster/latest/Roster/Roster/#gethelp-description","text":"Returns the help for the command. public Command->getProcessedHelp()","title":"getHelp() Description:"},{"location":"roster/latest/Roster/Roster/#getprocessedhelp","text":"return type string description No description available","title":"getProcessedHelp"},{"location":"roster/latest/Roster/Roster/#getprocessedhelp-description","text":"Returns the processed help for the command replacing the %command.name% and command.full_name% patterns with the real values dynamically. public Command->setAliases(string[] $aliases)","title":"getProcessedHelp() Description:"},{"location":"roster/latest/Roster/Roster/#setaliases","text":"$aliases type string[] description An array of aliases for the command return type $this description No description available","title":"setAliases"},{"location":"roster/latest/Roster/Roster/#setaliases-description","text":"Sets the aliases for the command. public Command->getAliases()","title":"setAliases() Description:"},{"location":"roster/latest/Roster/Roster/#getaliases","text":"return type array description No description available","title":"getAliases"},{"location":"roster/latest/Roster/Roster/#getaliases-description","text":"Returns the aliases for the command. public Command->getSynopsis(bool $short)","title":"getAliases() Description:"},{"location":"roster/latest/Roster/Roster/#getsynopsis","text":"$short type bool description Whether to show the short version of the synopsis (with options folded) or not return type string description No description available","title":"getSynopsis"},{"location":"roster/latest/Roster/Roster/#getsynopsis-description","text":"Returns the synopsis for the command. public Command->addUsage(string $usage)","title":"getSynopsis() Description:"},{"location":"roster/latest/Roster/Roster/#addusage","text":"$usage type string description No description available return type $this description No description available","title":"addUsage"},{"location":"roster/latest/Roster/Roster/#addusage-description","text":"Add a command usage example, it'll be prefixed with the command name. public Command->getUsages()","title":"addUsage() Description:"},{"location":"roster/latest/Roster/Roster/#getusages","text":"return type array description No description available","title":"getUsages"},{"location":"roster/latest/Roster/Roster/#getusages-description","text":"Returns alternative usages of the command. public Command->getHelper(string $name)","title":"getUsages() Description:"},{"location":"roster/latest/Roster/Roster/#gethelper","text":"$name type string description No description available return type mixed description No description available","title":"getHelper"},{"location":"roster/latest/Roster/Roster/#gethelper-description","text":"Gets a helper instance by name. protected Command->interact(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output)","title":"getHelper() Description:"},{"location":"roster/latest/Roster/Roster/#interact","text":"$input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type mixed (assumed) description No description available protected Command->initialize(Symfony\\Component\\Console\\Input\\InputInterface $input, Symfony\\Component\\Console\\Output\\OutputInterface $output)","title":"interact"},{"location":"roster/latest/Roster/Roster/#initialize","text":"$input type Symfony\\Component\\Console\\Input\\InputInterface description No description available $output type Symfony\\Component\\Console\\Output\\OutputInterface description No description available return type mixed (assumed) description No description available","title":"initialize"},{"location":"roster/latest/Roster/Roster/#initialize-description","text":"Initializes the command after the input has been bound and before the input is validated. This is mainly useful when a lot of commands extends one main command where some things need to be initialized based on the input arguments and options. This documentation was generated with Roster .","title":"initialize() Description:"},{"location":"roster/latest/Roster/TemplateFactory/","text":"Samsara\\Roster > TemplateFactory No description available Methods Static Methods public TemplateFactory::pushTemplate(string $filePath, string $extension) pushTemplate $filePath type string description No description available $extension type string description No description available return type bool description No description available public TemplateFactory::getTemplate(string $name) getTemplate $name type string description No description available return type Samsara\\Roster\\Processors\\TemplateProcessor|false description No description available public TemplateFactory::queueCompile(string $path, Samsara\\Roster\\Processors\\TemplateProcessor|Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor $template, string $extension) queueCompile $path type string description No description available $template type Samsara\\Roster\\Processors\\TemplateProcessor|Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor description No description available $extension type string description No description available return type mixed (assumed) description No description available public TemplateFactory::hasTemplate(string $name) hasTemplate $name type string description No description available return type bool description No description available public TemplateFactory::compileAll(Symfony\\Component\\Console\\Style\\SymfonyStyle $io) compileAll $io type Symfony\\Component\\Console\\Style\\SymfonyStyle description No description available return type mixed (assumed) description No description available public TemplateFactory::getWrittenFiles() getWrittenFiles return type array description No description available public TemplateFactory::writeToDocs(string $writePath, Symfony\\Component\\Console\\Style\\SymfonyStyle $io) writeToDocs $writePath type string description No description available $io type Symfony\\Component\\Console\\Style\\SymfonyStyle description No description available return type bool description No description available This documentation was generated with Roster .","title":"TemplateFactory"},{"location":"roster/latest/Roster/TemplateFactory/#samsararoster-templatefactory","text":"No description available","title":"Samsara\\Roster &gt; TemplateFactory"},{"location":"roster/latest/Roster/TemplateFactory/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/TemplateFactory/#static-methods","text":"public TemplateFactory::pushTemplate(string $filePath, string $extension)","title":"Static Methods"},{"location":"roster/latest/Roster/TemplateFactory/#pushtemplate","text":"$filePath type string description No description available $extension type string description No description available return type bool description No description available public TemplateFactory::getTemplate(string $name)","title":"pushTemplate"},{"location":"roster/latest/Roster/TemplateFactory/#gettemplate","text":"$name type string description No description available return type Samsara\\Roster\\Processors\\TemplateProcessor|false description No description available public TemplateFactory::queueCompile(string $path, Samsara\\Roster\\Processors\\TemplateProcessor|Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor $template, string $extension)","title":"getTemplate"},{"location":"roster/latest/Roster/TemplateFactory/#queuecompile","text":"$path type string description No description available $template type Samsara\\Roster\\Processors\\TemplateProcessor|Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor description No description available $extension type string description No description available return type mixed (assumed) description No description available public TemplateFactory::hasTemplate(string $name)","title":"queueCompile"},{"location":"roster/latest/Roster/TemplateFactory/#hastemplate","text":"$name type string description No description available return type bool description No description available public TemplateFactory::compileAll(Symfony\\Component\\Console\\Style\\SymfonyStyle $io)","title":"hasTemplate"},{"location":"roster/latest/Roster/TemplateFactory/#compileall","text":"$io type Symfony\\Component\\Console\\Style\\SymfonyStyle description No description available return type mixed (assumed) description No description available public TemplateFactory::getWrittenFiles()","title":"compileAll"},{"location":"roster/latest/Roster/TemplateFactory/#getwrittenfiles","text":"return type array description No description available public TemplateFactory::writeToDocs(string $writePath, Symfony\\Component\\Console\\Style\\SymfonyStyle $io)","title":"getWrittenFiles"},{"location":"roster/latest/Roster/TemplateFactory/#writetodocs","text":"$writePath type string description No description available $io type Symfony\\Component\\Console\\Style\\SymfonyStyle description No description available return type bool description No description available This documentation was generated with Roster .","title":"writeToDocs"},{"location":"roster/latest/Roster/Processors/ClassProcessor/","text":"Samsara\\Roster\\Processors > ClassProcessor This class takes in a class reflector and builds out the entire doc for that class, including all subdocs. Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass declaringClass type string value '' protected BaseCodeProcessor->docBlock docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public ClassProcessor->__construct(ReflectionClass $class, string $templateName) __construct $class type ReflectionClass description This is the reflection class of the class that you want to build a doc from. $templateName type string description No description available return type mixed (assumed) description No description available __construct() Description: ClassProcessor constructor Instanced Methods public ClassProcessor->compile() compile return type string description No description available protected ClassProcessor->buildClassInfo() buildClassInfo return type mixed (assumed) description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() getDeclaringClass return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) fixDefaultValue $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) fixOutput $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) templateLoader $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"ClassProcessor"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#samsararosterprocessors-classprocessor","text":"This class takes in a class reflector and builds out the entire doc for that class, including all subdocs.","title":"Samsara\\Roster\\Processors &gt; ClassProcessor"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#inheritance","text":"","title":"Inheritance"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#extends","text":"Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor","title":"Extends"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#inherited-properties","text":"protected BaseCodeProcessor->declaringClass","title":"Inherited Properties"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#declaringclass","text":"type string value '' protected BaseCodeProcessor->docBlock","title":"declaringClass"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#docblock","text":"type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor","title":"docBlock"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#templateprocessor","text":"type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized","title":"templateProcessor"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#constructor","text":"public ClassProcessor->__construct(ReflectionClass $class, string $templateName)","title":"Constructor"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#__construct","text":"$class type ReflectionClass description This is the reflection class of the class that you want to build a doc from. $templateName type string description No description available return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#__construct-description","text":"ClassProcessor constructor","title":"__construct() Description:"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#instanced-methods","text":"public ClassProcessor->compile()","title":"Instanced Methods"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#compile","text":"return type string description No description available protected ClassProcessor->buildClassInfo()","title":"compile"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#buildclassinfo","text":"return type mixed (assumed) description No description available","title":"buildClassInfo"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#inherited-methods","text":"public BaseCodeProcessor->getDeclaringClass()","title":"Inherited Methods"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#getdeclaringclass","text":"return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue)","title":"getDeclaringClass"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#fixdefaultvalue","text":"$defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3)","title":"fixDefaultValue"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#fixoutput","text":"$option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName)","title":"fixOutput"},{"location":"roster/latest/Roster/Processors/ClassProcessor/#templateloader","text":"$templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"templateLoader"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/","text":"Samsara\\Roster\\Processors > InterfaceInlineProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass declaringClass type string value '' protected BaseCodeProcessor->docBlock docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public InterfaceInlineProcessor->__construct(ReflectionClass $interface) __construct $interface type ReflectionClass description No description available return type mixed (assumed) description No description available Instanced Methods public InterfaceInlineProcessor->compile() compile return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() getDeclaringClass return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) fixDefaultValue $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) fixOutput $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) templateLoader $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"InterfaceInlineProcessor"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#samsararosterprocessors-interfaceinlineprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; InterfaceInlineProcessor"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#inheritance","text":"","title":"Inheritance"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#extends","text":"Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor","title":"Extends"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#inherited-properties","text":"protected BaseCodeProcessor->declaringClass","title":"Inherited Properties"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#declaringclass","text":"type string value '' protected BaseCodeProcessor->docBlock","title":"declaringClass"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#docblock","text":"type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor","title":"docBlock"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#templateprocessor","text":"type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized","title":"templateProcessor"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#constructor","text":"public InterfaceInlineProcessor->__construct(ReflectionClass $interface)","title":"Constructor"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#__construct","text":"$interface type ReflectionClass description No description available return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#instanced-methods","text":"public InterfaceInlineProcessor->compile()","title":"Instanced Methods"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#compile","text":"return type string description No description available","title":"compile"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#inherited-methods","text":"public BaseCodeProcessor->getDeclaringClass()","title":"Inherited Methods"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#getdeclaringclass","text":"return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue)","title":"getDeclaringClass"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#fixdefaultvalue","text":"$defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3)","title":"fixDefaultValue"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#fixoutput","text":"$option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName)","title":"fixOutput"},{"location":"roster/latest/Roster/Processors/InterfaceInlineProcessor/#templateloader","text":"$templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"templateLoader"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/","text":"Samsara\\Roster\\Processors > MethodArgumentDetailProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass declaringClass type string value '' protected BaseCodeProcessor->docBlock docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public MethodArgumentDetailProcessor->__construct(array $parameters, Samsara\\Mason\\DocBlockProcessor $docBlockProcessor) __construct $parameters type array description No description available $docBlockProcessor type Samsara\\Mason\\DocBlockProcessor description No description available return type mixed (assumed) description No description available Instanced Methods public MethodArgumentDetailProcessor->compile() compile return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() getDeclaringClass return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) fixDefaultValue $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) fixOutput $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) templateLoader $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"MethodArgumentDetailProcessor"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#samsararosterprocessors-methodargumentdetailprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; MethodArgumentDetailProcessor"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#inheritance","text":"","title":"Inheritance"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#extends","text":"Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor","title":"Extends"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#inherited-properties","text":"protected BaseCodeProcessor->declaringClass","title":"Inherited Properties"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#declaringclass","text":"type string value '' protected BaseCodeProcessor->docBlock","title":"declaringClass"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#docblock","text":"type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor","title":"docBlock"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#templateprocessor","text":"type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized","title":"templateProcessor"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#constructor","text":"public MethodArgumentDetailProcessor->__construct(array $parameters, Samsara\\Mason\\DocBlockProcessor $docBlockProcessor)","title":"Constructor"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#__construct","text":"$parameters type array description No description available $docBlockProcessor type Samsara\\Mason\\DocBlockProcessor description No description available return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#instanced-methods","text":"public MethodArgumentDetailProcessor->compile()","title":"Instanced Methods"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#compile","text":"return type string description No description available","title":"compile"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#inherited-methods","text":"public BaseCodeProcessor->getDeclaringClass()","title":"Inherited Methods"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#getdeclaringclass","text":"return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue)","title":"getDeclaringClass"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#fixdefaultvalue","text":"$defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3)","title":"fixDefaultValue"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#fixoutput","text":"$option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName)","title":"fixOutput"},{"location":"roster/latest/Roster/Processors/MethodArgumentDetailProcessor/#templateloader","text":"$templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"templateLoader"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/","text":"Samsara\\Roster\\Processors > MethodArgumentProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass declaringClass type string value '' protected BaseCodeProcessor->docBlock docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public MethodArgumentProcessor->__construct(array $parameters, Samsara\\Mason\\DocBlockProcessor $docBlockProcessor) __construct $parameters type array description No description available $docBlockProcessor type Samsara\\Mason\\DocBlockProcessor description No description available return type mixed (assumed) description No description available Instanced Methods public MethodArgumentProcessor->compile() compile return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() getDeclaringClass return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) fixDefaultValue $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) fixOutput $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) templateLoader $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"MethodArgumentProcessor"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#samsararosterprocessors-methodargumentprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; MethodArgumentProcessor"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#inheritance","text":"","title":"Inheritance"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#extends","text":"Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor","title":"Extends"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#inherited-properties","text":"protected BaseCodeProcessor->declaringClass","title":"Inherited Properties"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#declaringclass","text":"type string value '' protected BaseCodeProcessor->docBlock","title":"declaringClass"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#docblock","text":"type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor","title":"docBlock"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#templateprocessor","text":"type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized","title":"templateProcessor"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#constructor","text":"public MethodArgumentProcessor->__construct(array $parameters, Samsara\\Mason\\DocBlockProcessor $docBlockProcessor)","title":"Constructor"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#__construct","text":"$parameters type array description No description available $docBlockProcessor type Samsara\\Mason\\DocBlockProcessor description No description available return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#instanced-methods","text":"public MethodArgumentProcessor->compile()","title":"Instanced Methods"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#compile","text":"return type string description No description available","title":"compile"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#inherited-methods","text":"public BaseCodeProcessor->getDeclaringClass()","title":"Inherited Methods"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#getdeclaringclass","text":"return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue)","title":"getDeclaringClass"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#fixdefaultvalue","text":"$defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3)","title":"fixDefaultValue"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#fixoutput","text":"$option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName)","title":"fixOutput"},{"location":"roster/latest/Roster/Processors/MethodArgumentProcessor/#templateloader","text":"$templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"templateLoader"},{"location":"roster/latest/Roster/Processors/MethodProcessor/","text":"Samsara\\Roster\\Processors > MethodProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass declaringClass type string value '' protected BaseCodeProcessor->docBlock docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public MethodProcessor->__construct(ReflectionMethod $method, string $templateName) __construct $method type ReflectionMethod description No description available $templateName type string description No description available return type mixed (assumed) description No description available Instanced Methods public MethodProcessor->compile() compile return type string description No description available protected MethodProcessor->buildMethodInfo() buildMethodInfo return type mixed (assumed) description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() getDeclaringClass return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) fixDefaultValue $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) fixOutput $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) templateLoader $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"MethodProcessor"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#samsararosterprocessors-methodprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; MethodProcessor"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#inheritance","text":"","title":"Inheritance"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#extends","text":"Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor","title":"Extends"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#inherited-properties","text":"protected BaseCodeProcessor->declaringClass","title":"Inherited Properties"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#declaringclass","text":"type string value '' protected BaseCodeProcessor->docBlock","title":"declaringClass"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#docblock","text":"type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor","title":"docBlock"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#templateprocessor","text":"type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized","title":"templateProcessor"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#constructor","text":"public MethodProcessor->__construct(ReflectionMethod $method, string $templateName)","title":"Constructor"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#__construct","text":"$method type ReflectionMethod description No description available $templateName type string description No description available return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#instanced-methods","text":"public MethodProcessor->compile()","title":"Instanced Methods"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#compile","text":"return type string description No description available protected MethodProcessor->buildMethodInfo()","title":"compile"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#buildmethodinfo","text":"return type mixed (assumed) description No description available","title":"buildMethodInfo"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#inherited-methods","text":"public BaseCodeProcessor->getDeclaringClass()","title":"Inherited Methods"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#getdeclaringclass","text":"return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue)","title":"getDeclaringClass"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#fixdefaultvalue","text":"$defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3)","title":"fixDefaultValue"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#fixoutput","text":"$option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName)","title":"fixOutput"},{"location":"roster/latest/Roster/Processors/MethodProcessor/#templateloader","text":"$templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"templateLoader"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/","text":"Samsara\\Roster\\Processors > PropertyProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass declaringClass type string value '' protected BaseCodeProcessor->docBlock docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public PropertyProcessor->__construct(ReflectionProperty $property, string $templateName) __construct $property type ReflectionProperty description No description available $templateName type string description No description available return type mixed (assumed) description No description available Instanced Methods public PropertyProcessor->compile() compile return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() getDeclaringClass return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) fixDefaultValue $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) fixOutput $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) templateLoader $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"PropertyProcessor"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#samsararosterprocessors-propertyprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; PropertyProcessor"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#inheritance","text":"","title":"Inheritance"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#extends","text":"Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor","title":"Extends"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#inherited-properties","text":"protected BaseCodeProcessor->declaringClass","title":"Inherited Properties"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#declaringclass","text":"type string value '' protected BaseCodeProcessor->docBlock","title":"declaringClass"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#docblock","text":"type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor","title":"docBlock"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#templateprocessor","text":"type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized","title":"templateProcessor"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#constructor","text":"public PropertyProcessor->__construct(ReflectionProperty $property, string $templateName)","title":"Constructor"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#__construct","text":"$property type ReflectionProperty description No description available $templateName type string description No description available return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#instanced-methods","text":"public PropertyProcessor->compile()","title":"Instanced Methods"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#compile","text":"return type string description No description available","title":"compile"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#inherited-methods","text":"public BaseCodeProcessor->getDeclaringClass()","title":"Inherited Methods"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#getdeclaringclass","text":"return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue)","title":"getDeclaringClass"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#fixdefaultvalue","text":"$defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3)","title":"fixDefaultValue"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#fixoutput","text":"$option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName)","title":"fixOutput"},{"location":"roster/latest/Roster/Processors/PropertyProcessor/#templateloader","text":"$templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"templateLoader"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/","text":"Samsara\\Roster\\Processors > TemplateProcessor No description available Methods Constructor public TemplateProcessor->__construct(string $template) __construct $template type string description No description available return type mixed (assumed) description No description available Instanced Methods public TemplateProcessor->has($key) has $key description No description available return type mixed (assumed) description No description available public TemplateProcessor->markHas($key) markHas $key description No description available return type mixed (assumed) description No description available public TemplateProcessor->supplyReplacement(string $key, Samsara\\Roster\\Processors\\TemplateProcessor|array|string $replacement) supplyReplacement $key type string description No description available $replacement type Samsara\\Roster\\Processors\\TemplateProcessor|array|string description No description available return type mixed (assumed) description No description available public TemplateProcessor->compile() compile return type string description No description available protected TemplateProcessor->buildHasBlocks($template, $depth) buildHasBlocks $template description No description available $depth description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"TemplateProcessor"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#samsararosterprocessors-templateprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; TemplateProcessor"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#constructor","text":"public TemplateProcessor->__construct(string $template)","title":"Constructor"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#__construct","text":"$template type string description No description available return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#instanced-methods","text":"public TemplateProcessor->has($key)","title":"Instanced Methods"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#has","text":"$key description No description available return type mixed (assumed) description No description available public TemplateProcessor->markHas($key)","title":"has"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#markhas","text":"$key description No description available return type mixed (assumed) description No description available public TemplateProcessor->supplyReplacement(string $key, Samsara\\Roster\\Processors\\TemplateProcessor|array|string $replacement)","title":"markHas"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#supplyreplacement","text":"$key type string description No description available $replacement type Samsara\\Roster\\Processors\\TemplateProcessor|array|string description No description available return type mixed (assumed) description No description available public TemplateProcessor->compile()","title":"supplyReplacement"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#compile","text":"return type string description No description available protected TemplateProcessor->buildHasBlocks($template, $depth)","title":"compile"},{"location":"roster/latest/Roster/Processors/TemplateProcessor/#buildhasblocks","text":"$template description No description available $depth description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"buildHasBlocks"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/","text":"Samsara\\Roster\\Processors > TraitInlineProcessor No description available Inheritance Extends Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor Variables & Data Inherited Properties protected BaseCodeProcessor->declaringClass declaringClass type string value '' protected BaseCodeProcessor->docBlock docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Constructor public TraitInlineProcessor->__construct(ReflectionClass $trait, array $aliases) __construct $trait type ReflectionClass description No description available $aliases type array description No description available return type mixed (assumed) description No description available Instanced Methods public TraitInlineProcessor->compile() compile return type string description No description available Inherited Methods public BaseCodeProcessor->getDeclaringClass() getDeclaringClass return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) fixDefaultValue $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) fixOutput $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) templateLoader $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"TraitInlineProcessor"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#samsararosterprocessors-traitinlineprocessor","text":"No description available","title":"Samsara\\Roster\\Processors &gt; TraitInlineProcessor"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#inheritance","text":"","title":"Inheritance"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#extends","text":"Samsara\\Roster\\Processors\\Base\\BaseCodeProcessor","title":"Extends"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#inherited-properties","text":"protected BaseCodeProcessor->declaringClass","title":"Inherited Properties"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#declaringclass","text":"type string value '' protected BaseCodeProcessor->docBlock","title":"declaringClass"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#docblock","text":"type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor","title":"docBlock"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#templateprocessor","text":"type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized","title":"templateProcessor"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#constructor","text":"public TraitInlineProcessor->__construct(ReflectionClass $trait, array $aliases)","title":"Constructor"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#__construct","text":"$trait type ReflectionClass description No description available $aliases type array description No description available return type mixed (assumed) description No description available","title":"__construct"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#instanced-methods","text":"public TraitInlineProcessor->compile()","title":"Instanced Methods"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#compile","text":"return type string description No description available","title":"compile"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#inherited-methods","text":"public BaseCodeProcessor->getDeclaringClass()","title":"Inherited Methods"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#getdeclaringclass","text":"return type string description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue)","title":"getDeclaringClass"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#fixdefaultvalue","text":"$defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3)","title":"fixDefaultValue"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#fixoutput","text":"$option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName)","title":"fixOutput"},{"location":"roster/latest/Roster/Processors/TraitInlineProcessor/#templateloader","text":"$templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"templateLoader"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/","text":"Samsara\\Roster\\Processors\\Base > BaseCodeProcessor No description available Variables & Data Properties protected BaseCodeProcessor->declaringClass declaringClass type string value '' protected BaseCodeProcessor->docBlock docBlock type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor templateProcessor type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized Methods Instanced Methods public BaseCodeProcessor->getDeclaringClass() getDeclaringClass return type string description No description available public BaseCodeProcessor->compile() compile return type mixed (assumed) description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue) fixDefaultValue $defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3) fixOutput $option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName) templateLoader $templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"BaseCodeProcessor"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#samsararosterprocessorsbase-basecodeprocessor","text":"No description available","title":"Samsara\\Roster\\Processors\\Base &gt; BaseCodeProcessor"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#variables-data","text":"","title":"Variables &amp; Data"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#properties","text":"protected BaseCodeProcessor->declaringClass","title":"Properties"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#declaringclass","text":"type string value '' protected BaseCodeProcessor->docBlock","title":"declaringClass"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#docblock","text":"type Samsara\\Mason\\DocBlockProcessor value uninitialized protected BaseCodeProcessor->templateProcessor","title":"docBlock"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#templateprocessor","text":"type Samsara\\Roster\\Processors\\TemplateProcessor value uninitialized","title":"templateProcessor"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#methods","text":"","title":"Methods"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#instanced-methods","text":"public BaseCodeProcessor->getDeclaringClass()","title":"Instanced Methods"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#getdeclaringclass","text":"return type string description No description available public BaseCodeProcessor->compile()","title":"getDeclaringClass"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#compile","text":"return type mixed (assumed) description No description available protected BaseCodeProcessor->fixDefaultValue($defaultValue)","title":"compile"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#fixdefaultvalue","text":"$defaultValue description No description available return type string description No description available protected BaseCodeProcessor->fixOutput($option1, $option2, $option3)","title":"fixDefaultValue"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#fixoutput","text":"$option1 description No description available $option2 description No description available $option3 description No description available return type mixed (assumed) description No description available protected BaseCodeProcessor->templateLoader(string $templateName)","title":"fixOutput"},{"location":"roster/latest/Roster/Processors/Base/BaseCodeProcessor/#templateloader","text":"$templateName type string description No description available return type mixed (assumed) description No description available This documentation was generated with Roster .","title":"templateLoader"}]}